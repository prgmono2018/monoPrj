{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitProjects\\\\images-gallery-master\\\\src\\\\components\\\\ImageGallery.js\";\nimport React, { Component } from 'react';\nimport * as _ from 'lodash';\nimport axios from 'axios';\nimport config from '../config';\nimport Image from './Image';\n\nclass ImageGallery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePicture = ({\n      target\n    }, coordinates) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(target.files[0]);\n\n      fileReader.onload = e => {\n        this.setState(state => (_.set(state.data, coordinates, e.target.result), state));\n        let data = new FormData();\n        data.append('file', target.files[0]);\n        data.append('delete', this.state.delete);\n        this.switchFile(data);\n      };\n    };\n\n    this.switchFile = async data => {\n      try {\n        let res = await axios.post(process.env.REACT_APP_SWITCH_FILE, data);\n\n        if (res.status == 200) {\n          //console.log(\"success:\"+res);\n          this.setState({\n            refresh: true\n          }); //console.log(\"set refresh to true\");\n        } else {\n          console.log(\"Failed:\" + res);\n        }\n      } catch (e) {\n        console.log(\"Failed:\" + e);\n      }\n    };\n\n    this.savePicToDelete = ({\n      target\n    }, coordinates) => {\n      this.setState({\n        delete: target.dataset.name\n      });\n    };\n\n    this.componentDidUpdate = () => {\n      if (this.state.refresh === true) {\n        //console.log(\">> in if componentDidUpdate\");\n        this.getListFromServer();\n        this.setState({\n          refresh: false\n        });\n      }\n    };\n\n    this.getListFromServer = () => {\n      var config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      axios.get(process.env.REACT_APP_PICLIST, config).then(json => {\n        //console.log(json);\n        this.setState({\n          data: json\n        });\n      }).catch(error => {\n        console.log(\"Error\" + error);\n      });\n    };\n\n    this.componentDidMount = () => {\n      //console.log(\">> componentDidMount=\"+this.state.refresh);\n      this.getListFromServer();\n    };\n\n    this.isImage = resource => {\n      return new RegExp(\".(\".concat(config.extensions.join('|'), \")$\")).test(resource) || resource.startsWith('data:image');\n    };\n\n    this.renderImages = (resource, coordinates) => {\n      //console.log(\"resource=\"+resource);\n      if (_.isArray(resource)) {\n        return _.map(resource, (res, index) => this.renderImages(res, [...coordinates, index]));\n      }\n\n      if (_.isObject(resource)) {\n        return _.keys(resource).map(objkey => this.renderImages(resource[objkey], [...coordinates, objkey]));\n      }\n\n      if (_.isString(resource) && this.isImage(resource)) {\n        return React.createElement(Image, {\n          key: coordinates.join(),\n          image: this.server + \"/\" + resource,\n          handleChangePicture: this.handleChangePicture,\n          coordinates: coordinates,\n          savePicToDelete: this.savePicToDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderResource = () => {};\n\n    this.state = {\n      data: null,\n      delete: null,\n      refresh: true\n    };\n    this.server = process.env.BACKEND_SERVER;\n    this.handleChangePicture = this.handleChangePicture.bind(this);\n    this.getListFromServer = this.getListFromServer.bind(this);\n    this.switchFile = this.switchFile.bind(this);\n  }\n  /**\r\n   * Sets the selected image in the data object, uses the coordinates to find the image path.\r\n   *  \r\n   * @param event The event.\r\n   * @param coordinates The image's path in the data object.\r\n   */\n\n\n  render() {\n    this.renderResource();\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.data ? this.renderImages(this.state.data, []) : React.createElement(\"div\", {\n      className: \"spiner-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Loading...\"))));\n  }\n\n}\n\nexport default ImageGallery;","map":{"version":3,"sources":["C:\\gitProjects\\images-gallery-master\\src\\components\\ImageGallery.js"],"names":["React","Component","_","axios","config","Image","ImageGallery","constructor","props","handleChangePicture","target","coordinates","fileReader","FileReader","readAsDataURL","files","onload","e","setState","state","set","data","result","FormData","append","delete","switchFile","res","post","process","env","REACT_APP_SWITCH_FILE","status","refresh","console","log","savePicToDelete","dataset","name","componentDidUpdate","getListFromServer","headers","get","REACT_APP_PICLIST","then","json","catch","error","componentDidMount","isImage","resource","RegExp","extensions","join","test","startsWith","renderImages","isArray","map","index","isObject","keys","objkey","isString","server","renderResource","BACKEND_SERVER","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as _ from 'lodash';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport Image from './Image';\r\n\r\n\r\nclass ImageGallery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data :null, delete:null,refresh:true};\r\n        this.server=process.env.BACKEND_SERVER;\r\n        this.handleChangePicture=this.handleChangePicture.bind(this);\r\n        this.getListFromServer=this.getListFromServer.bind(this);\r\n        this.switchFile=this.switchFile.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Sets the selected image in the data object, uses the coordinates to find the image path.\r\n     *  \r\n     * @param event The event.\r\n     * @param coordinates The image's path in the data object.\r\n     */\r\n    handleChangePicture = ({ target }, coordinates) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            this.setState(state => (_.set(state.data, coordinates, e.target.result), state));\r\n            let data = new FormData();\r\n            data.append('file', target.files[0]);\r\n            data.append('delete', this.state.delete);\r\n            this.switchFile(data);\r\n         \r\n        };\r\n       \r\n    };\r\n\r\n switchFile=async (data)=>{\r\n     try{\r\n            let res=  await axios.post(process.env.REACT_APP_SWITCH_FILE, data);\r\n            if (res.status==200){\r\n                //console.log(\"success:\"+res);\r\n                this.setState({refresh:true});\r\n                //console.log(\"set refresh to true\");\r\n            }\r\n            else{\r\n                console.log(\"Failed:\"+res);\r\n            }\r\n     }catch(e)\r\n     {\r\n        console.log(\"Failed:\"+e);\r\n     }\r\n\r\n\r\n}\r\n    savePicToDelete = ({ target }, coordinates) => {\r\n\r\n       this.setState({delete:target.dataset.name})\r\n      \r\n    };\r\n\r\ncomponentDidUpdate=()=>  { \r\n\r\n    if (this.state.refresh===true){\r\n        //console.log(\">> in if componentDidUpdate\");\r\n        this.getListFromServer();\r\n        this.setState({refresh: false});\r\n      }\r\n}\r\ngetListFromServer=()=>{\r\n    var config = {\r\n        headers: { 'Access-Control-Allow-Origin': '*' },\r\n      };\r\n    axios.get(process.env.REACT_APP_PICLIST,config)\r\n    .then(\r\n     \r\n                json => {\r\n                    //console.log(json);\r\n                    this.setState({data:json});\r\n   \r\n                }\r\n    ).catch(error => {\r\n       console.log(\"Error\"+error)\r\n      })\r\n\r\n\r\n}\r\n\r\n    //componentWillMount=()=>console.log(\"componentWillMount\");\r\n    componentDidMount=()=>{\r\n        //console.log(\">> componentDidMount=\"+this.state.refresh);\r\n        this.getListFromServer();\r\n     \r\n\r\n    }\r\n    isImage = (resource) => {\r\n        return (new RegExp(`.(${config.extensions.join('|')})$`)).test(resource) || resource.startsWith('data:image');\r\n    };\r\n\r\n    /**\r\n     * A Recoursive function that goes over all the elements in the resource \r\n     * and for each element that represents an image - \r\n     * returns an Image Component with the path of the element in the data object (coordinates).\r\n     * \r\n     * @param resource The resource to generate images from.\r\n     * @param coordinates The resource's path in the data object.\r\n     * @return Returns array of Image components.\r\n     */\r\n    renderImages = (resource, coordinates) => {\r\n        \r\n        //console.log(\"resource=\"+resource);\r\n        if (_.isArray(resource)) {\r\n            return _.map(resource, (res, index) => this.renderImages(res, [...coordinates, index]));\r\n        }\r\n        if (_.isObject(resource)) {\r\n            return _.keys(resource).map((objkey) => this.renderImages(resource[objkey], [...coordinates, objkey]));\r\n        }\r\n        if (_.isString(resource) && (this.isImage(resource))) {\r\n            return <Image\r\n                key={coordinates.join()}\r\n                image={this.server+\"/\"+resource}\r\n                handleChangePicture={this.handleChangePicture}\r\n                coordinates={coordinates} \r\n                savePicToDelete={this.savePicToDelete}\r\n                />;\r\n        }\r\n        \r\n    };\r\nrenderResource=()=>{\r\n\r\n \r\n}\r\n    render() {\r\n        \r\n        this.renderResource();\r\n        return <div className=\"row\">\r\n            {this.state.data ? this.renderImages(this.state.data, []) :\r\n                <div className=\"spiner-wrapper\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>}\r\n        </div>;\r\n    };\r\n}\r\n\r\nexport default ImageGallery;\r\n"]},"metadata":{},"sourceType":"module"}