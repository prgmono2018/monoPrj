{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\images-gallery-master\\\\src\\\\components\\\\ImageGallery.js\";\nimport React, { Component } from 'react';\nimport * as _ from 'lodash';\nimport axios from 'axios';\nimport config from '../config';\nimport data from '../assets/data';\nimport Image from './Image';\n\nclass ImageGallery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePicture = ({\n      target\n    }, coordinates) => {\n      const fileReader = new FileReader(); //console.log(\"ggggg\");\n\n      fileReader.readAsDataURL(target.files[0]);\n\n      fileReader.onload = e => {\n        this.setState(state => (_.set(state.data, coordinates, e.target.result), state));\n      };\n    };\n\n    this.isImage = resource => {\n      return new RegExp(\".(\".concat(config.extensions.join('|'), \")$\")).test(resource) || resource.startsWith('data:image');\n    };\n\n    this.renderImages = (resource, coordinates) => {\n      //console.log(\"resource=\"+resource);\n      if (_.isArray(resource)) {\n        return _.map(resource, (res, index) => this.renderImages(res, [...coordinates, index]));\n      }\n\n      if (_.isObject(resource)) {\n        return _.keys(resource).map(objkey => this.renderImages(resource[objkey], [...coordinates, objkey]));\n      }\n\n      if (_.isString(resource) && this.isImage(resource)) {\n        return React.createElement(Image, {\n          key: coordinates.join(),\n          image: resource,\n          handleChangePicture: this.handleChangePicture,\n          coordinates: coordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderResource = () => {\n      axios.get(\"http://localhost:8000/sliderData\").then(json => {\n        if (this.mounted) {\n          this.setState({\n            sliderData: json.data\n          });\n        }\n      }).catch(error => {\n        console.log('blaaaaaaaaaaaaaaaaaa');\n        console.log('error', error.response.status);\n        console.log('errorType', typeof error);\n        401;\n        console.log('error', Object.assign({}, error));\n        console.log('getOwnPropertyNames', Object.getOwnPropertyNames(error));\n        console.log('stackProperty', Object.getOwnPropertyDescriptor(error, 'stack'));\n        console.log('messageProperty', Object.getOwnPropertyDescriptor(error, 'message'));\n        console.log('stackEnumerable', error.propertyIsEnumerable('stack'));\n        console.log('messageEnumerable', error.propertyIsEnumerable('message'));\n\n        switch (error.type) {\n          case 'password_invalid':\n            dispatch(PasswordUpdateFailure('Incorrect current password'));\n            break;\n\n          case 'invalid_attributes':\n            dispatch(PasswordUpdateFailure('Fields must not be blank'));\n            break;\n        }\n      });\n    };\n\n    this.state = {\n      data\n    };\n  }\n  /**\r\n   * Sets the selected image in the data object, uses the coordinates to find the image path.\r\n   *  \r\n   * @param event The event.\r\n   * @param coordinates The image's path in the data object.\r\n   */\n\n\n  render() {\n    console.log(\"kk=\" + this.state.data);\n    this.renderResource();\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.data ? this.renderImages(this.state.data, []) : React.createElement(\"div\", {\n      className: \"spiner-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Loading...\"))));\n  }\n\n}\n\nexport default ImageGallery;","map":{"version":3,"sources":["C:\\projects\\images-gallery-master\\src\\components\\ImageGallery.js"],"names":["React","Component","_","axios","config","data","Image","ImageGallery","constructor","props","handleChangePicture","target","coordinates","fileReader","FileReader","readAsDataURL","files","onload","e","setState","state","set","result","isImage","resource","RegExp","extensions","join","test","startsWith","renderImages","isArray","map","res","index","isObject","keys","objkey","isString","renderResource","get","then","json","mounted","sliderData","catch","error","console","log","response","status","Object","assign","getOwnPropertyNames","getOwnPropertyDescriptor","propertyIsEnumerable","type","dispatch","PasswordUpdateFailure","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as _ from 'lodash';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport data from '../assets/data';\r\nimport Image from './Image';\r\n\r\n\r\nclass ImageGallery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data }\r\n    }\r\n\r\n    /**\r\n     * Sets the selected image in the data object, uses the coordinates to find the image path.\r\n     *  \r\n     * @param event The event.\r\n     * @param coordinates The image's path in the data object.\r\n     */\r\n    handleChangePicture = ({ target }, coordinates) => {\r\n        const fileReader = new FileReader();\r\n        //console.log(\"ggggg\");\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            this.setState(state => (_.set(state.data, coordinates, e.target.result), state));\r\n        };\r\n    };\r\n\r\n    isImage = (resource) => {\r\n        return (new RegExp(`.(${config.extensions.join('|')})$`)).test(resource) || resource.startsWith('data:image');\r\n    };\r\n\r\n    /**\r\n     * A Recoursive function that goes over all the elements in the resource \r\n     * and for each element that represents an image - \r\n     * returns an Image Component with the path of the element in the data object (coordinates).\r\n     * \r\n     * @param resource The resource to generate images from.\r\n     * @param coordinates The resource's path in the data object.\r\n     * @return Returns array of Image components.\r\n     */\r\n    renderImages = (resource, coordinates) => {\r\n        \r\n        //console.log(\"resource=\"+resource);\r\n        if (_.isArray(resource)) {\r\n            return _.map(resource, (res, index) => this.renderImages(res, [...coordinates, index]));\r\n        }\r\n        if (_.isObject(resource)) {\r\n            return _.keys(resource).map((objkey) => this.renderImages(resource[objkey], [...coordinates, objkey]));\r\n        }\r\n        if (_.isString(resource) && (this.isImage(resource))) {\r\n            return <Image\r\n                key={coordinates.join()}\r\n                image={resource}\r\n                handleChangePicture={this.handleChangePicture}\r\n                coordinates={coordinates} />;\r\n        }\r\n        \r\n    };\r\nrenderResource=()=>{\r\n    axios.get(\"http://localhost:8000/sliderData\")\r\n    .then(\r\n     \r\n      json => {\r\n     \r\n        if (this.mounted){\r\n            this.setState({ sliderData: json.data })\r\n        }\r\n     \r\n      }\r\n    ).catch(error => {\r\n        console.log('blaaaaaaaaaaaaaaaaaa')\r\n        console.log('error', error.response.status);\r\n console.log('errorType', typeof error); 401\r\n console.log('error', Object.assign({}, error));\r\n console.log('getOwnPropertyNames', Object.getOwnPropertyNames(error));\r\n console.log('stackProperty', Object.getOwnPropertyDescriptor(error, 'stack'));\r\n console.log('messageProperty', Object.getOwnPropertyDescriptor(error, 'message'));\r\n console.log('stackEnumerable', error.propertyIsEnumerable('stack'));\r\n console.log('messageEnumerable', error.propertyIsEnumerable('message'));\r\n        switch (error.type) {\r\n          case 'password_invalid':\r\n            dispatch(PasswordUpdateFailure('Incorrect current password'))\r\n            break\r\n          case 'invalid_attributes':\r\n            dispatch(PasswordUpdateFailure('Fields must not be blank'))\r\n            break\r\n        }\r\n      })\r\n \r\n \r\n}\r\n    render() {\r\n        console.log(\"kk=\"+this.state.data);\r\n        this.renderResource();\r\n        return <div className=\"row\">\r\n            {this.state.data ? this.renderImages(this.state.data, []) :\r\n                <div className=\"spiner-wrapper\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>}\r\n        </div>;\r\n    };\r\n}\r\n\r\nexport default ImageGallery;\r\n"]},"metadata":{},"sourceType":"module"}