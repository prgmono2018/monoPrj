var PHASER_UNITS = [{"properties": {"protected": [], "public": [{"name": "arcade", "default": null, "type": ["Phaser.Physics.Arcade"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "The Arcade Physics system.", "public": true, "help": ""}, {"name": "box2d", "default": null, "type": ["Phaser.Physics.Box2D"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "The Box2D Physics system (to be done).", "public": true, "help": ""}, {"name": "chipmunk", "default": null, "type": ["Phaser.Physics.Chipmunk"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "The Chipmunk Physics system (to be done).", "public": true, "help": ""}, {"name": "config", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "The physics configuration object as passed to the game on creation.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "ninja", "default": null, "type": ["Phaser.Physics.Ninja"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "The N+ Ninja Physics System.", "public": true, "help": ""}, {"name": "p2", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "The P2.JS Physics system.", "public": true, "help": ""}], "private": []}, "class": {"help": "The Physics Manager is responsible for looking after all of the running physics systems.\\nPhaser supports 3 physics systems: Arcade Physics, P2 and Ninja Physics (with Box2D and Chipmunk in development)\\nGame Objects can belong to only 1 physics system, but you can have multiple systems active in a single game.\\n\\nFor example you could have P2 managing a polygon-built terrain landscape that an vehicle drives over, while it could be firing bullets that use the\\nfaster (due to being much simpler) Arcade Physics system.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": "null", "optional": true, "type": ["object"], "name": "physicsConfig", "help": "A physics configuration object to pass to the Physics world on creation."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics"}, "consts": [], "methods": {"protected": [{"name": "clear", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 285, "public": false, "help": "Clears down all active physics systems. This doesn't destroy them, it just clears them of objects and is called when the State changes."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 211, "public": false, "help": "preUpdate checks."}, {"name": "setBoundsToWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 255, "public": false, "help": "Updates the physics bounds to match the world dimensions."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 233, "public": false, "help": "Updates all running physics systems."}], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 304, "public": true, "help": "Destroys all active physics systems. Usually only called on a Game Shutdown, not on a State swap."}, {"name": "enable", "parameters": [{"default": null, "optional": false, "type": ["object", "array"], "name": "object", "help": "The game object to create the physics body on. Can also be an array of objects, a body will be created on every object in the array."}, {"default": "Phaser.Physics.ARCADE", "optional": true, "type": ["number"], "name": "system", "help": "The physics system that will be used to create the body. Defaults to Arcade Physics."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "debug", "help": "Enable the debug drawing for this body. Defaults to false."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 181, "public": true, "help": "This will create a default physics body on the given game object or array of objects.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.\\nIt can be for any of the physics systems that have been started:\\n\\nPhaser.Physics.Arcade - A light weight AABB based collision system with basic separation.\\nPhaser.Physics.P2JS - A full-body advanced physics system supporting multiple object shapes, polygon loading, contact materials, springs and constraints.\\nPhaser.Physics.NINJA - A port of Metanet Softwares N+ physics system. Advanced AABB and Circle vs. Tile collision.\\nPhaser.Physics.BOX2D - A port of https://code.google.com/p/box2d-html5\\nPhaser.Physics.CHIPMUNK is still in development.\\n\\nIf you require more control over what type of body is created, for example to create a Ninja Physics Circle instead of the default AABB, then see the\\nindividual physics systems `enable` methods instead of using this generic one."}, {"name": "parseConfig", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 100, "public": true, "help": "Parses the Physics Configuration object passed to the Game constructor and starts any physics systems specified within."}, {"name": "startSystem", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "The", "help": " physics system to start."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 137, "public": true, "help": "This will create an instance of the requested physics simulation.\\nPhaser.Physics.Arcade is running by default, but all others need activating directly.\\nYou can start the following physics systems:\\nPhaser.Physics.P2JS - A full-body advanced physics system by Stefan Hedman.\\nPhaser.Physics.NINJA - A port of Metanet Softwares N+ physics system.\\nPhaser.Physics.BOX2D and Phaser.Physics.CHIPMUNK are still in development."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "acceleration", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 128, "inlineHelp": "The velocity in pixels per second sq. of the Body.", "public": true, "help": ""}, {"name": "allowGravity", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 139, "inlineHelp": "Allow this Body to be influenced by gravity? Either world or local.", "public": true, "help": ""}, {"name": "allowRotation", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "Allow this Body to be rotated? (via angularVelocity, etc)", "public": true, "help": ""}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 191, "inlineHelp": "The angle of the Body in radians as calculated by its velocity, rather than its visual angle.", "public": true, "help": ""}, {"name": "angularAcceleration", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 167, "inlineHelp": "The angular acceleration in pixels per second sq. of the Body.", "public": true, "help": ""}, {"name": "angularDrag", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 173, "inlineHelp": "The angular drag applied to the rotation of the Body.", "public": true, "help": ""}, {"name": "angularVelocity", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 161, "inlineHelp": "The angular velocity in pixels per second sq. of the Body.", "public": true, "help": ""}, {"name": "blocked", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 285, "inlineHelp": "An object containing on which faces this Body is blocked from moving, if any.", "public": true, "help": "This object is populated with boolean values when the Body collides with the World bounds or a Tile.\\nFor example if blocked.up is true then the Body cannot move up."}, {"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 726, "inlineHelp": "The bottom value of this Body (same as Body.y + Body.height)", "public": true, "help": ""}, {"name": "bounce", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 149, "inlineHelp": "The elasticitiy of the Body when colliding. bounce.x/y = 1 means full rebound, bounce.x/y = 0.5 means 50% rebound velocity.", "public": true, "help": ""}, {"name": "cache", "default": null, "type": [], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "", "public": true, "help": ""}, {"name": "center", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "The center coordinate of the Physics Body.", "public": true, "help": ""}, {"name": "checkCollision", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 265, "inlineHelp": "An object containing allowed collision.", "public": true, "help": "Set the checkCollision properties to control which directions collision is processed for this Body.\\nFor example checkCollision.up = false means it won't collide when the collision happened while moving up."}, {"name": "collideWorldBounds", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 258, "inlineHelp": "Should the Body collide with the World bounds?", "public": true, "help": "A Body can be set to collide against the World bounds automatically and rebound back into the World if this is set to true. Otherwise it will leave the World."}, {"name": "customSeparateX", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 226, "inlineHelp": "Use a custom separation system or the built-in one?", "public": true, "help": "This flag allows you to disable the custom x separation that takes place by Physics.Arcade.separate.\\nUsed in combination with your own collision processHandler you can create whatever type of collision response you need."}, {"name": "customSeparateY", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 234, "inlineHelp": "Use a custom separation system or the built-in one?", "public": true, "help": "This flag allows you to disable the custom y separation that takes place by Physics.Arcade.separate.\\nUsed in combination with your own collision processHandler you can create whatever type of collision response you need."}, {"name": "deltaMax", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 123, "inlineHelp": "The Sprite position is updated based on the delta x/y values. You can set a cap on those (both +-) using deltaMax.", "public": true, "help": ""}, {"name": "drag", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 133, "inlineHelp": "The drag applied to the motion of the Body.", "public": true, "help": ""}, {"name": "embedded", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 252, "inlineHelp": "Body embed value.", "public": true, "help": "If a body is overlapping with another body, but neither of them are moving (maybe they spawned on-top of each other?) this is set to true."}, {"name": "enable", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "A disabled body won't be checked for any form of collision or overlap or have its pre/post updates run.", "public": true, "help": ""}, {"name": "facing", "default": "Phaser.NONE", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 203, "inlineHelp": "A const reference to the direction the Body is traveling or facing.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "gravity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 144, "inlineHelp": "A local gravity applied to this Body. If non-zero this over rides any world gravity, unless Body.allowGravity is set to false.", "public": true, "help": ""}, {"name": "halfHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "The calculated height / 2 of the physics body.", "public": true, "help": ""}, {"name": "halfWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "The calculated width / 2 of the physics body.", "public": true, "help": ""}, {"name": "immovable", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 209, "inlineHelp": "An immovable Body will not receive any impacts from other bodies.", "public": true, "help": ""}, {"name": "mass", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 185, "inlineHelp": "The mass of the Body.", "public": true, "help": ""}, {"name": "maxAngular", "default": "1000", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 179, "inlineHelp": "The maximum angular velocity in pixels per second sq. that the Body can reach.", "public": true, "help": ""}, {"name": "maxVelocity", "default": "new Phaser.Point(10000, 10000)", "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 155, "inlineHelp": "The maximum velocity in pixels per second sq. that the Body can reach.", "public": true, "help": ""}, {"name": "moves", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 218, "inlineHelp": "Set to true to allow the Physics system to move this Body, other false to move it manually.", "public": true, "help": "If you have a Body that is being moved around the world via a tween or a Group motion, but its local x/y position never\\nactually changes, then you should set Body.moves = false. Otherwise it will most likely fly off the screen.\\nIf you want the physics system to move the body around, then set moves to true."}, {"name": "newVelocity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 118, "inlineHelp": "New velocity.", "public": true, "help": ""}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "The offset of the Physics Body from the Sprite x/y position.", "public": true, "help": ""}, {"name": "overlapX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 240, "inlineHelp": "The amount of horizontal overlap during the collision.", "public": true, "help": "When this body collides with another, the amount of overlap is stored here."}, {"name": "overlapY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 246, "inlineHelp": "The amount of vertical overlap during the collision.", "public": true, "help": "When this body collides with another, the amount of overlap is stored here."}, {"name": "phaser", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 297, "inlineHelp": "Is this Body in a preUpdate (1) or postUpdate (2) state?", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 47, "inlineHelp": "The position of the physics body.", "public": true, "help": ""}, {"name": "preRotation", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 70, "inlineHelp": "The previous rotation of the physics body.", "public": true, "help": ""}, {"name": "prev", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 53, "inlineHelp": "The previous position of the physics body.", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 739, "inlineHelp": "The right value of this Body (same as Body.x + Body.width)", "public": true, "help": ""}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "The amount the Body is rotated.", "public": true, "help": ""}, {"name": "skipQuadTree", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 302, "inlineHelp": "If true and you collide this Sprite against a Group, it will disable the collision check from using a QuadTree.", "public": true, "help": ""}, {"name": "sourceHeight", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 82, "inlineHelp": "The un-scaled original size.", "public": true, "help": ""}, {"name": "sourceWidth", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 76, "inlineHelp": "The un-scaled original size.", "public": true, "help": ""}, {"name": "speed", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 197, "inlineHelp": "The speed of the Body as calculated by its velocity.", "public": true, "help": ""}, {"name": "sprite", "default": null, "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "Reference to the parent Sprite.", "public": true, "help": ""}, {"name": "tilePadding", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 292, "inlineHelp": "Extra padding to be added to this sprites dimensions when checking for tile collision.", "public": true, "help": "If this is an especially small or fast moving object then it can sometimes skip over tilemap collisions if it moves through a tile in a step.\\nSet this padding value to add extra padding to its bounds. tilePadding.x applied to its width, y to its height."}, {"name": "touching", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 272, "inlineHelp": "An object containing touching results.", "public": true, "help": "This object is populated with boolean values when the Body collides with another.\\ntouching.up = true means the collision happened to the top of this Body for example."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "The type of physics system this body belongs to.", "public": true, "help": ""}, {"name": "velocity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "The velocity in pixels per second sq. of the Body.", "public": true, "help": ""}, {"name": "wasTouching", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 278, "inlineHelp": "An object containing previous touching results.", "public": true, "help": "This object is populated with previous touching values from the bodies previous collision."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "The calculated width of the physics body.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 751, "inlineHelp": "The x position.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 768, "inlineHelp": "The y position.", "public": true, "help": ""}], "private": [{"name": "_dx", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 326, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_dy", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 332, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_reset", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 308, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_sx", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 314, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_sy", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 320, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "The Physics Body is linked to a single Sprite. All physics operations should be performed against the body rather than\\nthe Sprite itself. For example you can set the velocity, acceleration, bounce values etc all on the Body.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The Sprite object this physics body belongs to."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Arcade.Body"}, "consts": [], "methods": {"protected": [{"name": "checkWorldBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 546, "public": false, "help": "Internal method."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 450, "public": false, "help": "Internal method."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 370, "public": false, "help": "Internal method."}, {"name": "updateBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 344, "public": false, "help": "Internal method."}], "static": [], "public": [{"name": "deltaAbsX", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The absolute delta value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 675, "public": true, "help": "Returns the absolute delta x value."}, {"name": "deltaAbsY", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The absolute delta value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 685, "public": true, "help": "Returns the absolute delta y value."}, {"name": "deltaX", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The delta value. Positive if the motion was to the right, negative if to the left.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 695, "public": true, "help": "Returns the delta x value. The difference between Body.x now and in the previous step."}, {"name": "deltaY", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The delta value. Positive if the motion was downwards, negative if upwards.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 705, "public": true, "help": "Returns the delta y value. The difference between Body.y now and in the previous step."}, {"name": "deltaZ", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The delta value. Positive if the motion was clockwise, negative if anti-clockwise.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 715, "public": true, "help": "Returns the delta z value. The difference between Body.rotation now and in the previous step."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 533, "public": true, "help": "Removes this bodies reference to its parent sprite, freeing it up for gc."}, {"name": "hitTest", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The world x coordinate to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The world y coordinate to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the given coordinates are inside this Body, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 643, "public": true, "help": "Tests if a world point lies within this Body."}, {"name": "onFloor", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if in contact with either the world bounds or a tile.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 655, "public": true, "help": "Returns true if the bottom of this Body is in contact with either the world bounds or a tile."}, {"name": "onWall", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if in contact with either the world bounds or a tile.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 665, "public": true, "help": "Returns true if either side of this Body is in contact with either the world bounds or a tile."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context to render to."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body to render the info of."}, {"default": "'rgba(0,255,0,0.4)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "filled", "help": "Render the objected as a filled (default, true) or a stroked (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 791, "public": true, "help": "Render Sprite Body."}, {"name": "renderBodyInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body to render the info of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 819, "public": true, "help": "Render Sprite Body Physics Data as text."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the Body."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the Body."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 611, "public": true, "help": "Resets all Body values (velocity, acceleration, rotation, etc)"}, {"name": "setSize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the Body."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the Body."}, {"default": null, "optional": true, "type": ["number"], "name": "offsetX", "help": "The X offset of the Body from the Sprite position."}, {"default": null, "optional": true, "type": ["number"], "name": "offsetY", "help": "The Y offset of the Body from the Sprite position."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 587, "public": true, "help": "You can modify the size of the physics Body to be any dimension you need.\\nSo it could be smaller or larger than the parent Sprite. You can also control the x and y offset, which\\nis the position of the Body relative to the top-left of the Sprite."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 706, "inlineHelp": "The bottom value of this Body (same as Body.y + Body.height)", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 89, "inlineHelp": "The height.", "public": true, "help": ""}, {"name": "id", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 43, "inlineHelp": "The ID of this Tile.", "public": true, "help": ""}, {"name": "oldpos", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The position of this object in the previous update.", "public": true, "help": ""}, {"name": "pos", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "The position of this object.", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 719, "inlineHelp": "The right value of this Body (same as Body.x + Body.width)", "public": true, "help": ""}, {"name": "system", "default": null, "type": ["Phaser.Physics.Ninja"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "A reference to the physics system.", "public": true, "help": ""}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 49, "inlineHelp": "The type of this Tile.", "public": true, "help": ""}, {"name": "velocity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "The velocity of this object.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 83, "inlineHelp": "The width.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 673, "inlineHelp": "The x position.", "public": true, "help": ""}, {"name": "xw", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 77, "inlineHelp": "Half the height.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 689, "inlineHelp": "The y position.", "public": true, "help": ""}], "private": [{"name": "signx", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "signy", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "sx", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "sy", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "Internal var.", "public": false, "help": ""}]}, "class": {"help": "Ninja Physics Tile constructor.\\nA Tile is defined by its width, height and type. It's type can include slope data, such as 45 degree slopes, or convex slopes.\\nUnderstand that for any type including a slope (types 2 to 29) the Tile must be SQUARE, i.e. have an equal width and height.\\nAlso note that as Tiles are primarily used for levels they have gravity disabled and world bounds collision disabled by default.\\n\\nNote: This class could be massively optimised and reduced in size. I leave that challenge up to you.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Body"], "name": "body", "help": "The body that owns this shape."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to create this shape at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to create this shape at."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of this AABB."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of this AABB."}, {"default": "1", "optional": true, "type": ["number"], "name": "type", "help": "The type of Ninja shape to create. 1 = AABB, 2 = Circle or 3 = Tile."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Ninja.Tile"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clear", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 295, "public": true, "help": "Sets this tile to be empty."}, {"name": "collideWorldBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 158, "public": true, "help": "Tiles cannot collide with the world bounds, it's up to you to keep them where you want them. But we need this API stub to satisfy the Body."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 307, "public": true, "help": "Destroys this Tiles reference to Body and System."}, {"name": "integrate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 140, "public": true, "help": "Updates this objects position."}, {"name": "reportCollisionVsWorld", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "px", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "py", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "obj", "help": "Object this Tile collided with"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 204, "public": true, "help": "Process a world collision and apply the resulting forces."}, {"name": "setType", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "id", "help": "The type of Tile this will use, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 274, "public": true, "help": "Tiles cannot collide with the world bounds, it's up to you to keep them where you want them. But we need this API stub to satisfy the Body."}], "private": [{"name": "updateType", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 321, "public": false, "help": "This converts a tile from implicitly-defined (via id), to explicit (via properties).\\nDon't call directly, instead of setType."}]}}, {"properties": {"protected": [], "public": [{"name": "active", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 217, "inlineHelp": "An active pointer is one that is currently pressed down on the display. A Mouse is always active.", "public": true, "help": ""}, {"name": "button", "default": "null", "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "The button property of the Pointer as set by the DOM event when this Pointer is started.", "public": true, "help": ""}, {"name": "circle", "default": null, "type": ["Phaser.Circle"], "private": false, "readOnly": false, "protected": false, "line": 245, "inlineHelp": "", "public": true, "help": "A Phaser.Circle that is centered on the x/y coordinates of this pointer, useful for hit detection.\\nThe Circle size is 44px (Apples recommended \"finger tip\" size)."}, {"name": "clientX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The horizontal coordinate of the Pointer within the application's client area at which the event occurred (as opposed to the coordinates within the page).", "public": true, "help": ""}, {"name": "clientY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "The vertical coordinate of the Pointer within the application's client area at which the event occurred (as opposed to the coordinates within the page).", "public": true, "help": ""}, {"name": "dirty", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 223, "inlineHelp": "A dirty pointer needs to re-poll any interactive objects it may have been over, regardless if it has moved or not.", "public": true, "help": ""}, {"name": "duration", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 760, "inlineHelp": "The Y value of this Pointer in world coordinates based on the world camera.", "public": true, "help": "Gets the Y value of this Pointer in world coordinates based on the world camera."}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "A Pointer object that exists is allowed to be checked for physics collisions and overlaps.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "id", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "The ID of the Pointer object within the game. Each game can have up to 10 active pointers.", "public": true, "help": ""}, {"name": "identifier", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "The identifier property of the Pointer as set by the DOM event when this Pointer is started.", "public": true, "help": ""}, {"name": "isDown", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 169, "inlineHelp": "If the Pointer is touching the touchscreen, or the mouse button is held down, isDown is set to true.", "public": true, "help": ""}, {"name": "isMouse", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 163, "inlineHelp": "If the Pointer is a mouse this is true, otherwise false.", "public": true, "help": ""}, {"name": "isUp", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 175, "inlineHelp": "If the Pointer is not touching the touchscreen, or the mouse button is up, isUp is set to true.", "public": true, "help": ""}, {"name": "movementX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 139, "inlineHelp": "The horizontal processed relative movement of the Pointer in pixels since last event.", "public": true, "help": ""}, {"name": "movementY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 145, "inlineHelp": "The vertical processed relative movement of the Pointer in pixels since last event.", "public": true, "help": ""}, {"name": "msSinceLastClick", "default": "Number.MAX_VALUE", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 205, "inlineHelp": "The number of milliseconds since the last click or touch event.", "public": true, "help": ""}, {"name": "pageX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "The horizontal coordinate of the Pointer relative to whole document.", "public": true, "help": ""}, {"name": "pageY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The vertical coordinate of the Pointer relative to whole document.", "public": true, "help": ""}, {"name": "pointerId", "default": "null", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "The pointerId property of the Pointer as set by the DOM event when this Pointer is started. The browser can and will recycle this value.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 228, "inlineHelp": "A Phaser.Point object containing the current x/y values of the pointer on the display.", "public": true, "help": ""}, {"name": "positionDown", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 233, "inlineHelp": "A Phaser.Point object containing the x/y values of the pointer when it was last in a down state on the display.", "public": true, "help": ""}, {"name": "positionUp", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 238, "inlineHelp": "A Phaser.Point object containing the x/y values of the pointer when it was last released.", "public": true, "help": ""}, {"name": "previousTapTime", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 193, "inlineHelp": "A timestamp representing when the Pointer was last tapped or clicked.", "public": true, "help": ""}, {"name": "rawMovementX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "The horizontal raw relative movement of the Pointer in pixels since last event.", "public": true, "help": ""}, {"name": "rawMovementY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 133, "inlineHelp": "The vertical raw relative movement of the Pointer in pixels since last event.", "public": true, "help": ""}, {"name": "screenX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "The horizontal coordinate of the Pointer relative to the screen.", "public": true, "help": ""}, {"name": "screenY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "The vertical coordinate of the Pointer relative to the screen.", "public": true, "help": ""}, {"name": "target", "default": "null", "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "The target property of the Pointer as set by the DOM event when this Pointer is started.", "public": true, "help": ""}, {"name": "targetObject", "default": "null", "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 211, "inlineHelp": "The Game Object this Pointer is currently over / touching / dragging.", "public": true, "help": ""}, {"name": "timeDown", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 181, "inlineHelp": "A timestamp representing when the Pointer first touched the touchscreen.", "public": true, "help": ""}, {"name": "timeUp", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 187, "inlineHelp": "A timestamp representing when the Pointer left the touchscreen.", "public": true, "help": ""}, {"name": "totalTouches", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 199, "inlineHelp": "The total number of times this Pointer has been touched to the touchscreen.", "public": true, "help": ""}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 31, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "withinGame", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "true if the Pointer is over the game canvas, otherwise false.", "public": true, "help": ""}, {"name": "x", "default": "-1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 151, "inlineHelp": "The horizontal coordinate of the Pointer. This value is automatically scaled based on the game scale.", "public": true, "help": ""}, {"name": "y", "default": "-1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 157, "inlineHelp": "The vertical coordinate of the Pointer. This value is automatically scaled based on the game scale.", "public": true, "help": ""}], "private": [{"name": "_history", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Local private variable storing the short-term history of pointer movements.", "public": false, "help": ""}, {"name": "_holdSent", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "Local private variable to store the status of dispatching a hold event.", "public": false, "help": ""}, {"name": "_nextDrop", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Local private variable storing the time at which the next history drop should occur.", "public": false, "help": ""}, {"name": "_stateReset", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "Monitor events outside of a state reset loop.", "public": false, "help": ""}]}, "class": {"help": "A Pointer object is used by the Mouse, Touch and MSPoint managers and represents a single finger on the touch screen.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "id", "help": "The ID of the Pointer object within the game. Each game can have up to 10 active pointers."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Pointer"}, "consts": [], "methods": {"protected": [{"name": "processInteractiveObjects", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "fromClick", "help": "Was this called from the click event?"}], "inheritedFrom": "", "private": false, "returns": {"help": "True if this method processes an object (i.e. a Sprite becomes the Pointers currentTarget), otherwise false.", "types": ["boolean"]}, "protected": true, "static": false, "inherited": false, "line": 464, "public": false, "help": "Process all interactive objects to find out which ones were updated in the recent Pointer move."}], "static": [], "public": [{"name": "justPressed", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "duration", "help": "The time to check against. If none given it will use InputManager.justPressedRate."}], "inheritedFrom": "", "private": false, "returns": {"help": "true if the Pointer was pressed down within the duration given.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 648, "public": true, "help": "The Pointer is considered justPressed if the time it was pressed onto the touchscreen or clicked is less than justPressedRate.\\nNote that calling justPressed doesn't reset the pressed status of the Pointer, it will return `true` for as long as the duration is valid.\\nIf you wish to check if the Pointer was pressed down just once then see the Sprite.events.onInputDown event."}, {"name": "justReleased", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "duration", "help": "The time to check against. If none given it will use InputManager.justReleasedRate."}], "inheritedFrom": "", "private": false, "returns": {"help": "true if the Pointer was released within the duration given.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 664, "public": true, "help": "The Pointer is considered justReleased if the time it left the touchscreen is less than justReleasedRate.\\nNote that calling justReleased doesn't reset the pressed status of the Pointer, it will return `true` for as long as the duration is valid.\\nIf you wish to check if the Pointer was released just once then see the Sprite.events.onInputUp event."}, {"name": "leave", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent", "PointerEvent", "TouchEvent"], "name": "event", "help": "The event passed up from the input handler."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 567, "public": true, "help": "Called when the Pointer leaves the target area."}, {"name": "move", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent", "PointerEvent", "TouchEvent"], "name": "event", "help": "The event passed up from the input handler."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "fromClick", "help": "Was this called from the click event?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 375, "public": true, "help": "Called when the Pointer is moved."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 676, "public": true, "help": "Resets the Pointer properties. Called by InputManager.reset when you perform a State change."}, {"name": "resetMovement", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 706, "public": true, "help": "Resets the movementX and movementY properties. Use in your update handler after retrieving the values."}, {"name": "start", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "event", "help": "The DOM event from the browser."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 261, "public": true, "help": "Called when the Pointer is pressed onto the touchscreen."}, {"name": "stop", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent", "PointerEvent", "TouchEvent"], "name": "event", "help": "The event passed up from the input handler."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 580, "public": true, "help": "Called when the Pointer leaves the touchscreen."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 324, "public": true, "help": "Called by the Input Manager."}], "private": []}}, {"properties": {"protected": [{"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 33, "inlineHelp": "Internal Phaser Type value.", "public": false, "help": ""}], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1814, "inlineHelp": "The angle of rotation given in degrees, where 0 degrees = to the right.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "classType", "default": "Phaser.Sprite", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame."}, {"name": "cursor", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The current display object that the Group cursor is pointing to.", "public": true, "help": "The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "enableBody", "default": "enableBody", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.", "public": true, "help": ""}, {"name": "enableBodyDebug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "If exists is true the Group is updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1834, "inlineHelp": "Set to true to fix this Group to the Camera at its current world coordinates.", "public": true, "help": "A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "ignoreDestroy", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.", "public": true, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1798, "inlineHelp": "The total number of children in this Group, regardless of their exists/alive status.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A name for this Group. Not used internally but useful for debugging.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Group", "Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The parent of this Group.", "public": true, "help": ""}, {"name": "physicsBodyType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.", "public": true, "help": ""}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The pivot point of the Group container.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1879, "inlineHelp": "The angle of rotation given in radians.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The scale of the Group container.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1783, "inlineHelp": "The total number of children in this Group who have a state of exists = true.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1884, "inlineHelp": "The visible state of the Group. Non-visible Groups and all of their children are not rendered.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1865, "inlineHelp": "The x coordinate of the Group container.", "public": true, "help": "The x coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1872, "inlineHelp": "The y coordinate of the Group container.", "public": true, "help": "The y coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": []}, "class": {"help": "The SpriteBatch class is a really fast version of the DisplayObjectContainer built purely for speed, so use when you need a lot of sprites or particles.\\nIt's worth mentioning that by default sprite batches are used through-out the renderer, so you only really need to use a SpriteBatch if you have over\\n1000 sprites that all share the same texture (or texture atlas). It's also useful if running in Canvas mode and you have a lot of un-rotated or un-scaled\\nSprites as it skips all of the Canvas setTransform calls, which helps performance, especially on mobile devices.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["Phaser.Group", "Phaser.Sprite", "null"], "name": "parent", "help": "The parent Group, DisplayObject or DisplayObjectContainer that this Group will be added to. If `undefined` or `null` it will use game.world."}, {"default": "group", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Group. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Group will be added directly to the Game.Stage instead of Game.World."}], "static": false, "constructor": true, "extends": "Phaser.Group", "name": "Phaser.SpriteBatch"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 209, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method."}, {"name": "addAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to increment, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 956, "public": true, "help": "Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value."}, {"name": "addAt", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index within the Group to insert the child to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 273, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering."}, {"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addMultiple", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "children", "help": "An array containing instances of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The array of children that were added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 249, "public": true, "help": "Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array."}, {"name": "ascendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1385, "public": true, "help": "An internal helper function for the sort process."}, {"name": "bringToTop", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to bring to the top of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 509, "public": true, "help": "Brings the given child to the top of this Group so it renders above all other children."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "method", "help": "A string containing the name of the function that will be called. The function must exist on the child."}, {"default": "null", "optional": true, "type": ["string"], "name": "context", "help": "A string containing the context under which the method will be executed. Set to null to default to the child."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the method."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1095, "public": true, "help": "Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child."}, {"name": "callAllExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that exists on the children that will be called."}, {"default": null, "optional": false, "type": ["boolean"], "name": "existsValue", "help": "Only children with exists=existsValue will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1019, "public": true, "help": "Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback."}, {"name": "checkAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 925, "public": true, "help": "This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children."}, {"name": "checkProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was was equal to value, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 790, "public": true, "help": "Checks a property for the given value on the child."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "countDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as dead.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1582, "public": true, "help": "Call this function to find out how many members of the group are dead."}, {"name": "countLiving", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as alive.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1570, "public": true, "help": "Call this function to find out how many members of the group are alive."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed.", "types": ["Phaser.Sprite", "object"]}, "protected": false, "static": false, "inherited": true, "line": 335, "public": true, "help": "Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "createMultiple", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "quantity", "help": "The number of Sprites to create."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 380, "public": true, "help": "Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "customSort", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "sortHandler", "help": "Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The scope in which the sortHandler is called."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1364, "public": true, "help": "This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b."}, {"name": "descendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1416, "public": true, "help": "An internal helper function for the sort process."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this Group have its destroy method called?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "soft", "help": "A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1751, "public": true, "help": "Destroys this Group. Removes all children, then removes the container from the display list and nulls references."}, {"name": "divideAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to divide, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1004, "public": true, "help": "Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "predicate", "help": "The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns an array list containing all the children that the predicate returned true for", "types": ["Phaser.ArrayList"]}, "protected": false, "static": false, "inherited": true, "line": 1223, "public": true, "help": "Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1250, "public": true, "help": "Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEachAlive", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1295, "public": true, "help": "Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)"}, {"name": "forEachDead", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1313, "public": true, "help": "Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)"}, {"name": "forEachExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1277, "public": true, "help": "Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to return the child from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was found at the given index. If the index was out of bounds then this will return -1.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 310, "public": true, "help": "Returns the child found at the given index within this Group."}, {"name": "getBottom", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the bottom of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1555, "public": true, "help": "Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getFirstAlive", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first alive child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1515, "public": true, "help": "Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first dead child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1528, "public": true, "help": "Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstExists", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "True or false."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1497, "public": true, "help": "Call this function to retrieve the first object with exists == (the given state) in the Group."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to get the index for."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The index of the child or -1 if it's not a member of this Group.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 629, "public": true, "help": "Get the index position of the given child in this Group. This should always match the childs z property."}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "A random child of this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1596, "public": true, "help": "Returns a member at random from the group."}, {"name": "getTop", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the top of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1540, "public": true, "help": "Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child."}, {"name": "hasProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check for the existance of the property on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the child has the property, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 679, "public": true, "help": "Checks if the child has the given property. Will scan up to 4 levels deep only."}, {"name": "iterate", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The child property to check, i.e. 'exists', 'alive', 'health'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "If child.key === this value it will be considered a match. Note that a strict comparison is used."}, {"default": null, "optional": false, "type": ["number"], "name": "returnType", "help": "How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD."}, {"default": "null", "optional": true, "type": ["function"], "name": "callback", "help": "Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns either a numeric total (if RETURN_TOTAL was specified) or the child object.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1446, "public": true, "help": "Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move down in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 571, "public": true, "help": "Moves the given child down one place in this Group unless it's already at the top."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move up in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 547, "public": true, "help": "Moves the given child up one place in this Group unless it's already at the top."}, {"name": "multiplyAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to multiply, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 988, "public": true, "help": "Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value."}, {"name": "next", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 439, "public": true, "help": "Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object."}, {"name": "previous", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 466, "public": true, "help": "Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to remove."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "true if the child was removed from this Group, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 1620, "public": true, "help": "Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child."}, {"name": "removeAll", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on each child that is removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1661, "public": true, "help": "Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list."}, {"name": "removeBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "The index to start removing children from."}, {"default": null, "optional": true, "type": ["number"], "name": "endIndex", "help": "The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1700, "public": true, "help": "Removes all children from this Group whos index falls beteen the given startIndex and endIndex values."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "oldChild", "help": "The child in this Group that will be replaced."}, {"default": null, "optional": false, "type": ["any"], "name": "newChild", "help": "The child to be inserted into this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns the oldChild that was replaced within this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 643, "public": true, "help": "Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group."}, {"name": "resetCursor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "index", "help": "Set the cursor to point to a specific index."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 415, "public": true, "help": "Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead."}, {"name": "reverse", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 615, "public": true, "help": "Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "sendToBack", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to send to the bottom of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": "Sends the given child to the bottom of this Group so it renders below all other children."}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "child", "help": "The child to set the property on."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then the child will only be updated if alive=true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then the child will only be updated if visible=true."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 823, "public": true, "help": "This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 854, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAllChildren", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 889, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to set the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 720, "public": true, "help": "Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "sort", "parameters": [{"default": "'z'", "optional": true, "type": ["string"], "name": "index", "help": "The `string` name of the property you want to sort on. Defaults to the objects z-depth value."}, {"default": "Phaser.Group.SORT_ASCENDING", "optional": true, "type": ["number"], "name": "order", "help": "The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1330, "public": true, "help": "Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`."}, {"name": "subAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to decrement, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 972, "public": true, "help": "Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value."}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child1", "help": "The first child to swap."}, {"default": null, "optional": false, "type": ["any"], "name": "child2", "help": "The second child to swap."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 495, "public": true, "help": "Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "xy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the child in the Group to set the position of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the child."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the child."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 596, "public": true, "help": "Positions the child found at the given index within this Group to the given x and y coordinates."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "currentBlendMode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 16, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLBlendModeManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 55, "public": true, "help": "Destroys this object."}, {"name": "setBlendMode", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "blendMode", "help": "the blendMode, should be a Pixi const, such as PIXI.BlendModes.ADD"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 38, "public": true, "help": "Sets-up the given blendMode from WebGL's point of view."}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 27, "public": true, "help": "Sets the WebGL Context."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The dirty state of this object."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "textHeight", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "[read-only] The height of the overall text, different from fontSize,\\nwhich is defined in the style object"}, {"name": "textWidth", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "[read-only] The width of the overall text, different from fontSize,\\nwhich is defined in the style object"}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": [{"name": "_pool", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "A BitmapText object will create a line or multiple lines of text using bitmap font. To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\\nYou can generate the fnt files using\\nhttp://www.angelcode.com/products/bmfont/ for windows or\\nhttp://www.bmglyph.com/ for mac.", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The copy that you would like the text to display"}, {"default": null, "optional": false, "type": ["object"], "name": "style", "help": "The style parameters"}, {"default": null, "optional": false, "type": ["string"], "name": "style.font", "help": "The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.align='left']", "help": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text"}], "static": false, "constructor": true, "extends": "PIXI.DisplayObjectContainer", "name": "PIXI.BitmapText"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setStyle", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "style", "help": "The style parameters, contained as properties of an object"}], "inheritedFrom": "PIXI.BitmapText", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 86, "public": true, "help": "Set the style of the text\\nstyle.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\\n[style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single lines of text"}, {"name": "setText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The text that you would like displayed"}], "inheritedFrom": "PIXI.BitmapText", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 72, "public": true, "help": "Set the text string to be rendered."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "updateText", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 106, "public": false, "help": "Renders text and updates it when needed"}, {"name": "updateTransform", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 204, "public": false, "help": "Updates the transform of this object"}]}}, {"properties": {"protected": [], "public": [{"name": "fragmentSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The fragment shader."}, {"name": "gl", "default": null, "type": ["PIXI.WebGLContext"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": ""}, {"name": "program", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The WebGL program."}, {"name": "vertexSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "", "public": true, "help": "The vertex shader."}], "private": [{"name": "_UID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 17, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.PrimitiveShader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 108, "public": true, "help": "Destroys the shader."}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 79, "public": true, "help": "Initialises the shader."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The base texture object that this texture uses"}, {"name": "crop", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "", "public": true, "help": "This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\\nirrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)"}, {"name": "frame", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "", "public": true, "help": "The framing rectangle of the render texture"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "", "public": true, "help": "The height of the render texture"}, {"name": "noFrame", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "Does this Texture have any frame data assigned to it?"}, {"name": "renderer", "default": null, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "", "public": true, "help": "The renderer this RenderTexture uses. A RenderTexture can only belong to one renderer at the moment if its webGL."}, {"name": "requiresUpdate", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "", "public": true, "help": "This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The Resolution of the texture."}, {"name": "trim", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The texture trim data."}, {"name": "valid", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": "The with of the render texture"}], "private": []}, "class": {"help": "A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\\n\\n__Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded otherwise black rectangles will be drawn instead.\\n\\nA RenderTexture takes a snapshot of any Display Object given to its render method. The position and rotation of the given Display Objects is ignored. For example:\\n\\nvar renderTexture = new PIXI.RenderTexture(800, 600);\\nvar sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\\nsprite.position.x = 800/2;\\nsprite.position.y = 600/2;\\nsprite.anchor.x = 0.5;\\nsprite.anchor.y = 0.5;\\nrenderTexture.render(sprite);\\n\\nThe Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual position a DisplayObjectContainer should be used:\\n\\nvar doc = new PIXI.DisplayObjectContainer();\\ndoc.addChild(sprite);\\nrenderTexture.render(doc);  // Renders to center of renderTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the render texture"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the render texture"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used for this RenderTexture"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}], "static": false, "constructor": true, "extends": "PIXI.Texture", "name": "PIXI.RenderTexture"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addTextureToCache", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The Texture to add to the cache."}, {"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id that the texture will be stored against."}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": true, "inherited": true, "line": 292, "public": true, "help": "Adds a texture to the global PIXI.TextureCache. This cache is shared across the whole PIXI object."}, {"name": "clear", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 176, "public": true, "help": "Clears the RenderTexture."}, {"name": "destroy", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "destroyBase", "help": "Whether to destroy the base texture as well"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 155, "public": true, "help": "Destroys this texture"}, {"name": "fromCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Canvas"], "name": "canvas", "help": "The canvas element source of the texture"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 276, "public": true, "help": "Helper function that creates a new a Texture based on the given canvas element."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame id of the texture"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 260, "public": true, "help": "Helper function that returns a Texture objected based on the given frame id.\\nIf the frame id is not in the texture cache an error will be thrown."}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageUrl", "help": "The image url of the texture"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 238, "public": true, "help": "Helper function that creates a Texture object from the given image url.\\nIf the image is not in the texture cache it will be  created and loaded."}, {"name": "getBase64", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "A base64 encoded string of the texture.", "types": ["string"]}, "protected": false, "static": false, "inherited": true, "line": 294, "public": true, "help": "Will return a a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that."}, {"name": "getCanvas", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "A Canvas element with the texture rendered on.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": true, "line": 305, "public": true, "help": "Creates a Canvas element, renders this RenderTexture to it and then returns it."}, {"name": "getImage", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "", "types": ["Image"]}, "protected": false, "static": false, "inherited": true, "line": 281, "public": true, "help": "Will return a HTML Image of the texture"}, {"name": "removeTextureFromCache", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id of the texture to be removed"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": "The texture that was removed", "types": ["PIXI.Texture"]}, "protected": false, "static": true, "inherited": true, "line": 305, "public": true, "help": "Remove a texture from the global PIXI.TextureCache."}, {"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width to resize to."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height to resize to."}, {"default": null, "optional": false, "type": ["boolean"], "name": "updateBase", "help": "Should the baseTexture.width and height values be resized as well?"}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 145, "public": true, "help": "Resizes the RenderTexture."}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "frame", "help": "The frame of the texture to set it to"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 168, "public": true, "help": "Specifies the region of the baseTexture that this texture will use."}], "private": [{"name": "renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "The display object to render this texture on"}, {"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "[matrix]", "help": "Optional matrix to apply to the display object before rendering."}, {"default": null, "optional": false, "type": ["boolean"], "name": "[clear]", "help": "If true the texture will be cleared before the displayObject is drawn"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 246, "public": false, "help": "This function will draw the display object to the texture."}, {"name": "renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "The display object to render this texture on"}, {"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "[matrix]", "help": "Optional matrix to apply to the display object before rendering."}, {"default": null, "optional": false, "type": ["boolean"], "name": "[clear]", "help": "If true the texture will be cleared before the displayObject is drawn"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 197, "public": false, "help": "This function will draw the display object to the texture."}]}}, {"properties": {"protected": [], "public": [{"name": "blendModeManager", "default": null, "type": ["PIXI.WebGLBlendModeManager"], "private": false, "readOnly": false, "protected": false, "line": 199, "inlineHelp": "", "public": true, "help": "Manages the blendModes"}, {"name": "clearBeforeRender", "default": false, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "", "public": true, "help": "This sets if the WebGLRenderer will clear the context texture or not before the new render pass. If true:\\nIf the Stage is NOT transparent, Pixi will clear to alpha (0, 0, 0, 0).\\nIf the Stage is transparent, Pixi will clear to the target Stage's background color.\\nDisable this by setting this to false. For example: if your game has a canvas filling background image, you often don't need this set."}, {"name": "contextLostBound", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "", "public": true, "help": ""}, {"name": "contextRestoredBound", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "", "public": true, "help": ""}, {"name": "filterManager", "default": null, "type": ["PIXI.WebGLFilterManager"], "private": false, "readOnly": false, "protected": false, "line": 185, "inlineHelp": "", "public": true, "help": "Manages the filters"}, {"name": "height", "default": "600", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "", "public": true, "help": "The height of the canvas view"}, {"name": "maskManager", "default": null, "type": ["PIXI.WebGLMaskManager"], "private": false, "readOnly": false, "protected": false, "line": 178, "inlineHelp": "", "public": true, "help": "Manages the masks using the stencil buffer"}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 155, "inlineHelp": "", "public": true, "help": ""}, {"name": "preserveDrawingBuffer", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The value of the preserveDrawingBuffer flag affects whether or not the contents of the stencil buffer is retained after rendering."}, {"name": "projection", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 149, "inlineHelp": "", "public": true, "help": ""}, {"name": "renderSession", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 206, "inlineHelp": "", "public": true, "help": "TODO remove"}, {"name": "resolution", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": true, "help": "The resolution of the renderer"}, {"name": "shaderManager", "default": null, "type": ["PIXI.WebGLShaderManager"], "private": false, "readOnly": false, "protected": false, "line": 164, "inlineHelp": "", "public": true, "help": "Deals with managing the shader programs and their attribs"}, {"name": "spriteBatch", "default": null, "type": ["PIXI.WebGLSpriteBatch"], "private": false, "readOnly": false, "protected": false, "line": 171, "inlineHelp": "", "public": true, "help": "Manages the rendering of sprites"}, {"name": "stencilManager", "default": null, "type": ["PIXI.WebGLStencilManager"], "private": false, "readOnly": false, "protected": false, "line": 192, "inlineHelp": "", "public": true, "help": "Manages the stencil buffer"}, {"name": "transparent", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "", "public": true, "help": "Whether the render view is transparent"}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": true, "help": ""}, {"name": "view", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "", "public": true, "help": "The canvas element that everything is drawn to"}, {"name": "width", "default": "800", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "", "public": true, "help": "The width of the canvas view"}], "private": [{"name": "_contextOptions", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "The WebGLRenderer draws the stage and all its content onto a webGL enabled canvas. This renderer\\nshould be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\\nSo no need for Sprite Batches or Sprite Clouds.\\nDon't forget to add the view to your DOM or you will not see anything :)", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "[width=0]", "help": "the width of the canvas view"}, {"default": null, "optional": false, "type": ["number"], "name": "[height=0]", "help": "the height of the canvas view"}, {"default": null, "optional": false, "type": ["object"], "name": "[options]", "help": "The optional renderer parameters"}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "[options.view]", "help": "the canvas to use as a view, optional"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.transparent=false]", "help": "If the render view is transparent, default false"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.antialias=false]", "help": "sets antialias (only applicable in chrome at the moment)"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.preserveDrawingBuffer=false]", "help": "enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context"}, {"default": null, "optional": false, "type": ["number"], "name": "[options.resolution=1]", "help": "the resolution of the renderer retina would be 2"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLRenderer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 465, "public": true, "help": "Removes everything from the renderer (event listeners, spritebatch, etc...)"}, {"name": "initContext", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 231, "public": true, "help": ""}, {"name": "mapBlendModes", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 496, "public": true, "help": "Maps Pixi blend modes to WebGL blend modes."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the Stage element to be rendered"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 270, "public": true, "help": "Renders the stage to its webGL view"}, {"name": "renderDisplayObject", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "The DisplayObject to render"}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "projection", "help": "The projection"}, {"default": null, "optional": false, "type": ["array"], "name": "buffer", "help": "a standard WebGL buffer"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 340, "public": true, "help": "Renders a Display Object."}, {"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the new width of the webGL view"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the new height of the webGL view"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 373, "public": true, "help": "Resizes the webGL view to the specified width and height."}, {"name": "updateTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "the texture to update"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 393, "public": true, "help": "Updates and Creates a WebGL texture for the renderers context."}], "private": [{"name": "handleContextLost", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 433, "public": false, "help": "Handles a lost webgl context"}, {"name": "handleContextRestored", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 446, "public": false, "help": "Handles a restored webgl context"}]}}, {"properties": {"protected": [], "public": [{"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "The radius of the effect."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "", "public": true, "help": "The scale of the effect."}], "private": []}, "class": {"help": "This filter applies a dotscreen effect making display objects appear to be made out of black and white halftone dots like an old printer.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.DotScreenFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "invert", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "", "public": true, "help": "The strength of the invert. 1 will fully invert the colors, 0 will make the object its normal color"}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "This inverts your Display Objects colors.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.InvertFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "add", "default": null, "type": ["Phaser.GameObjectFactory"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "A reference to the GameObjectFactory which can be used to add new objects to the World.", "public": true, "help": ""}, {"name": "cache", "default": null, "type": ["Phaser.Cache"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "A reference to the game cache which contains any loaded or generated assets, such as images, sound and more.", "public": true, "help": ""}, {"name": "camera", "default": null, "type": ["Phaser.Camera"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "A handy reference to World.camera.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "This is a reference to the currently running Game.", "public": true, "help": ""}, {"name": "input", "default": null, "type": ["Phaser.Input"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "A reference to the Input Manager.", "public": true, "help": ""}, {"name": "load", "default": null, "type": ["Phaser.Loader"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "A reference to the Loader, which you mostly use in the preload method of your state to load external assets.", "public": true, "help": ""}, {"name": "make", "default": null, "type": ["Phaser.GameObjectCreator"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "A reference to the GameObjectCreator which can be used to make new objects.", "public": true, "help": ""}, {"name": "math", "default": null, "type": ["Phaser.Math"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "A reference to Math class with lots of helpful functions.", "public": true, "help": ""}, {"name": "particles", "default": null, "type": ["Phaser.Particles"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "The Particle Manager. It is called during the core gameloop and updates any Particle Emitters it has created.", "public": true, "help": ""}, {"name": "physics", "default": null, "type": ["Phaser.Physics"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "A reference to the physics manager which looks after the different physics systems available within Phaser.", "public": true, "help": ""}, {"name": "rnd", "default": null, "type": ["Phaser.RandomDataGenerator"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "A reference to the seeded and repeatable random data generator.", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.ScaleManager"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "A reference to the Scale Manager which controls the way the game scales on different displays.", "public": true, "help": ""}, {"name": "sound", "default": null, "type": ["Phaser.SoundManager"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "A reference to the Sound Manager which can create, play and stop sounds, as well as adjust global volume.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["Phaser.Stage"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "A reference to the Stage.", "public": true, "help": ""}, {"name": "time", "default": null, "type": ["Phaser.Time"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "A reference to the game clock and timed events system.", "public": true, "help": ""}, {"name": "tweens", "default": null, "type": ["Phaser.TweenManager"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "A reference to the tween manager.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.World"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "A reference to the game world. All objects live in the Game World and its size is not bound by the display resolution.", "public": true, "help": ""}], "private": []}, "class": {"help": "This is a base State class which can be extended if you are creating your own game.\\nIt provides quick access to common functions such as the camera, cache, input, match, sound and more.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "Phaser.State"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "create", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 138, "public": true, "help": "create is called once preload has completed, this includes the loading of any assets from the Loader.\\nIf you don't have a preload method then create is the first method called in your State."}, {"name": "loadRender", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 129, "public": true, "help": "loadRender is called during the Loader process. This only happens if you've set one or more assets to load in the preload method.\\nThe difference between loadRender and render is that any objects you render in this method you must be sure their assets exist."}, {"name": "loadUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 120, "public": true, "help": "loadUpdate is called during the Loader process. This only happens if you've set one or more assets to load in the preload method."}, {"name": "pauseUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 182, "public": true, "help": "pauseUpdate is called while the game is paused instead of preUpdate, update and postUpdate."}, {"name": "paused", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 174, "public": true, "help": "This method will be called if the core game loop is paused."}, {"name": "preload", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 112, "public": true, "help": "preload is called first. Normally you'd use this to load your game assets (or those needed for the current State)\\nYou shouldn't create any objects in this method that require assets that you're also loading in this method, as\\nthey won't yet be available."}, {"name": "render", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 158, "public": true, "help": "Nearly all display objects in Phaser render automatically, you don't need to tell them to render.\\nHowever the render method is called AFTER the game renderer and plugins have rendered, so you're able to do any\\nfinal post-processing style effects here. Note that this happens before plugins postRender takes place."}, {"name": "resize", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 166, "public": true, "help": "If your game is set to Scalemode RESIZE then each time the browser resizes it will call this function, passing in the new width and height."}, {"name": "shutdown", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 190, "public": true, "help": "This method will be called when the State is shutdown (i.e. you switch to another state from this one)."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 148, "public": true, "help": "The update method is left empty for your own use.\\nIt is called during the core game loop AFTER debug, physics, plugins and the Stage have had their preUpdate methods called.\\nIf is called BEFORE Stage, Tweens, Sounds, Input, Physics, Particles and Plugins have had their postUpdate methods called."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "mx", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "The x property of this PointProxy get and set in meters.", "public": true, "help": ""}, {"name": "my", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "The x property of this PointProxy get and set in meters.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "The x property of this PointProxy get and set in pixels.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The y property of this PointProxy get and set in pixels.", "public": true, "help": ""}], "private": []}, "class": {"help": "A PointProxy is an internal class that allows for direct getter/setter style property access to Arrays and TypedArrays.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["any"], "name": "destination", "help": "The object to bind to."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.PointProxy"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "data", "default": null, "type": ["object"], "private": false, "readOnly": true, "protected": false, "line": 253, "inlineHelp": "", "public": true, "help": "The data that was passed in with this event."}, {"name": "target", "default": null, "type": ["object"], "private": false, "readOnly": true, "protected": false, "line": 235, "inlineHelp": "", "public": true, "help": "The original target the event triggered on."}, {"name": "timeStamp", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 265, "inlineHelp": "", "public": true, "help": "The timestamp when the event occurred."}, {"name": "type", "default": null, "type": ["string"], "private": false, "readOnly": true, "protected": false, "line": 244, "inlineHelp": "", "public": true, "help": "The string name of the event that this represents."}], "private": [{"name": "stopped", "default": null, "type": ["boolean"], "private": true, "readOnly": true, "protected": false, "line": 215, "inlineHelp": "", "public": false, "help": "Tracks the state of bubbling propagation. Do not\\nset this directly, instead use `event.stopPropagation()`"}, {"name": "stoppedImmediate", "default": null, "type": ["boolean"], "private": true, "readOnly": true, "protected": false, "line": 226, "inlineHelp": "", "public": false, "help": "Tracks the state of sibling listener propagation. Do not\\nset this directly, instead use `event.stopImmediatePropagation()`"}]}, "class": {"help": "Mixins event emitter functionality to a class\\n\\nfunction MyEmitter() {}\\n\\nPIXI.EventTarget.mixin(MyEmitter.prototype);\\n\\nvar em = new MyEmitter();\\nem.emit('eventName', 'some data', 'some more data', {}, null, ...);", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "PIXI.EventTarget"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "emit", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "eventName", "help": "The name of the event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 62, "public": true, "help": "Emit an event to all registered event listeners."}, {"name": "listeners", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "eventName", "help": "The events that should be listed."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 48, "public": true, "help": "Return a list of assigned event listeners."}, {"name": "mixin", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "The obj to mix into"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 40, "public": true, "help": "Mixes in the properties of the EventTarget prototype onto another object"}, {"name": "off", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "eventName", "help": "The event we want to remove."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The listener that we need to find."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 151, "public": true, "help": "Remove event listeners."}, {"name": "on", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "eventName", "help": "Name of the event."}, {"default": null, "optional": false, "type": ["PIXI.Functon"], "name": "callback", "help": "fn Callback function."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 115, "public": true, "help": "Register a new EventListener for the given event."}, {"name": "once", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "eventName", "help": "Name of the event."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "Callback function."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 131, "public": true, "help": "Add an EventListener that's only called once."}, {"name": "removeAllListeners", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "eventName", "help": "The event you want to remove all listeners for."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 179, "public": true, "help": "Remove all listeners or only the listeners for the specified event."}, {"name": "stopImmediatePropagation", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 282, "public": true, "help": "Stops the propagation of events to sibling listeners (no longer calls any listeners)."}, {"name": "stopPropagation", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 273, "public": true, "help": "Stops the propagation of events up the scene graph (prevents bubbling)."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "matrix", "default": "[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]", "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "Sets the matrix of the color matrix filter"}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The ColorMatrixFilter class lets you apply a 4x4 matrix transformation on the RGBA\\ncolor and alpha values of every pixel on your displayObject to produce a result\\nwith a new set of RGBA color and alpha values. It's pretty powerful!", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.ColorMatrixFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "align", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "Alignment of the text when multiLine = true or a fixedWidth is set. Set to RetroFont.ALIGN_LEFT (default), RetroFont.ALIGN_RIGHT or RetroFont.ALIGN_CENTER.", "public": true, "help": ""}, {"name": "autoUpperCase", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "Automatically convert any text to upper case. Lots of old bitmap fonts only contain upper-case characters, so the default is true.", "public": true, "help": ""}, {"name": "baseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The base texture object that this texture uses"}, {"name": "characterHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "The height of each character in the font set.", "public": true, "help": ""}, {"name": "characterPerRow", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "The number of characters per row in the font set.", "public": true, "help": ""}, {"name": "characterSpacingX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "If the characters in the font set have horizontal spacing between them set the required amount here.", "public": true, "help": ""}, {"name": "characterSpacingY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "If the characters in the font set have vertical spacing between them set the required amount here.", "public": true, "help": ""}, {"name": "characterWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "The width of each character in the font set.", "public": true, "help": ""}, {"name": "crop", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "", "public": true, "help": "This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\\nirrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)"}, {"name": "customSpacingX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "Adds horizontal spacing between each character of the font, in pixels.", "public": true, "help": ""}, {"name": "customSpacingY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "Adds vertical spacing between each line of multi-line text, set in pixels.", "public": true, "help": ""}, {"name": "fixedWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "", "public": true, "help": "If you need this RetroFont image to have a fixed width you can set the width in this value.\\nIf text is wider than the width specified it will be cropped off."}, {"name": "fontSet", "default": null, "type": ["Image"], "private": false, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "A reference to the image stored in the Game.Cache that contains the font.", "public": true, "help": ""}, {"name": "frame", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "", "public": true, "help": "The framing rectangle of the render texture"}, {"name": "frameData", "default": null, "type": ["Phaser.FrameData"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "The FrameData representing this Retro Font.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "", "public": true, "help": "The height of the render texture"}, {"name": "key", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "The key of the RenderTexture in the Cache, if stored there.", "public": true, "help": ""}, {"name": "matrix", "default": null, "type": ["PIXI.Matrix"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "The matrix that is applied when display objects are rendered to this RenderTexture.", "public": true, "help": ""}, {"name": "multiLine", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "If set to true all carriage-returns in text will form new lines (see align). If false the font will only contain one single line of text (the default)", "public": true, "help": ""}, {"name": "noFrame", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "Does this Texture have any frame data assigned to it?"}, {"name": "offsetX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 66, "inlineHelp": "If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.", "public": true, "help": ""}, {"name": "offsetY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 72, "inlineHelp": "If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.", "public": true, "help": ""}, {"name": "renderer", "default": null, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "", "public": true, "help": "The renderer this RenderTexture uses. A RenderTexture can only belong to one renderer at the moment if its webGL."}, {"name": "requiresUpdate", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "", "public": true, "help": "This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The Resolution of the texture."}, {"name": "stamp", "default": null, "type": ["Phaser.Image"], "private": false, "readOnly": true, "protected": false, "line": 172, "inlineHelp": "The image that is stamped to the RenderTexture for each character in the font.", "public": true, "help": ""}, {"name": "text", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 602, "inlineHelp": "Set this value to update the text in this sprite. Carriage returns are automatically stripped out if multiLine is false. Text is converted to upper case if autoUpperCase is true.", "public": true, "help": ""}, {"name": "trim", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The texture trim data."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 179, "inlineHelp": "Base Phaser object type.", "public": true, "help": ""}, {"name": "valid", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": "The with of the render texture"}], "private": [{"name": "_text", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 119, "inlineHelp": "The text of the font image.", "public": false, "help": ""}, {"name": "grabData", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 125, "inlineHelp": "An array of rects for faster character pasting.", "public": false, "help": ""}]}, "class": {"help": "A Retro Font is similar to a BitmapFont, in that it uses a texture to render the text. However unlike a BitmapFont every character in a RetroFont\\nis the same size. This makes it similar to a sprite sheet. You typically find font sheets like this from old 8/16-bit games and demos.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The font set graphic set as stored in the Game.Cache."}, {"default": null, "optional": false, "type": ["number"], "name": "characterWidth", "help": "The width of each character in the font set."}, {"default": null, "optional": false, "type": ["number"], "name": "characterHeight", "help": "The height of each character in the font set."}, {"default": null, "optional": false, "type": ["string"], "name": "chars", "help": "The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements."}, {"default": null, "optional": true, "type": ["number"], "name": "charsPerRow", "help": "The number of characters per row in the font set. If not given charsPerRow will be the image width / characterWidth."}, {"default": "0", "optional": true, "type": ["number"], "name": "xSpacing", "help": "If the characters in the font set have horizontal spacing between them set the required amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "ySpacing", "help": "If the characters in the font set have vertical spacing between them set the required amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "xOffset", "help": "If the font set doesn't start at the top left of the given image, specify the X coordinate offset here."}, {"default": "0", "optional": true, "type": ["number"], "name": "yOffset", "help": "If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here."}], "static": false, "constructor": true, "extends": "Phaser.RenderTexture", "name": "Phaser.RetroFont"}, "consts": [{"line": 282, "type": "string", "name": "", "help": ""}, {"line": 219, "type": "string", "name": "/0123456789:;<", "help": ""}, {"line": 254, "type": "string", "name": "?06DJPV,", "help": ""}, {"line": 261, "type": "string", "name": "ABCDEFGHIJKLMNO", "help": ""}, {"line": 205, "type": "string", "name": "ALIGN_CENTER", "help": ""}, {"line": 191, "type": "string", "name": "ALIGN_LEFT", "help": ""}, {"line": 198, "type": "string", "name": "ALIGN_RIGHT", "help": ""}, {"line": 275, "type": "string", "name": "TEXT_SET10", "help": ""}, {"line": 226, "type": "string", "name": "TEXT_SET3", "help": ""}, {"line": 233, "type": "string", "name": "TEXT_SET4", "help": ""}], "methods": {"protected": [{"name": "removeUnsupportedCharacters", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "stripCR", "help": "Should it strip carriage returns as well?"}], "inheritedFrom": "", "private": false, "returns": {"help": " A clean version of the string.", "types": ["string"]}, "protected": true, "static": false, "inherited": false, "line": 506, "public": false, "help": "Internal helper function that removes all unsupported characters from the _text String, leaving only characters contained in the font set."}], "static": [], "public": [{"name": "addTextureToCache", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The Texture to add to the cache."}, {"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id that the texture will be stored against."}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": true, "inherited": true, "line": 292, "public": true, "help": "Adds a texture to the global PIXI.TextureCache. This cache is shared across the whole PIXI object."}, {"name": "buildRetroFontText", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 343, "public": true, "help": "Updates the texture with the new text."}, {"name": "clear", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 176, "public": true, "help": "Clears the RenderTexture."}, {"name": "destroy", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "destroyBase", "help": "Whether to destroy the base texture as well"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 155, "public": true, "help": "Destroys this texture"}, {"name": "fromCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Canvas"], "name": "canvas", "help": "The canvas element source of the texture"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 276, "public": true, "help": "Helper function that creates a new a Texture based on the given canvas element."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame id of the texture"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 260, "public": true, "help": "Helper function that returns a Texture objected based on the given frame id.\\nIf the frame id is not in the texture cache an error will be thrown."}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageUrl", "help": "The image url of the texture"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 238, "public": true, "help": "Helper function that creates a Texture object from the given image url.\\nIf the image is not in the texture cache it will be  created and loaded."}, {"name": "getBase64", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "A base64 encoded string of the texture.", "types": ["string"]}, "protected": false, "static": false, "inherited": true, "line": 294, "public": true, "help": "Will return a a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that."}, {"name": "getCanvas", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "A Canvas element with the texture rendered on.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": true, "line": 305, "public": true, "help": "Creates a Canvas element, renders this RenderTexture to it and then returns it."}, {"name": "getImage", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "", "types": ["Image"]}, "protected": false, "static": false, "inherited": true, "line": 281, "public": true, "help": "Will return a HTML Image of the texture"}, {"name": "getLongestLine", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The length of the longest line of text.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 477, "public": true, "help": "Works out the longest line of text in _text and returns its length"}, {"name": "pasteLine", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "line", "help": "The single line of text to paste."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate."}, {"default": null, "optional": false, "type": ["number"], "name": "customSpacingX", "help": "Custom X spacing."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 439, "public": true, "help": "Internal function that takes a single line of text (2nd parameter) and pastes it into the BitmapData at the given coordinates.\\nUsed by getLine and getMultiLine"}, {"name": "removeTextureFromCache", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id of the texture to be removed"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": "The texture that was removed", "types": ["PIXI.Texture"]}, "protected": false, "static": true, "inherited": true, "line": 305, "public": true, "help": "Remove a texture from the global PIXI.TextureCache."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapText", "Phaser.Group"], "name": "displayObject", "help": "  The display object to render to this texture."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "A Point object containing the position to render the display object at."}, {"default": null, "optional": false, "type": ["boolean"], "name": "clear", "help": "If true the texture will be cleared before the display object is drawn."}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 90, "public": true, "help": "This function will draw the display object to the texture."}, {"name": "renderXY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapText", "Phaser.Group"], "name": "displayObject", "help": "  The display object to render to this texture."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x position to render the object at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y position to render the object at."}, {"default": null, "optional": false, "type": ["boolean"], "name": "clear", "help": "If true the texture will be cleared before the display object is drawn."}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 66, "public": true, "help": "This function will draw the display object to the texture."}, {"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width to resize to."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height to resize to."}, {"default": null, "optional": false, "type": ["boolean"], "name": "updateBase", "help": "Should the baseTexture.width and height values be resized as well?"}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 145, "public": true, "help": "Resizes the RenderTexture."}, {"name": "setFixedWidth", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width in pixels of this RetroFont. Set to zero to disable and re-enable automatic resizing."}, {"default": "'left'", "optional": true, "type": ["string"], "name": "lineAlignment", "help": "Align the text within this width. Set to RetroFont.ALIGN_LEFT (default), RetroFont.ALIGN_RIGHT or RetroFont.ALIGN_CENTER."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 293, "public": true, "help": "If you need this RetroFont to have a fixed width and custom alignment you can set the width here.\\nIf text is wider than the width specified it will be cropped off."}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "frame", "help": "The frame of the texture to set it to"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 168, "public": true, "help": "Specifies the region of the baseTexture that this texture will use."}, {"name": "setText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "content", "help": "The text of this sprite."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "multiLine", "help": "Set to true if you want to support carriage-returns in the text and create a multi-line sprite instead of a single line."}, {"default": "0", "optional": true, "type": ["number"], "name": "characterSpacing", "help": "To add horizontal spacing between each character specify the amount in pixels."}, {"default": "0", "optional": true, "type": ["number"], "name": "lineSpacing", "help": "To add vertical spacing between each line of text, set the amount in pixels."}, {"default": "'left'", "optional": true, "type": ["string"], "name": "lineAlignment", "help": "Align each line of multi-line text. Set to RetroFont.ALIGN_LEFT, RetroFont.ALIGN_RIGHT or RetroFont.ALIGN_CENTER."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "allowLowerCase", "help": "Lots of bitmap font sets only include upper-case characters, if yours needs to support lower case then set this to true."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 314, "public": true, "help": "A helper function that quickly sets lots of variables at once, and then updates the text."}, {"name": "updateOffset", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "xOffset", "help": "If the font set doesn't start at the top left of the given image, specify the X coordinate offset here."}, {"default": "0", "optional": true, "type": ["number"], "name": "yOffset", "help": "If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 535, "public": true, "help": "Updates the x and/or y offset that the font is rendered from. This updates all of the texture frames, so be careful how often it is called.\\nNote that the values given for the x and y properties are either ADDED to or SUBTRACTED from (if negative) the existing offsetX/Y values of the characters.\\nSo if the current offsetY is 8 and you want it to start rendering from y16 you would call updateOffset(0, 8) to add 8 to the current y offset."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "channels", "default": "32", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "The number of audio channels to use in playback.", "public": true, "help": ""}, {"name": "connectToMaster", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "Used in conjunction with Sound.externalNode this allows you to stop a Sound node being connected to the SoundManager master gain node.", "public": true, "help": ""}, {"name": "context", "default": "null", "type": ["AudioContext"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "The AudioContext being used for playback.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "mute", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 548, "inlineHelp": "Gets or sets the muted state of the SoundManager. This effects all sounds in the game.", "public": true, "help": ""}, {"name": "noAudio", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "Has audio been disabled via the PhaserGlobal object? Useful if you need to use a 3rd party audio library instead.", "public": true, "help": ""}, {"name": "onSoundDecode", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "The event dispatched when a sound decodes (typically only for mp3 files)", "public": true, "help": ""}, {"name": "touchLocked", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "true if the audio system is currently locked awaiting a touch event.", "public": true, "help": ""}, {"name": "usingAudioTag", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 79, "inlineHelp": "true if the sound is being played via the Audio tag.", "public": true, "help": ""}, {"name": "usingWebAudio", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 73, "inlineHelp": "true if this sound is being played with Web Audio.", "public": true, "help": ""}, {"name": "volume", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 588, "inlineHelp": "Gets or sets the global volume of the SoundManager, a value between 0 and 1.", "public": true, "help": ""}], "private": [{"name": "_codeMuted", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "Internal mute tracking var.", "public": false, "help": ""}, {"name": "_muted", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Internal mute tracking var.", "public": false, "help": ""}, {"name": "_sounds", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "An array containing all the sounds", "public": false, "help": ""}, {"name": "_unlockSource", "default": "null", "type": ["AudioContext"], "private": true, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "Internal unlock tracking var.", "public": false, "help": ""}, {"name": "_volume", "default": "1", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "The global audio volume. A value between 0 (silence) and 1 (full volume).", "public": false, "help": ""}]}, "class": {"help": "The Sound Manager is responsible for playing back audio via either the Legacy HTML Audio tag or via Web Audio if the browser supports it.\\nNote: On Firefox 25+ on Linux if you have media.gstreamer disabled in about:config then it cannot play back mp3 or m4a files.\\nThe audio file type and the encoding of those files are extremely important. Not all browsers can play all audio formats.\\nThere is a good guide to what's supported here: http://hpr.dogphilosophy.net/test/", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": " reference to the current game instance."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.SoundManager"}, "consts": [], "methods": {"protected": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 114, "public": false, "help": "Initialises the sound manager."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "Default value for the volume."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "connect", "help": "Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new sound instance.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 355, "public": true, "help": "Adds a new Sound into the SoundManager."}, {"name": "addSprite", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new AudioSprite instance.", "types": ["Phaser.AudioSprite"]}, "protected": false, "static": false, "inherited": false, "line": 376, "public": true, "help": "Adds a new AudioSprite into the SoundManager."}, {"name": "decode", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Assets key of the sound to be decoded."}, {"default": null, "optional": true, "type": ["Phaser.Sound"], "name": "sound", "help": "Its buffer will be set to decoded data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 291, "public": true, "help": "Decode a sound by its assets key."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 523, "public": true, "help": "Stops all the sounds in the game, then destroys them and finally clears up any callbacks."}, {"name": "pauseAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 255, "public": true, "help": "Pauses all the sounds in the game."}, {"name": "play", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "Default value for the volume."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new sound instance.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 445, "public": true, "help": "Adds a new Sound into the SoundManager and starts it playing."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sound"], "name": "sound", "help": "The sound object to remove."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the sound was removed successfully, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 391, "public": true, "help": "Removes a Sound from the SoundManager. The removed Sound is destroyed before removal."}, {"name": "removeByKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key to match when removing sound objects."}], "inheritedFrom": "", "private": false, "returns": {"help": "The number of matching sound objects that were removed.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 417, "public": true, "help": "Removes all Sounds from the SoundManager that have an asset key matching the given value.\\nThe removed Sounds are destroyed before removal."}, {"name": "resumeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 272, "public": true, "help": "Resumes every sound in the game."}, {"name": "stopAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 238, "public": true, "help": "Stops all the sounds in the game."}, {"name": "unlock", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 203, "public": true, "help": "Enables the audio, usually after the first touch."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 322, "public": true, "help": "Updates every sound in the game."}], "private": [{"name": "setMute", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 461, "public": false, "help": "Internal mute handler called automatically by the Sound.mute setter."}, {"name": "unsetMute", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 493, "public": false, "help": "Internal mute handler called automatically by the Sound.mute setter."}]}}, {"properties": {"protected": [], "public": [{"name": "allowMultiple", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 144, "inlineHelp": "This will allow you to have multiple instances of this Sound playing at once. This is only useful when running under Web Audio, and we recommend you implement a local pooling system to not flood the sound channels.", "public": true, "help": ""}, {"name": "autoplay", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "Boolean indicating whether the sound should start automatically.", "public": true, "help": ""}, {"name": "context", "default": null, "type": ["AudioContext"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "Reference to the AudioContext instance.", "public": true, "help": ""}, {"name": "currentMarker", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "The string ID of the currently playing marker, if any.", "public": true, "help": ""}, {"name": "currentTime", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "The current time the sound is at.", "public": true, "help": ""}, {"name": "duration", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "The duration of the current sound marker in seconds.", "public": true, "help": ""}, {"name": "durationMS", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "The duration of the current sound marker in ms.", "public": true, "help": ""}, {"name": "externalNode", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 160, "inlineHelp": "If defined this Sound won't connect to the SoundManager master gain node, but will instead connect to externalNode.", "public": true, "help": ""}, {"name": "gainNode", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 170, "inlineHelp": "The gain node in a Web Audio system.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": "A reference to the currently running Game."}, {"name": "isDecoded", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 932, "inlineHelp": "Returns true if the sound file has decoded.", "public": true, "help": ""}, {"name": "isDecoding", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 919, "inlineHelp": "Returns true if the sound file is still decoding.", "public": true, "help": ""}, {"name": "isPlaying", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "true if the sound is currently playing, otherwise false.", "public": true, "help": ""}, {"name": "key", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "Asset key for the sound.", "public": true, "help": ""}, {"name": "loop", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "Whether or not the sound or current sound marker will loop.", "public": true, "help": ""}, {"name": "markers", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "The sound markers.", "public": true, "help": ""}, {"name": "masterGainNode", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 165, "inlineHelp": "The master gain node in a Web Audio system.", "public": true, "help": ""}, {"name": "mute", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 944, "inlineHelp": "Gets or sets the muted state of this sound.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "Name of the sound.", "public": true, "help": ""}, {"name": "onDecoded", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 214, "inlineHelp": "The onDecoded event is dispatched when the sound has finished decoding (typically for mp3 files)", "public": true, "help": ""}, {"name": "onFadeComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 254, "inlineHelp": "The onFadeComplete event is dispatched when this sound finishes fading either in or out.", "public": true, "help": ""}, {"name": "onLoop", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 234, "inlineHelp": "The onLoop event is dispatched when this sound loops during playback.", "public": true, "help": ""}, {"name": "onMarkerComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 249, "inlineHelp": "The onMarkerComplete event is dispatched when a marker within this sound completes playback.", "public": true, "help": ""}, {"name": "onMute", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 244, "inlineHelp": "The onMouse event is dispatched when this sound is muted.", "public": true, "help": ""}, {"name": "onPause", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 224, "inlineHelp": "The onPause event is dispatched when this sound is paused.", "public": true, "help": ""}, {"name": "onPlay", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 219, "inlineHelp": "The onPlay event is dispatched each time this sound is played.", "public": true, "help": ""}, {"name": "onResume", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 229, "inlineHelp": "The onResume event is dispatched when this sound is resumed from a paused state.", "public": true, "help": ""}, {"name": "onStop", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 239, "inlineHelp": "The onStop event is dispatched when this sound stops playback.", "public": true, "help": ""}, {"name": "override", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 138, "inlineHelp": "if true when you play this sound it will always start from the beginning.", "public": true, "help": ""}, {"name": "paused", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "true if the sound is paused, otherwise false.", "public": true, "help": ""}, {"name": "pausedPosition", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "The position the sound had reached when it was paused.", "public": true, "help": ""}, {"name": "pausedTime", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 114, "inlineHelp": "The game time at which the sound was paused.", "public": true, "help": ""}, {"name": "pendingPlayback", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 132, "inlineHelp": "true if the sound file is pending playback", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "The position of the current sound marker.", "public": true, "help": ""}, {"name": "startTime", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "The time the Sound starts at (typically 0 unless starting from a marker)", "public": true, "help": ""}, {"name": "stopTime", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "The time the sound stopped.", "public": true, "help": ""}, {"name": "totalDuration", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "The total duration of the sound in seconds.", "public": true, "help": ""}, {"name": "usingAudioTag", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 155, "inlineHelp": "true if the sound is being played via the Audio tag.", "public": true, "help": ""}, {"name": "usingWebAudio", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 150, "inlineHelp": "true if this sound is being played with Web Audio.", "public": true, "help": ""}, {"name": "volume", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 996, "inlineHelp": "Gets or sets the volume of this sound, a value between 0 and 1.", "public": true, "help": ""}], "private": [{"name": "_buffer", "default": null, "type": ["any"], "private": true, "readOnly": false, "protected": false, "line": 266, "inlineHelp": "Decoded data buffer / Audio tag.", "public": false, "help": ""}, {"name": "_muteVolume", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 296, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_muted", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 272, "inlineHelp": "Boolean indicating whether the sound is muted or not.", "public": false, "help": ""}, {"name": "_onDecodedEventDispatched", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 314, "inlineHelp": "Was the onDecoded event dispatched?", "public": false, "help": ""}, {"name": "_paused", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 308, "inlineHelp": "Was this sound paused via code or a game event?", "public": false, "help": ""}, {"name": "_tempLoop", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 302, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_tempMarker", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 278, "inlineHelp": "Internal marker var.", "public": false, "help": ""}, {"name": "_tempPosition", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 284, "inlineHelp": "Internal marker var.", "public": false, "help": ""}, {"name": "_tempVolume", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 290, "inlineHelp": "Internal marker var.", "public": false, "help": ""}, {"name": "_volume", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 260, "inlineHelp": "The global audio volume. A value between 0 (silence) and 1 (full volume).", "public": false, "help": ""}]}, "class": {"help": "The Sound class constructor.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Reference to the current game instance."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "Default value for the volume, between 0 and 1."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Sound"}, "consts": [], "methods": {"protected": [{"name": "soundHasUnlocked", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Phaser.Cache key of the sound file to check for decoding."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 325, "public": false, "help": "Called automatically when this sound is unlocked."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 379, "public": false, "help": "Called automatically by Phaser.SoundManager."}], "static": [], "public": [{"name": "addMarker", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "A unique name for this marker, i.e. 'explosion', 'gunshot', etc."}, {"default": null, "optional": false, "type": ["number"], "name": "start", "help": "The start point of this marker in the audio file, given in seconds. 2.5 = 2500ms, 0.5 = 500ms, etc."}, {"default": null, "optional": false, "type": ["number"], "name": "duration", "help": "The duration of the marker in seconds. 2.5 = 2500ms, 0.5 = 500ms, etc."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "The volume the sound will play back at, between 0 (silent) and 1 (full volume)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Sets if the sound will loop or not."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 346, "public": true, "help": "Adds a marker into the current Sound. A marker is represented by a unique key and a start time and duration.\\nThis allows you to bundle multiple sounds together into a single audio file and use markers to jump between them for playback."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "remove", "help": "If true this Sound is automatically removed from the SoundManager."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 881, "public": true, "help": "Destroys this sound and all associated events and removes it from the SoundManager."}, {"name": "fadeIn", "parameters": [{"default": "1000", "optional": true, "type": ["number"], "name": "duration", "help": "The time in milliseconds over which the Sound should fade in."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the Sound be set to loop? Note that this doesn't cause the fade to repeat."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 799, "public": true, "help": "Starts this sound playing (or restarts it if already doing so) and sets the volume to zero.\\nThen increases the volume from 0 to 1 over the duration specified.\\nAt the end of the fade Sound.onFadeComplete is dispatched with this Sound object as the first parameter,\\nand the final volume (1) as the second parameter."}, {"name": "fadeOut", "parameters": [{"default": "1000", "optional": true, "type": ["number"], "name": "duration", "help": "The time in milliseconds over which the Sound should fade out."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 822, "public": true, "help": "Decreases the volume of this Sound from its current value to 0 over the duration specified.\\nAt the end of the fade Sound.onFadeComplete is dispatched with this Sound object as the first parameter,\\nand the final volume (0) as the second parameter."}, {"name": "fadeTo", "parameters": [{"default": "1000", "optional": true, "type": ["number"], "name": "duration", "help": "The time in milliseconds during which the Sound should fade out."}, {"default": null, "optional": true, "type": ["number"], "name": "volume", "help": "The volume which the Sound should fade to. This is a value between 0 and 1."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 837, "public": true, "help": "Fades the volume of this Sound from its current value to the given volume over the duration specified.\\nAt the end of the fade Sound.onFadeComplete is dispatched with this Sound object as the first parameter,\\nand the final volume (volume) as the second parameter."}, {"name": "pause", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 673, "public": true, "help": "Pauses the sound."}, {"name": "play", "parameters": [{"default": "''", "optional": true, "type": ["string"], "name": "marker", "help": "If you want to play a marker then give the key here, otherwise leave blank to play the full sound."}, {"default": "0", "optional": true, "type": ["number"], "name": "position", "help": "The starting position to play the sound from - this is ignored if you provide a marker."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "Volume of the sound you want to play. If none is given it will use the volume given to the Sound when it was created (which defaults to 1 if none was specified)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Loop when it finished playing?"}, {"default": "true", "optional": true, "type": ["boolean"], "name": "forceRestart", "help": "If the sound is already playing you can set forceRestart to restart it from the beginning."}], "inheritedFrom": "", "private": false, "returns": {"help": "This sound instance.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 448, "public": true, "help": "Play this sound, or a marked section of it."}, {"name": "removeMarker", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The key of the marker to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 368, "public": true, "help": "Removes a marker from the sound."}, {"name": "restart", "parameters": [{"default": "''", "optional": true, "type": ["string"], "name": "marker", "help": "If you want to play a marker then give the key here, otherwise leave blank to play the full sound."}, {"default": "0", "optional": true, "type": ["number"], "name": "position", "help": "The starting position to play the sound from - this is ignored if you provide a marker."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "Volume of the sound you want to play."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Loop when it finished playing?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 657, "public": true, "help": "Restart the sound, or a marked section of it."}, {"name": "resume", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 691, "public": true, "help": "Resumes the sound."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 744, "public": true, "help": "Stop playing this sound."}], "private": [{"name": "fadeComplete", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 864, "public": false, "help": "Internal handler for Sound.fadeIn, Sound.fadeOut and Sound.fadeTo."}]}}, {"properties": {"protected": [], "public": [{"name": "baseUrl", "default": null, "type": ["string"], "private": false, "readOnly": true, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "[read-only] The base url of the bitmap font data"}, {"name": "crossorigin", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "Whether the requests should be treated as cross origin"}, {"name": "frames", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "", "public": true, "help": "The frames of the sprite sheet"}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "The texture being loaded"}, {"name": "url", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The url of the atlas data"}], "private": []}, "class": {"help": "The sprite sheet loader is used to load in JSON sprite sheet data\\nTo generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format\\nThere is a free version so thats nice, although the paid version is great value for money.\\nIt is highly recommended to use Sprite sheets (also know as a 'texture atlas') as it means sprites can be batched and drawn together for highly increased rendering speed.\\nOnce the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\\nThis loader will load the image file that the Spritesheet points to as well as the data.\\nWhen loaded this class will dispatch a 'loaded' event", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url of the sprite sheet JSON file"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.SpriteSheetLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 74, "public": true, "help": "This will begin loading the JSON file"}], "private": [{"name": "onLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 90, "public": false, "help": "Invoke when all files are loaded (json and texture)"}]}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "Responsible for parsing sprite sheet and JSON data into the internal FrameData format that Phaser uses for animations.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.AnimationParser"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "JSONData", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["object"], "name": "json", "help": "The JSON data from the Texture Atlas. Must be in Array format."}, {"default": null, "optional": false, "type": ["string"], "name": "cacheKey", "help": "The Game.Cache asset key of the texture image."}], "inheritedFrom": "", "private": false, "returns": {"help": "A FrameData object containing the parsed frames.", "types": ["Phaser.FrameData"]}, "protected": false, "static": false, "inherited": false, "line": 108, "public": true, "help": "Parse the JSON data and extract the animation frame data from it."}, {"name": "JSONDataHash", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["object"], "name": "json", "help": "The JSON data from the Texture Atlas. Must be in JSON Hash format."}, {"default": null, "optional": false, "type": ["string"], "name": "cacheKey", "help": "The Game.Cache asset key of the texture image."}], "inheritedFrom": "", "private": false, "returns": {"help": "A FrameData object containing the parsed frames.", "types": ["Phaser.FrameData"]}, "protected": false, "static": false, "inherited": false, "line": 173, "public": true, "help": "Parse the JSON data and extract the animation frame data from it."}, {"name": "XMLData", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["object"], "name": "xml", "help": "The XML data from the Texture Atlas. Must be in Starling XML format."}, {"default": null, "optional": false, "type": ["string"], "name": "cacheKey", "help": "The Game.Cache asset key of the texture image."}], "inheritedFrom": "", "private": false, "returns": {"help": "A FrameData object containing the parsed frames.", "types": ["Phaser.FrameData"]}, "protected": false, "static": false, "inherited": false, "line": 241, "public": true, "help": "Parse the XML data and extract the animation frame data from it."}, {"name": "spriteSheet", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.Cache asset key of the Sprite Sheet image."}, {"default": null, "optional": false, "type": ["number"], "name": "frameWidth", "help": "The fixed width of each frame of the animation."}, {"default": null, "optional": false, "type": ["number"], "name": "frameHeight", "help": "The fixed height of each frame of the animation."}, {"default": "-1", "optional": true, "type": ["number"], "name": "frameMax", "help": "The total number of animation frames to extact from the Sprite Sheet. The default value of -1 means \"extract all frames\"."}, {"default": "0", "optional": true, "type": ["number"], "name": "margin", "help": "If the frames have been drawn with a margin, specify the amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "spacing", "help": "If the frames have been drawn with spacing between them, specify the amount here."}], "inheritedFrom": "", "private": false, "returns": {"help": "A FrameData object containing the parsed frames.", "types": ["Phaser.FrameData"]}, "protected": false, "static": false, "inherited": false, "line": 28, "public": true, "help": "Parse a Sprite Sheet and extract the animation frame data from it."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "A collection of easing methods defining ease-in and ease-out curves.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.Easing"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "In", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "k", "help": "The value to be tweened."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 512, "public": true, "help": "Bounce ease-in."}, {"name": "InOut", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "k", "help": "The value to be tweened."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 554, "public": true, "help": "Bounce ease-in/out."}, {"name": "None", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "k", "help": "The value to be tweened."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 30, "public": true, "help": "Linear Easing (no variation)."}, {"name": "Out", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "k", "help": "The value to be tweened."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 525, "public": true, "help": "Bounce ease-out."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "OVERLAP_BIAS", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "A value added to the delta values during collision checks.", "public": true, "help": ""}, {"name": "TILE_BIAS", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "A value added to the delta values during collision with tiles. Adjust this if you get tunnelling.", "public": true, "help": ""}, {"name": "bounds", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "The bounds inside of which the physics world exists. Defaults to match the world bounds.", "public": true, "help": ""}, {"name": "checkCollision", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "An object containing allowed collision flags.", "public": true, "help": "Set the checkCollision properties to control for which bounds collision is processed.\\nFor example checkCollision.down = false means Bodies cannot collide with the World.bounds.bottom."}, {"name": "forceX", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "If true World.separate will always separate on the X axis before Y. Otherwise it will check gravity totals first.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "gravity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "The World gravity setting. Defaults to x: 0, y: 0, or no gravity.", "public": true, "help": ""}, {"name": "maxLevels", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "Used by the QuadTree to set the maximum number of iteration levels.", "public": true, "help": ""}, {"name": "maxObjects", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Used by the QuadTree to set the maximum number of objects per quad.", "public": true, "help": ""}, {"name": "quadTree", "default": null, "type": ["Phaser.QuadTree"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The world QuadTree.", "public": true, "help": ""}, {"name": "skipQuadTree", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "If true a QuadTree will never be used for any collision. Handy for tightly packed games. See also Body.skipQuadTree.", "public": true, "help": ""}], "private": [{"name": "_angle", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 139, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_average", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_dx", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 145, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_dy", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 151, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_mapData", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_maxOverlap", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_newVelocity1", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_newVelocity2", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_overlap", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_result", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_total", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 133, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_velocity1", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_velocity2", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "The Arcade Physics world. Contains Arcade Physics related collision, overlap and motion methods.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "reference to the current game instance."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Arcade"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "accelerateToObject", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to move."}, {"default": null, "optional": false, "type": ["any"], "name": "destination", "help": "The display object to move towards. Can be any object but must have visible x/y properties."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will accelerate in pixels per second."}, {"default": "500", "optional": true, "type": ["number"], "name": "xSpeedMax", "help": "The maximum x velocity the display object can reach."}, {"default": "500", "optional": true, "type": ["number"], "name": "ySpeedMax", "help": "The maximum y velocity the display object can reach."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle (in radians) that the object should be visually set to in order to match its new trajectory.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1615, "public": true, "help": "Sets the acceleration.x/y property on the display object so it will move towards the target at the given speed (in pixels per second sq.)\\nYou must give a maximum speed value, beyond which the display object won't go any faster.\\nNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\\nNote: The display object doesn't stop moving once it reaches the destination coordinates."}, {"name": "accelerateToPointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to move."}, {"default": null, "optional": true, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The pointer to move towards. Defaults to Phaser.Input.activePointer."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will accelerate in pixels per second."}, {"default": "500", "optional": true, "type": ["number"], "name": "xSpeedMax", "help": "The maximum x velocity the display object can reach."}, {"default": "500", "optional": true, "type": ["number"], "name": "ySpeedMax", "help": "The maximum y velocity the display object can reach."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle (in radians) that the object should be visually set to in order to match its new trajectory.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1644, "public": true, "help": "Sets the acceleration.x/y property on the display object so it will move towards the target at the given speed (in pixels per second sq.)\\nYou must give a maximum speed value, beyond which the display object won't go any faster.\\nNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\\nNote: The display object doesn't stop moving once it reaches the destination coordinates."}, {"name": "accelerateToXY", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to move."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to accelerate towards."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to accelerate towards."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will accelerate in pixels per second."}, {"default": "500", "optional": true, "type": ["number"], "name": "xSpeedMax", "help": "The maximum x velocity the display object can reach."}, {"default": "500", "optional": true, "type": ["number"], "name": "ySpeedMax", "help": "The maximum y velocity the display object can reach."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle (in radians) that the object should be visually set to in order to match its new trajectory.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1675, "public": true, "help": "Sets the acceleration.x/y property on the display object so it will move towards the x/y coordinates at the given speed (in pixels per second sq.)\\nYou must give a maximum speed value, beyond which the display object won't go any faster.\\nNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\\nNote: The display object doesn't stop moving once it reaches the destination coordinates."}, {"name": "accelerationFromRotation", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "rotation", "help": "The angle in radians."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will move, in pixels per second sq."}, {"default": null, "optional": true, "type": ["Phaser.Point", "object"], "name": "point", "help": "The Point object in which the x and y properties will be set to the calculated acceleration."}], "inheritedFrom": "", "private": false, "returns": {"help": "- A Point where point.x contains the acceleration x value and point.y contains the acceleration y value.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 1592, "public": true, "help": "Given the rotation (in radians) and speed calculate the acceleration and return it as a Point object, or set it to the given point object.\\nOne way to use this is: accelerationFromRotation(rotation, 200, sprite.acceleration) which will set the values directly to the sprites acceleration and not create a new Point object."}, {"name": "angleBetween", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The Display Object to test from."}, {"default": null, "optional": false, "type": ["any"], "name": "target", "help": "The Display Object to test to."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle in radians between the source and target display objects.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1756, "public": true, "help": "Find the angle in radians between two display objects (like Sprites)."}, {"name": "angleToPointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The Display Object to test from."}, {"default": null, "optional": true, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Phaser.Pointer to test to. If none is given then Input.activePointer is used."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle in radians between displayObject.x/y to Pointer.x/y", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1791, "public": true, "help": "Find the angle in radians between a display object (like a Sprite) and a Pointer, taking their x/y and center into account."}, {"name": "angleToXY", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The Display Object to test from."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to get the angle to."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to get the angle to."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle in radians between displayObject.x/y to Pointer.x/y", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1774, "public": true, "help": "Find the angle in radians between a display object (like a Sprite) and the given x/y coordinate."}, {"name": "collide", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer", "array"], "name": "object1", "help": "The first object or array of objects to check. Can be Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter, or Phaser.TilemapLayer."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer", "array"], "name": "object2", "help": "The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter or Phaser.TilemapLayer."}, {"default": "null", "optional": true, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them, unless you are colliding Group vs. Sprite, in which case Sprite will always be the first parameter."}, {"default": "null", "optional": true, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if a collision occured otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 414, "public": true, "help": "Checks for collision between two game objects. You can perform Sprite vs. Sprite, Sprite vs. Group, Group vs. Group, Sprite vs. Tilemap Layer or Group vs. Tilemap Layer collisions.\\nBoth the first and second parameter can be arrays of objects, of differing types.\\nIf two arrays are passed, the contents of the first parameter will be tested against all contents of the 2nd parameter.\\nThe objects are also automatically separated. If you don't require separation then use ArcadePhysics.overlap instead.\\nAn optional processCallback can be provided. If given this function will be called when two sprites are found to be colliding. It is called before any separation takes place,\\ngiving you the chance to perform additional checks. If the function returns true then the collision and separation is carried out. If it returns false it is skipped.\\nThe collideCallback is an optional function that is only called if two sprites collide. If a processCallback has been set then it needs to return true for collideCallback to be called.\\nNOTE: This function is not recursive, and will not test against children of objects passed (i.e. Groups or Tilemaps within other Groups)."}, {"name": "computeVelocity", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "axis", "help": "0 for nothing, 1 for horizontal, 2 for vertical."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body object to be updated."}, {"default": null, "optional": false, "type": ["number"], "name": "velocity", "help": "Any component of velocity (e.g. 20)."}, {"default": null, "optional": false, "type": ["number"], "name": "acceleration", "help": "Rate at which the velocity is changing."}, {"default": null, "optional": false, "type": ["number"], "name": "drag", "help": "Really kind of a deceleration, this is how much the velocity changes if Acceleration is not set."}, {"default": "10000", "optional": true, "type": ["number"], "name": "max", "help": "An absolute value cap for the velocity."}], "inheritedFrom": "", "private": false, "returns": {"help": "The altered Velocity value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 290, "public": true, "help": "A tween-like function that takes a starting velocity and some other factors and returns an altered velocity.\\nBased on a function in Flixel by @ADAMATOMIC"}, {"name": "distanceBetween", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The Display Object to test from."}, {"default": null, "optional": false, "type": ["any"], "name": "target", "help": "The Display Object to test to."}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between the source and target objects.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1698, "public": true, "help": "Find the distance between two display objects (like Sprites)."}, {"name": "distanceToPointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The Display Object to test from."}, {"default": null, "optional": true, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Phaser.Pointer to test to. If none is given then Input.activePointer is used."}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between the object and the Pointer.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1737, "public": true, "help": "Find the distance between a display object (like a Sprite) and a Pointer. If no Pointer is given the Input.activePointer is used.\\nThe calculation is made from the display objects x/y coordinate. This may be the top-left if its anchor hasn't been changed.\\nIf you need to calculate from the center of a display object instead use the method distanceBetweenCenters()"}, {"name": "distanceToXY", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The Display Object to test from."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to move towards."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to move towards."}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between the object and the x/y coordinates.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1718, "public": true, "help": "Find the distance between a display object (like a Sprite) and the given x/y coordinates.\\nThe calculation is made from the display objects x/y coordinate. This may be the top-left if its anchor hasn't been changed.\\nIf you need to calculate from the center of a display object instead use the method distanceBetweenCenters()"}, {"name": "enable", "parameters": [{"default": null, "optional": false, "type": ["object", "array", "Phaser.Group"], "name": "object", "help": "The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "children", "help": "Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 196, "public": true, "help": "This will create an Arcade Physics body on the given game object or array of game objects.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed."}, {"name": "enableBody", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "The game object to create the physics body on. A body will only be created if this object has a null `body` property."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 251, "public": true, "help": "Creates an Arcade Physics body on the given game object.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the body is nulled."}, {"name": "getObjectsUnderPointer", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer to check."}, {"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group", "help": "The Group to check."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": "A callback function that is called if the object overlaps with the Pointer. The callback will be sent two parameters: the Pointer and the Object that overlapped with it."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callback."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of the Sprites from the Group that overlapped the Pointer coordinates.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1403, "public": true, "help": "Given a Group and a Pointer this will check to see which Group children overlap with the Pointer coordinates.\\nEach child will be sent to the given callback for further processing.\\nNote that the children are not checked for depth order, but simply if they overlap the Pointer or not."}, {"name": "intersects", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body1", "help": "The Body object to check."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body2", "help": "The Body object to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if they intersect, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 854, "public": true, "help": "Check for intersection against two bodies."}, {"name": "moveToObject", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to move."}, {"default": null, "optional": false, "type": ["any"], "name": "destination", "help": "The display object to move towards. Can be any object but must have visible x/y properties."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will move, in pixels per second (default is 60 pixels/sec)"}, {"default": "0", "optional": true, "type": ["number"], "name": "maxTime", "help": "Time given in milliseconds (1000 = 1 sec). If set the speed is adjusted so the object will arrive at destination in the given number of ms."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle (in radians) that the object should be visually set to in order to match its new velocity.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1453, "public": true, "help": "Move the given display object towards the destination object at a steady velocity.\\nIf you specify a maxTime then it will adjust the speed (overwriting what you set) so it arrives at the destination in that number of seconds.\\nTimings are approximate due to the way browser timers work. Allow for a variance of +- 50ms.\\nNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\\nNote: The display object doesn't stop moving once it reaches the destination coordinates.\\nNote: Doesn't take into account acceleration, maxVelocity or drag (if you've set drag or acceleration too high this object may not move at all)"}, {"name": "moveToPointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to move."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will move, in pixels per second (default is 60 pixels/sec)"}, {"default": null, "optional": true, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The pointer to move towards. Defaults to Phaser.Input.activePointer."}, {"default": "0", "optional": true, "type": ["number"], "name": "maxTime", "help": "Time given in milliseconds (1000 = 1 sec). If set the speed is adjusted so the object will arrive at destination in the given number of ms."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle (in radians) that the object should be visually set to in order to match its new velocity.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1487, "public": true, "help": "Move the given display object towards the pointer at a steady velocity. If no pointer is given it will use Phaser.Input.activePointer.\\nIf you specify a maxTime then it will adjust the speed (over-writing what you set) so it arrives at the destination in that number of seconds.\\nTimings are approximate due to the way browser timers work. Allow for a variance of +- 50ms.\\nNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\\nNote: The display object doesn't stop moving once it reaches the destination coordinates."}, {"name": "moveToXY", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to move."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to move towards."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to move towards."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will move, in pixels per second (default is 60 pixels/sec)"}, {"default": "0", "optional": true, "type": ["number"], "name": "maxTime", "help": "Time given in milliseconds (1000 = 1 sec). If set the speed is adjusted so the object will arrive at destination in the given number of ms."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle (in radians) that the object should be visually set to in order to match its new velocity.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1524, "public": true, "help": "Move the given display object towards the x/y coordinates at a steady velocity.\\nIf you specify a maxTime then it will adjust the speed (over-writing what you set) so it arrives at the destination in that number of seconds.\\nTimings are approximate due to the way browser timers work. Allow for a variance of +- 50ms.\\nNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\\nNote: The display object doesn't stop moving once it reaches the destination coordinates.\\nNote: Doesn't take into account acceleration, maxVelocity or drag (if you've set drag or acceleration too high this object may not move at all)"}, {"name": "overlap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "array"], "name": "object1", "help": "The first object or array of objects to check. Can be Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "array"], "name": "object2", "help": "The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter."}, {"default": "null", "optional": true, "type": ["function"], "name": "overlapCallback", "help": "An optional callback function that is called if the objects overlap. The two objects will be passed to this function in the same order in which you specified them."}, {"default": "null", "optional": true, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then overlapCallback will only be called if processCallback returns true."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if an overlap occurred otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 354, "public": true, "help": "Checks for overlaps between two game objects. The objects can be Sprites, Groups or Emitters.\\nYou can perform Sprite vs. Sprite, Sprite vs. Group and Group vs. Group overlap checks.\\nUnlike collide the objects are NOT automatically separated or have any physics applied, they merely test for overlap results.\\nBoth the first and second parameter can be arrays of objects, of differing types.\\nIf two arrays are passed, the contents of the first parameter will be tested against all contents of the 2nd parameter.\\nNOTE: This function is not recursive, and will not test against children of objects passed (i.e. Groups within Groups)."}, {"name": "setBounds", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Top left most corner of the world."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Top left most corner of the world."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "New width of the world. Can never be smaller than the Game.width."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "New height of the world. Can never be smaller than the Game.height."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 171, "public": true, "help": "Updates the size of this physics world."}, {"name": "setBoundsToWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 182, "public": true, "help": "Updates the size of this physics world to match the size of the game world."}, {"name": "updateMotion", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "The", "help": " Body object to be updated."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 266, "public": true, "help": "Called automatically by a Physics body, it updates all motion related values on the Body."}, {"name": "velocityFromAngle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle in degrees calculated in clockwise positive direction (down = 90 degrees positive, right = 0 degrees positive, up = 90 degrees negative)"}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will move, in pixels per second sq."}, {"default": null, "optional": true, "type": ["Phaser.Point", "object"], "name": "point", "help": "The Point object in which the x and y properties will be set to the calculated velocity."}], "inheritedFrom": "", "private": false, "returns": {"help": "- A Point where point.x contains the velocity x value and point.y contains the velocity y value.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 1554, "public": true, "help": "Given the angle (in degrees) and speed calculate the velocity and return it as a Point object, or set it to the given point object.\\nOne way to use this is: velocityFromAngle(angle, 200, sprite.velocity) which will set the values directly to the sprites velocity and not create a new Point object."}, {"name": "velocityFromRotation", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "rotation", "help": "The angle in radians."}, {"default": "60", "optional": true, "type": ["number"], "name": "speed", "help": "The speed it will move, in pixels per second sq."}, {"default": null, "optional": true, "type": ["Phaser.Point", "object"], "name": "point", "help": "The Point object in which the x and y properties will be set to the calculated velocity."}], "inheritedFrom": "", "private": false, "returns": {"help": "- A Point where point.x contains the velocity x value and point.y contains the velocity y value.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 1573, "public": true, "help": "Given the rotation (in radians) and speed calculate the velocity and return it as a Point object, or set it to the given point object.\\nOne way to use this is: velocityFromRotation(rotation, 200, sprite.velocity) which will set the values directly to the sprites velocity and not create a new Point object."}], "private": [{"name": "collideGroupVsGroup", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group1", "help": "The first Group to check."}, {"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group2", "help": "The second Group to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 680, "public": false, "help": "An internal function. Use Phaser.Physics.Arcade.collide instead."}, {"name": "collideGroupVsSelf", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group", "help": "The Group to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": {"help": "True if there was a collision, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 646, "public": false, "help": "An internal function. Use Phaser.Physics.Arcade.collide instead."}, {"name": "collideGroupVsTilemapLayer", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group", "help": "The Group to check."}, {"default": null, "optional": false, "type": ["Phaser.TilemapLayer"], "name": "tilemapLayer", "help": "The layer to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 780, "public": false, "help": "An internal function. Use Phaser.Physics.Arcade.collide instead."}, {"name": "collideHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer"], "name": "object1", "help": "The first object to check. Can be an instance of Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter, or Phaser.TilemapLayer."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer"], "name": "object2", "help": "The second object to check. Can be an instance of Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter or Phaser.TilemapLayer. Can also be an array of objects to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 468, "public": false, "help": "Internal collision handler."}, {"name": "collideSpriteVsGroup", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The sprite to check."}, {"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group", "help": "The Group to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 589, "public": false, "help": "An internal function. Use Phaser.Physics.Arcade.collide instead."}, {"name": "collideSpriteVsSprite", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite1", "help": "The first sprite to check."}, {"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite2", "help": "The second sprite to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": {"help": "True if there was a collision, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 556, "public": false, "help": "An internal function. Use Phaser.Physics.Arcade.collide instead."}, {"name": "collideSpriteVsTilemapLayer", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The sprite to check."}, {"default": null, "optional": false, "type": ["Phaser.TilemapLayer"], "name": "tilemapLayer", "help": "The layer to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 716, "public": false, "help": "An internal function. Use Phaser.Physics.Arcade.collide instead."}, {"name": "processTileSeparationX", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x separation amount."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns true as a pass-thru to the separateTile method.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1335, "public": false, "help": "Internal function to process the separation of a physics body from a tile."}, {"name": "processTileSeparationY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y separation amount."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1367, "public": false, "help": "Internal function to process the separation of a physics body from a tile."}, {"name": "separate", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body1", "help": "The first Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body2", "help": "The second Body object to separate."}, {"default": "null", "optional": true, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this function is set then the sprites will only be collided if it returns true."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the process callback."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns true if the bodies collided, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 809, "public": false, "help": "The core separation function to separate two physics bodies."}, {"name": "separateTile", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Tile"], "name": "tile", "help": "The tile to collide against."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns true if the body was separated, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1134, "public": false, "help": "The core separation function to separate a physics body and a tile."}, {"name": "separateX", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body1", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body2", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "If true the bodies will only have their overlap data set, no separation or exchange of velocity will take place."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns true if the bodies were separated, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 890, "public": false, "help": "The core separation function to separate two physics bodies on the x axis."}, {"name": "separateY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body1", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body2", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "If true the bodies will only have their overlap data set, no separation or exchange of velocity will take place."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns true if the bodies were separated, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1006, "public": false, "help": "The core separation function to separate two physics bodies on the y axis."}, {"name": "tileCheckX", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Tile"], "name": "tile", "help": "The tile to check."}], "inheritedFrom": "", "private": true, "returns": {"help": "The amount of separation that occured.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1237, "public": false, "help": "Check the body against the given tile on the X axis."}, {"name": "tileCheckY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body"], "name": "body", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Tile"], "name": "tile", "help": "The tile to check."}], "inheritedFrom": "", "private": true, "returns": {"help": "The amount of separation that occured.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1286, "public": false, "help": "Check the body against the given tile on the Y axis."}]}}, {"properties": {"protected": [], "public": [{"name": "[friction=0.3]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "Friction to use in the contact of these two materials.", "public": true, "help": ""}, {"name": "[frictionRelaxation=3]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "Relaxation of the resulting FrictionEquation that this ContactMaterial generate.", "public": true, "help": ""}, {"name": "[frictionStiffness=1e7]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "Stiffness of the resulting FrictionEquation that this ContactMaterial generate.", "public": true, "help": ""}, {"name": "[relaxation=3]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "Relaxation of the resulting ContactEquation that this ContactMaterial generate.", "public": true, "help": ""}, {"name": "[restitution=0.0]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "Restitution to use in the contact of these two materials.", "public": true, "help": ""}, {"name": "[stiffness=1e7]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Stiffness of the resulting ContactEquation that this ContactMaterial generate.", "public": true, "help": ""}, {"name": "[surfaceVelocity=0]", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "Will add surface velocity to this material. If bodyA rests on top if bodyB, and the surface velocity is positive, bodyA will slide to the right.", "public": true, "help": ""}, {"name": "id", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "The contact material identifier.", "public": true, "help": ""}, {"name": "materialA", "default": null, "type": ["Phaser.Physics.P2.Material"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "First material participating in the contact material.", "public": true, "help": ""}, {"name": "materialB", "default": null, "type": ["Phaser.Physics.P2.Material"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "Second material participating in the contact material.", "public": true, "help": ""}], "private": []}, "class": {"help": "Defines a physics material", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "materialA", "help": "First material participating in the contact material."}, {"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "materialB", "help": "Second material participating in the contact material."}, {"default": null, "optional": true, "type": ["object"], "name": "options", "help": "Additional configuration options."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.ContactMaterial"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "a flat array of numbers that will be interpreted as [x,y, x,y, ...], or the arguments passed can be\\nall the points of the polygon e.g. `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the\\narguments passed can be flat x,y values e.g. `new PIXI.Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are\\nNumbers.", "parameters": [{"default": null, "optional": false, "type": ["array Phaser.Point", "array number", "Phaser.Point", "number"], "name": "points*", "help": "This can be an array of Points that form the polygon,"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.Polygon"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "a copy of the polygon", "types": ["Phaser.Polygon"]}, "protected": false, "static": false, "inherited": false, "line": 41, "public": true, "help": "Creates a clone of this polygon"}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the point to test"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the point to test"}], "inheritedFrom": "", "private": false, "returns": {"help": "Whether the x/y coordinates are within this polygon", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 55, "public": true, "help": "Checks whether the x and y coordinates passed to this function are contained within this polygon"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "Locks the relative position between two bodies.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": true, "type": ["array"], "name": "offset", "help": "The offset of bodyB in bodyA's frame. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": "0", "optional": true, "type": ["number"], "name": "angle", "help": "The angle of bodyB in bodyA's frame."}, {"default": null, "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.LockConstraint"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "The atlas file loader is used to load in Texture Atlas data and parse it. When loaded this class will dispatch a 'loaded' event. If loading fails this class will dispatch an 'error' event.\\n\\nTo generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format.\\n\\nIt is highly recommended to use texture atlases (also know as 'sprite sheets') as it allowed sprites to be batched and drawn together for highly increased rendering speed.\\nOnce the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url of the JSON file"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.AtlasLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 37, "public": true, "help": "Starts loading the JSON file"}], "private": [{"name": "onAtlasLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 52, "public": false, "help": "Invoked when the Atlas has fully loaded. Parses the JSON and builds the texture frames."}, {"name": "onError", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 188, "public": false, "help": "Invoked when an error occurs."}, {"name": "onLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 172, "public": false, "help": "Invoked when json file has loaded."}]}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "animationSpeed", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "", "public": true, "help": "The speed that the MovieClip will play at. Higher is faster, lower is slower"}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "currentFrame", "default": "0", "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "[read-only] The MovieClips current frame index (this may not have to be a whole number)"}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": "The height of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "loop", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "Whether or not the movie clip repeats after playing."}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "onComplete", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "Function to call when a MovieClip finishes playing"}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "playing", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the MovieClip is currently playing"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "textures", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": "The array of textures that make up the animation"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "totalFrames", "default": "0", "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "[read-only] totalFrames is the total number of frames in the MovieClip. This is the same as number of textures\\nassigned to the MovieClip."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": []}, "class": {"help": "A MovieClip is a simple way to display an animation depicted by a list of textures.", "parameters": [{"default": null, "optional": false, "type": ["array PIXI.Texture"], "name": "textures", "help": "an array of {Texture} objects that make up the animation"}], "static": false, "constructor": true, "extends": "PIXI.Sprite", "name": "PIXI.MovieClip"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromFrames", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "frames", "help": "the array of frames ids the movieclip will use as its texture frames"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 176, "public": true, "help": "A short hand way of creating a movieclip from an array of frame ids"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "fromImages", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "frames", "help": "the array of image ids the movieclip will use as its texture frames"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 195, "public": true, "help": "A short hand way of creating a movieclip from an array of image ids"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "gotoAndPlay", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "frameNumber", "help": "frame index to start at"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 131, "public": true, "help": "Goes to a specific frame and begins playing the MovieClip"}, {"name": "gotoAndStop", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "frameNumber", "help": "frame index to stop at"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 117, "public": true, "help": "Stops the MovieClip and goes to a specific frame"}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "play", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 106, "public": true, "help": "Plays the MovieClip"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 96, "public": true, "help": "Stops the MovieClip"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "aabbTileProjections", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "All of the collision response handlers.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 64, "inlineHelp": "The height.", "public": true, "help": ""}, {"name": "oldpos", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "The position of this object in the previous update.", "public": true, "help": ""}, {"name": "pos", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "The position of this object.", "public": true, "help": ""}, {"name": "system", "default": null, "type": ["Phaser.Physics.Ninja"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the physics system.", "public": true, "help": ""}, {"name": "velocity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "The velocity of this object.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 58, "inlineHelp": "The width.", "public": true, "help": ""}, {"name": "xw", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 52, "inlineHelp": "Half the height.", "public": true, "help": ""}], "private": [{"name": "oH", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "oV", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "Internal var.", "public": false, "help": ""}]}, "class": {"help": "Ninja Physics AABB constructor.\\nNote: This class could be massively optimised and reduced in size. I leave that challenge up to you.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Body"], "name": "body", "help": "The body that owns this shape."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to create this shape at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to create this shape at."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of this AABB."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of this AABB."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Ninja.AABB"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "collideAABBVsAABB", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "aabb", "help": "The AABB to collide against."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 346, "public": true, "help": "Collides this AABB against a AABB."}, {"name": "collideAABBVsTile", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "tile", "help": "The Tile to collide against."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 418, "public": true, "help": "Collides this AABB against a Tile."}, {"name": "collideWorldBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 304, "public": true, "help": "Collides this AABB against the world bounds."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1002, "public": true, "help": "Destroys this AABB's reference to Body and System"}, {"name": "integrate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 113, "public": true, "help": "Updates this AABBs position."}, {"name": "projAABB_22DegB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 716, "public": true, "help": "Resolves 22 Degree tile collision."}, {"name": "projAABB_22DegS", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 636, "public": true, "help": "Resolves 22 Degree tile collision."}, {"name": "projAABB_45Deg", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 583, "public": true, "help": "Resolves 45 Degree tile collision."}, {"name": "projAABB_67DegB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 848, "public": true, "help": "Resolves 67 Degree tile collision."}, {"name": "projAABB_67DegS", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 769, "public": true, "help": "Resolves 67 Degree tile collision."}, {"name": "projAABB_Concave", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 949, "public": true, "help": "Resolves Concave tile collision."}, {"name": "projAABB_Convex", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 899, "public": true, "help": "Resolves Convex tile collision."}, {"name": "projAABB_Full", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 505, "public": true, "help": "Resolves Full tile collision."}, {"name": "projAABB_Half", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "obj", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 524, "public": true, "help": "Resolves Half tile collision."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context to render to."}, {"default": null, "optional": false, "type": ["number"], "name": "xOffset", "help": "X offset from AABB's position to render at."}, {"default": null, "optional": false, "type": ["number"], "name": "yOffset", "help": "Y offset from AABB's position to render at."}, {"default": null, "optional": false, "type": ["string"], "name": "color", "help": "color of the debug shape to be rendered. (format is css color string)."}, {"default": null, "optional": false, "type": ["boolean"], "name": "filled", "help": "Render the shape as solid (true) or hollow (false)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1017, "public": true, "help": "Render this AABB for debugging purposes."}, {"name": "reportCollisionVsBody", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "px", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "py", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "obj", "help": "Object this AABB collided with"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 242, "public": true, "help": "Process a body collision and apply the resulting forces. Still very much WIP and doesn't work fully. Feel free to fix!"}, {"name": "reportCollisionVsWorld", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "px", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "py", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "obj", "help": "Object this AABB collided with"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 138, "public": true, "help": "Process a world collision and apply the resulting forces."}, {"name": "resolveTile", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.AABB"], "name": "body", "help": "The AABB involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "tile", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the collision was processed, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 481, "public": true, "help": "Resolves tile collision."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "Based on the Polyk library http://polyk.ivank.net released under MIT licence.\\nThis is an amazing lib!\\nSlightly modified by Mat Groves (matgroves.com);", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "PIXI.PolyK"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "Triangulate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 47, "public": true, "help": "Triangulates shapes for webGL graphic fills."}], "private": [{"name": "_PointInTriangle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "px", "help": "x coordinate of the point to test"}, {"default": null, "optional": false, "type": ["number"], "name": "py", "help": "y coordinate of the point to test"}, {"default": null, "optional": false, "type": ["number"], "name": "ax", "help": "x coordinate of the a point of the triangle"}, {"default": null, "optional": false, "type": ["number"], "name": "ay", "help": "y coordinate of the a point of the triangle"}, {"default": null, "optional": false, "type": ["number"], "name": "bx", "help": "x coordinate of the b point of the triangle"}, {"default": null, "optional": false, "type": ["number"], "name": "by", "help": "y coordinate of the b point of the triangle"}, {"default": null, "optional": false, "type": ["number"], "name": "cx", "help": "x coordinate of the c point of the triangle"}, {"default": null, "optional": false, "type": ["number"], "name": "cy", "help": "y coordinate of the c point of the triangle"}], "inheritedFrom": "", "private": true, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 135, "public": false, "help": "Checks whether a point is within a triangle"}, {"name": "_convex", "parameters": [], "inheritedFrom": "", "private": true, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 165, "public": false, "help": "Checks whether a shape is convex"}]}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "map", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "", "public": true, "help": "The texture used for the displacement map. Must be power of 2 sized texture."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The AlphaMaskFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\\nYou can use this filter to apply all manor of crazy warping effects\\nCurrently the r property of the texture is used to offset the x and the g property of the texture is used to offset the y.", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The texture used for the displacement map * must be power of 2 texture at the moment"}], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.AlphaMaskFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "onTextureLoaded", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 76, "public": true, "help": "Sets the map dimensions uniforms when the texture becomes available."}, {"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [{"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 39, "inlineHelp": "Internal Phaser Type value.", "public": false, "help": ""}], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "alphaData", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "An array of the calculated alpha easing data applied to particles with alphaRates > 0.", "public": true, "help": ""}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1814, "inlineHelp": "The angle of rotation given in degrees, where 0 degrees = to the right.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "angularDrag", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "The angular drag component of particles launched from the emitter if they are rotating.", "public": true, "help": ""}, {"name": "area", "default": "new Phaser.Rectangle(x, y, 1, 1)", "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "The area of the emitter. Particles can be randomly generated from anywhere within this rectangle.", "public": true, "help": ""}, {"name": "autoAlpha", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 187, "inlineHelp": "When a new Particle is emitted this controls if it will automatically change alpha. Use Emitter.setAlpha to configure.", "public": true, "help": ""}, {"name": "autoScale", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 182, "inlineHelp": "When a new Particle is emitted this controls if it will automatically scale in size. Use Emitter.setScale to configure.", "public": true, "help": ""}, {"name": "blendMode", "default": "Phaser.blendModes.NORMAL", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 161, "inlineHelp": "The blendMode as set on the particle when emitted from the Emitter. Defaults to NORMAL. Needs browser capable of supporting canvas blend-modes (most not available in WebGL)", "public": true, "help": ""}, {"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 828, "inlineHelp": "Gets the bottom position of the Emitter.", "public": true, "help": ""}, {"name": "bounce", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 143, "inlineHelp": "How much each particle should bounce on each axis. 1 = full bounce, 0 = no bounce.", "public": true, "help": ""}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "classType", "default": "Phaser.Sprite", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame."}, {"name": "cursor", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The current display object that the Group cursor is pointing to.", "public": true, "help": "The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "emitX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 169, "inlineHelp": "", "public": true, "help": "The point the particles are emitted from.\\nEmitter.x and Emitter.y control the containers location, which updates all current particles\\nEmitter.emitX and Emitter.emitY control the emission location relative to the x/y position."}, {"name": "emitY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 177, "inlineHelp": "", "public": true, "help": "The point the particles are emitted from.\\nEmitter.x and Emitter.y control the containers location, which updates all current particles\\nEmitter.emitX and Emitter.emitY control the emission location relative to the x/y position."}, {"name": "enableBody", "default": "enableBody", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.", "public": true, "help": ""}, {"name": "enableBodyDebug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "If exists is true the Group is updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1834, "inlineHelp": "Set to true to fix this Group to the Camera at its current world coordinates.", "public": true, "help": "A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "frequency", "default": "100", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "How often a particle is emitted in ms (if emitter is started with Explode === false).", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "gravity", "default": "100", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "Sets the `body.gravity.y` of each particle sprite to this value on launch.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 740, "inlineHelp": "Gets or sets the height of the Emitter. This is the region in which a particle can be emitted.", "public": true, "help": ""}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "ignoreDestroy", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.", "public": true, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "left", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 789, "inlineHelp": "Gets the left position of the Emitter.", "public": true, "help": ""}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1798, "inlineHelp": "The total number of children in this Group, regardless of their exists/alive status.", "public": true, "help": ""}, {"name": "lifespan", "default": "2000", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 138, "inlineHelp": "How long each particle lives once it is emitted in ms. Default is 2 seconds. Set lifespan to 'zero' for particles to live forever.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "maxParticleAlpha", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "The maximum possible alpha value of a particle.", "public": true, "help": ""}, {"name": "maxParticleScale", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "The maximum possible scale of a particle. This is applied to the X and Y axis. If you need to control each axis see maxParticleScaleX.", "public": true, "help": ""}, {"name": "maxParticleSpeed", "default": "new Phaser.Point(100, 100)", "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "The maximum possible velocity of a particle.", "public": true, "help": ""}, {"name": "maxParticles", "default": "maxParticles || 50", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "The total number of particles in this emitter.", "public": true, "help": ""}, {"name": "maxRotation", "default": "360", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "The maximum possible angular velocity of a particle.", "public": true, "help": ""}, {"name": "minParticleAlpha", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "The minimum possible alpha value of a particle.", "public": true, "help": ""}, {"name": "minParticleScale", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "The minimum possible scale of a particle. This is applied to the X and Y axis. If you need to control each axis see minParticleScaleX.", "public": true, "help": ""}, {"name": "minParticleSpeed", "default": "new Phaser.Point(-100, -100)", "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "The minimum possible velocity of a particle.", "public": true, "help": ""}, {"name": "minRotation", "default": "-360", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "The minimum possible angular velocity of a particle.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "A handy string name for this emitter. Can be set to anything.", "public": true, "help": ""}, {"name": "on", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 149, "inlineHelp": "Determines whether the emitter is currently emitting particles. It is totally safe to directly toggle this.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Group", "Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The parent of this Group.", "public": true, "help": ""}, {"name": "particleAnchor", "default": "new Phaser.Point(0.5, 0.5)", "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 155, "inlineHelp": "When a particle is created its anchor will be set to match this Point object (defaults to x/y: 0.5 to aid in rotation)", "public": true, "help": ""}, {"name": "particleBringToTop", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 193, "inlineHelp": "If this is `true` then when the Particle is emitted it will be bought to the top of the Emitters display list.", "public": true, "help": ""}, {"name": "particleClass", "default": "Phaser.Particle", "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "For emitting your own particle class types. They must extend Phaser.Particle.", "public": true, "help": ""}, {"name": "particleDrag", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "The X and Y drag component of particles launched from the emitter.", "public": true, "help": ""}, {"name": "particleSendToBack", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 199, "inlineHelp": "If this is `true` then when the Particle is emitted it will be sent to the back of the Emitters display list.", "public": true, "help": ""}, {"name": "physicsBodyType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.", "public": true, "help": ""}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The pivot point of the Group container.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 802, "inlineHelp": "Gets the right position of the Emitter.", "public": true, "help": ""}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1879, "inlineHelp": "The angle of rotation given in radians.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The scale of the Group container.", "public": true, "help": ""}, {"name": "scaleData", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "An array of the calculated scale easing data applied to particles with scaleRates > 0.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "top", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 815, "inlineHelp": "Gets the top position of the Emitter.", "public": true, "help": ""}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1783, "inlineHelp": "The total number of children in this Group who have a state of exists = true.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1884, "inlineHelp": "The visible state of the Group. Non-visible Groups and all of their children are not rendered.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 724, "inlineHelp": "Gets or sets the width of the Emitter. This is the region in which a particle can be emitted.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 756, "inlineHelp": "Gets or sets the x position of the Emitter.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 772, "inlineHelp": "Gets or sets the y position of the Emitter.", "public": true, "help": ""}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_counter", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 229, "inlineHelp": "Internal counter for figuring out how many particles to launch.", "public": false, "help": ""}, {"name": "_explode", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 235, "inlineHelp": "Internal helper for the style of particle emission (all at once, or one at a time).", "public": false, "help": ""}, {"name": "_frames", "default": null, "type": ["any"], "private": true, "readOnly": false, "protected": false, "line": 241, "inlineHelp": "Internal helper for the particle frame.", "public": false, "help": ""}, {"name": "_maxParticleScale", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 211, "inlineHelp": "Internal particle scale var.", "public": false, "help": ""}, {"name": "_minParticleScale", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 205, "inlineHelp": "Internal particle scale var.", "public": false, "help": ""}, {"name": "_quantity", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 217, "inlineHelp": "Internal helper for deciding how many particles to launch.", "public": false, "help": ""}, {"name": "_timer", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 223, "inlineHelp": "Internal helper for deciding when to launch particles or kill them.", "public": false, "help": ""}]}, "class": {"help": "Emitter is a lightweight particle emitter that uses Arcade Physics.\\nIt can be used for one-time explosions or for continuous effects like rain and fire.\\nAll it really does is launch Particle objects out at set intervals, and fixes their positions and velocities accordingly.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate within the Emitter that the particles are emitted from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate within the Emitter that the particles are emitted from."}, {"default": "50", "optional": true, "type": ["number"], "name": "maxParticles", "help": "The total number of particles in this emitter."}], "static": false, "constructor": true, "extends": "Phaser.Group", "name": "Phaser.Particles.Arcade.Emitter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 209, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method."}, {"name": "addAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to increment, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 956, "public": true, "help": "Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value."}, {"name": "addAt", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index within the Group to insert the child to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 273, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering."}, {"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addMultiple", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "children", "help": "An array containing instances of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The array of children that were added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 249, "public": true, "help": "Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array."}, {"name": "ascendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1385, "public": true, "help": "An internal helper function for the sort process."}, {"name": "at", "parameters": [{"default": null, "optional": false, "type": ["object", "Phaser.Sprite", "Phaser.Image", "Phaser.TileSprite", "Phaser.Text", "PIXI.DisplayObject"], "name": "object", "help": "The object that you wish to match the center with."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 705, "public": true, "help": "Change the emitters center to match the center of any object with a `center` property, such as a Sprite.\\nIf the object doesn't have a center property it will be set to object.x + object.width / 2"}, {"name": "bringToTop", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to bring to the top of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 509, "public": true, "help": "Brings the given child to the top of this Group so it renders above all other children."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "method", "help": "A string containing the name of the function that will be called. The function must exist on the child."}, {"default": "null", "optional": true, "type": ["string"], "name": "context", "help": "A string containing the context under which the method will be executed. Set to null to default to the child."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the method."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1095, "public": true, "help": "Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child."}, {"name": "callAllExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that exists on the children that will be called."}, {"default": null, "optional": false, "type": ["boolean"], "name": "existsValue", "help": "Only children with exists=existsValue will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1019, "public": true, "help": "Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback."}, {"name": "checkAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 925, "public": true, "help": "This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children."}, {"name": "checkProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was was equal to value, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 790, "public": true, "help": "Checks a property for the given value on the child."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "countDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as dead.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1582, "public": true, "help": "Call this function to find out how many members of the group are dead."}, {"name": "countLiving", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as alive.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1570, "public": true, "help": "Call this function to find out how many members of the group are alive."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed.", "types": ["Phaser.Sprite", "object"]}, "protected": false, "static": false, "inherited": true, "line": 335, "public": true, "help": "Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "createMultiple", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "quantity", "help": "The number of Sprites to create."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 380, "public": true, "help": "Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "customSort", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "sortHandler", "help": "Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The scope in which the sortHandler is called."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1364, "public": true, "help": "This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b."}, {"name": "descendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1416, "public": true, "help": "An internal helper function for the sort process."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this Group have its destroy method called?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "soft", "help": "A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1751, "public": true, "help": "Destroys this Group. Removes all children, then removes the container from the display list and nulls references."}, {"name": "divideAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to divide, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1004, "public": true, "help": "Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value."}, {"name": "emitParticle", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 466, "public": true, "help": "This function can be used both internally and externally to emit the next particle in the queue."}, {"name": "explode", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "lifespan", "help": "How long each particle lives once emitted in ms. 0 = forever."}, {"default": "0", "optional": true, "type": ["number"], "name": "quantity", "help": "How many particles to launch."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 400, "public": true, "help": "Call this function to emit the given quantity of particles at all once (an explosion)"}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "predicate", "help": "The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns an array list containing all the children that the predicate returned true for", "types": ["Phaser.ArrayList"]}, "protected": false, "static": false, "inherited": true, "line": 1223, "public": true, "help": "Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "flow", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "lifespan", "help": "How long each particle lives once emitted in ms. 0 = forever."}, {"default": "250", "optional": true, "type": ["number"], "name": "frequency", "help": "Frequency is how often to emit a particle, given in ms."}, {"default": "0", "optional": true, "type": ["number"], "name": "quantity", "help": "How many particles to launch."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 414, "public": true, "help": "Call this function to start emitting a flow of particles at the given frequency."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1250, "public": true, "help": "Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEachAlive", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1295, "public": true, "help": "Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)"}, {"name": "forEachDead", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1313, "public": true, "help": "Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)"}, {"name": "forEachExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1277, "public": true, "help": "Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to return the child from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was found at the given index. If the index was out of bounds then this will return -1.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 310, "public": true, "help": "Returns the child found at the given index within this Group."}, {"name": "getBottom", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the bottom of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1555, "public": true, "help": "Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getFirstAlive", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first alive child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1515, "public": true, "help": "Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first dead child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1528, "public": true, "help": "Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstExists", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "True or false."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1497, "public": true, "help": "Call this function to retrieve the first object with exists == (the given state) in the Group."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to get the index for."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The index of the child or -1 if it's not a member of this Group.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 629, "public": true, "help": "Get the index position of the given child in this Group. This should always match the childs z property."}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "A random child of this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1596, "public": true, "help": "Returns a member at random from the group."}, {"name": "getTop", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the top of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1540, "public": true, "help": "Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child."}, {"name": "hasProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check for the existance of the property on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the child has the property, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 679, "public": true, "help": "Checks if the child has the given property. Will scan up to 4 levels deep only."}, {"name": "iterate", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The child property to check, i.e. 'exists', 'alive', 'health'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "If child.key === this value it will be considered a match. Note that a strict comparison is used."}, {"default": null, "optional": false, "type": ["number"], "name": "returnType", "help": "How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD."}, {"default": "null", "optional": true, "type": ["function"], "name": "callback", "help": "Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns either a numeric total (if RETURN_TOTAL was specified) or the child object.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1446, "public": true, "help": "Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter."}, {"name": "kill", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 373, "public": true, "help": "Call this function to turn off all the particles and the emitter."}, {"name": "makeParticles", "parameters": [{"default": null, "optional": false, "type": ["array", "string"], "name": "keys", "help": "A string or an array of strings that the particle sprites will use as their texture. If an array one is picked at random."}, {"default": "0", "optional": true, "type": ["array", "number"], "name": "frames", "help": "A frame number, or array of frames that the sprite will use. If an array one is picked at random."}, {"default": null, "optional": true, "type": ["number"], "name": "quantity", "help": "The number of particles to generate. If not given it will use the value of Emitter.maxParticles."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "collide", "help": "If you want the particles to be able to collide with other Arcade Physics bodies then set this to true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "collideWorldBounds", "help": "A particle can be set to collide against the World bounds automatically and rebound back into the World if this is set to true. Otherwise it will leave the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Emitter instance.", "types": ["Phaser.Particles.Arcade.Emitter"]}, "protected": false, "static": false, "inherited": false, "line": 314, "public": true, "help": "This function generates a new set of particles for use by this emitter.\\nThe particles are stored internally waiting to be emitted via Emitter.start."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move down in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 571, "public": true, "help": "Moves the given child down one place in this Group unless it's already at the top."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move up in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 547, "public": true, "help": "Moves the given child up one place in this Group unless it's already at the top."}, {"name": "multiplyAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to multiply, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 988, "public": true, "help": "Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value."}, {"name": "next", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 439, "public": true, "help": "Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object."}, {"name": "previous", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 466, "public": true, "help": "Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to remove."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "true if the child was removed from this Group, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 1620, "public": true, "help": "Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child."}, {"name": "removeAll", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on each child that is removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1661, "public": true, "help": "Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list."}, {"name": "removeBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "The index to start removing children from."}, {"default": null, "optional": true, "type": ["number"], "name": "endIndex", "help": "The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1700, "public": true, "help": "Removes all children from this Group whos index falls beteen the given startIndex and endIndex values."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "oldChild", "help": "The child in this Group that will be replaced."}, {"default": null, "optional": false, "type": ["any"], "name": "newChild", "help": "The child to be inserted into this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns the oldChild that was replaced within this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 643, "public": true, "help": "Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group."}, {"name": "resetCursor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "index", "help": "Set the cursor to point to a specific index."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 415, "public": true, "help": "Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead."}, {"name": "reverse", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 615, "public": true, "help": "Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered."}, {"name": "revive", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 386, "public": true, "help": "Handy for bringing game objects \"back to life\". Just sets alive and exists back to true."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "sendToBack", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to send to the bottom of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": "Sends the given child to the bottom of this Group so it renders below all other children."}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "child", "help": "The child to set the property on."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then the child will only be updated if alive=true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then the child will only be updated if visible=true."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 823, "public": true, "help": "This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 854, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAllChildren", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 889, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAlpha", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "min", "help": "The minimum value for this range."}, {"default": "1", "optional": true, "type": ["number"], "name": "max", "help": "The maximum value for this range."}, {"default": "0", "optional": true, "type": ["number"], "name": "rate", "help": "The rate (in ms) at which the particles will change in alpha from min to max, or set to zero to pick a random alpha between the two."}, {"default": "Phaser.Easing.Linear.None", "optional": true, "type": ["number"], "name": "ease", "help": "If you've set a rate > 0 this is the easing formula applied between the min and max values."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "yoyo", "help": "If you've set a rate > 0 you can set if the ease will yoyo or not (i.e. ease back to its original values)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 623, "public": true, "help": "A more compact way of setting the alpha constraints of the particles.\\nThe rate parameter, if set to a value above zero, lets you set the speed at which the Particle change in alpha from min to max.\\nIf rate is zero, which is the default, the particle won't change alpha - instead it will pick a random alpha between min and max on emit."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to set the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 720, "public": true, "help": "Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value."}, {"name": "setRotation", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "min", "help": "The minimum value for this range."}, {"default": "0", "optional": true, "type": ["number"], "name": "max", "help": "The maximum value for this range."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 601, "public": true, "help": "A more compact way of setting the angular velocity constraints of the particles."}, {"name": "setScale", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "minX", "help": "The minimum value of Particle.scale.x."}, {"default": "1", "optional": true, "type": ["number"], "name": "maxX", "help": "The maximum value of Particle.scale.x."}, {"default": "1", "optional": true, "type": ["number"], "name": "minY", "help": "The minimum value of Particle.scale.y."}, {"default": "1", "optional": true, "type": ["number"], "name": "maxY", "help": "The maximum value of Particle.scale.y."}, {"default": "0", "optional": true, "type": ["number"], "name": "rate", "help": "The rate (in ms) at which the particles will change in scale from min to max, or set to zero to pick a random size between the two."}, {"default": "Phaser.Easing.Linear.None", "optional": true, "type": ["number"], "name": "ease", "help": "If you've set a rate > 0 this is the easing formula applied between the min and max values."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "yoyo", "help": "If you've set a rate > 0 you can set if the ease will yoyo or not (i.e. ease back to its original values)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 664, "public": true, "help": "A more compact way of setting the scale constraints of the particles.\\nThe rate parameter, if set to a value above zero, lets you set the speed and ease which the Particle uses to change in scale from min to max across both axis.\\nIf rate is zero, which is the default, the particle won't change scale during update, instead it will pick a random scale between min and max on emit."}, {"name": "setSize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The desired width of the emitter (particles are spawned randomly within these dimensions)."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The desired height of the emitter."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 555, "public": true, "help": "A more compact way of setting the width and height of the emitter."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setXSpeed", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "min", "help": "The minimum value for this range."}, {"default": "0", "optional": true, "type": ["number"], "name": "max", "help": "The maximum value for this range."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 568, "public": true, "help": "A more compact way of setting the X velocity range of the emitter."}, {"name": "setYSpeed", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "min", "help": "The minimum value for this range."}, {"default": "0", "optional": true, "type": ["number"], "name": "max", "help": "The maximum value for this range."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 584, "public": true, "help": "A more compact way of setting the Y velocity range of the emitter."}, {"name": "sort", "parameters": [{"default": "'z'", "optional": true, "type": ["string"], "name": "index", "help": "The `string` name of the property you want to sort on. Defaults to the objects z-depth value."}, {"default": "Phaser.Group.SORT_ASCENDING", "optional": true, "type": ["number"], "name": "order", "help": "The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1330, "public": true, "help": "Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`."}, {"name": "start", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "explode", "help": "Whether the particles should all burst out at once (true) or at the frequency given (false)."}, {"default": "0", "optional": true, "type": ["number"], "name": "lifespan", "help": "How long each particle lives once emitted in ms. 0 = forever."}, {"default": "250", "optional": true, "type": ["number"], "name": "frequency", "help": "Ignored if Explode is set to true. Frequency is how often to emit 1 particle. Value given in ms."}, {"default": "0", "optional": true, "type": ["number"], "name": "quantity", "help": "How many particles to launch. 0 = \"all of the particles\"."}, {"default": "false", "optional": true, "type": ["number"], "name": "forceQuantity", "help": "If true and creating a particle flow, the quantity emitted will be forced to the be quantity given in this call."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 430, "public": true, "help": "Call this function to start emitting particles."}, {"name": "subAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to decrement, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 972, "public": true, "help": "Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value."}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child1", "help": "The first child to swap."}, {"default": null, "optional": false, "type": ["any"], "name": "child2", "help": "The second child to swap."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 495, "public": true, "help": "Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 252, "public": true, "help": "Called automatically by the game loop, decides when to launch particles and when to \"die\"."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "xy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the child in the Group to set the position of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the child."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the child."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 596, "public": true, "help": "Positions the child found at the given index within this Group to the given x and y coordinates."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 46, "inlineHelp": "", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.ScaleManager"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "A reference to the ScaleManager.", "public": true, "help": ""}, {"name": "scaleFactor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 55, "inlineHelp": "The scale factor based on the game dimensions vs. the scaled dimensions.", "public": true, "help": ""}], "private": []}, "class": {"help": "WARNING: This is an EXPERIMENTAL class. The API will change significantly in the coming versions and is incomplete.\\nPlease try to avoid using in production games with a long time to build.\\nThis is also why the documentation is incomplete.\\n\\nFlexGrid is a a responsive grid manager that works in conjunction with the ScaleManager RESIZE scaling mode and FlexLayers\\nto provide for game object positioning in a responsive manner.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.ScaleManager"], "name": "manager", "help": "The ScaleManager."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the game."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.FlexGrid"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "createCustomLayer", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width of this layer in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "Height of this layer in pixels."}, {"default": null, "optional": true, "type": ["array"], "name": "children", "help": "An array of children that are used to populate the FlexLayer."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Layer object.", "types": ["Phaser.FlexLayer"]}, "protected": false, "static": false, "inherited": false, "line": 113, "public": true, "help": "A custom layer is centered on the game and maintains its aspect ratio as it scales up and down."}, {"name": "createFixedLayer", "parameters": [{"default": null, "optional": true, "type": ["array"], "name": "children", "help": "An array of children that are used to populate the FlexLayer."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Layer object.", "types": ["Phaser.FlexLayer"]}, "protected": false, "static": false, "inherited": false, "line": 201, "public": true, "help": "A fixed layer is centered on the game and is the size of the required dimensions and is never scaled."}, {"name": "createFluidLayer", "parameters": [{"default": null, "optional": true, "type": ["array"], "name": "children", "help": "An array of children that are used to populate the FlexLayer."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Layer object.", "types": ["Phaser.FlexLayer"]}, "protected": false, "static": false, "inherited": false, "line": 148, "public": true, "help": "A fluid layer is centered on the game and maintains its aspect ratio as it scales up and down."}, {"name": "createFullLayer", "parameters": [{"default": null, "optional": true, "type": ["array"], "name": "children", "help": "An array of children that are used to populate the FlexLayer."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Layer object.", "types": ["Phaser.FlexLayer"]}, "protected": false, "static": false, "inherited": false, "line": 177, "public": true, "help": "A full layer is placed at 0,0 and extends to the full size of the game. Children are scaled according to the fluid ratios."}, {"name": "debug", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 304, "public": true, "help": "Call in the render function to output the bounds rects."}, {"name": "onResize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The new width of the game container."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The new height of the game container."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 247, "public": true, "help": "Called when the game container changes dimensions."}, {"name": "refresh", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 258, "public": true, "help": "Updates all internal vars such as the bounds and scale values."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 223, "public": true, "help": "Resets the layer children references"}, {"name": "setSize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The new dimensions."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The new dimensions."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 84, "public": true, "help": "Sets the core game size. This resets the w/h parameters and bounds."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "_cacheMap", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 123, "inlineHelp": "Const to cache object look-up array.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "onSoundUnlock", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "This event is dispatched when the sound system is unlocked via a touch event on cellular devices.", "public": true, "help": ""}], "private": [{"name": "_binary", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Binary file key-value container.", "public": false, "help": ""}, {"name": "_bitmapDatas", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "BitmapData key-value container.", "public": false, "help": ""}, {"name": "_bitmapFont", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "BitmapFont key-value container.", "public": false, "help": ""}, {"name": "_canvases", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "Canvas key-value container.", "public": false, "help": ""}, {"name": "_images", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "Image key-value container.", "public": false, "help": ""}, {"name": "_json", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "JSOIN key-value container.", "public": false, "help": ""}, {"name": "_physics", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "Physics data key-value container.", "public": false, "help": ""}, {"name": "_sounds", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Sound key-value container.", "public": false, "help": ""}, {"name": "_text", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Text key-value container.", "public": false, "help": ""}, {"name": "_textures", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "RenderTexture key-value container.", "public": false, "help": ""}, {"name": "_tilemaps", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Tilemap key-value container.", "public": false, "help": ""}, {"name": "_urlMap", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "Maps URLs to resources.", "public": false, "help": ""}, {"name": "_urlResolver", "default": null, "type": ["Image"], "private": true, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Used to resolve URLs to the absolute path.", "public": false, "help": ""}, {"name": "_urlTemp", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "Temporary variable to hold a resolved url.", "public": false, "help": ""}, {"name": "_xml", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "XML key-value container.", "public": false, "help": ""}]}, "class": {"help": "A game only has one instance of a Cache and it is used to store all externally loaded assets such as images, sounds\\nand data files as a result of Loader calls. Cached items use string based keys for look-up.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Cache"}, "consts": [{"line": 186, "type": "number", "name": "BINARY", "help": ""}, {"line": 192, "type": "number", "name": "BITMAPDATA", "help": ""}, {"line": 198, "type": "number", "name": "BITMAPFONT", "help": ""}, {"line": 144, "type": "number", "name": "CANVAS", "help": ""}, {"line": 150, "type": "number", "name": "IMAGE", "help": ""}, {"line": 204, "type": "number", "name": "JSON", "help": ""}, {"line": 174, "type": "number", "name": "PHYSICS", "help": ""}, {"line": 162, "type": "number", "name": "SOUND", "help": ""}, {"line": 168, "type": "number", "name": "TEXT", "help": ""}, {"line": 156, "type": "number", "name": "TEXTURE", "help": ""}, {"line": 180, "type": "number", "name": "TILEMAP", "help": ""}, {"line": 210, "type": "number", "name": "XML", "help": ""}], "methods": {"protected": [{"name": "addDefaultImage", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 401, "public": false, "help": "Adds a default image to be used in special cases such as WebGL Filters. Is mapped to the key __default."}, {"name": "addMissingImage", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 422, "public": false, "help": "Adds an image to be used when a key is wrong / missing. Is mapped to the key __missing."}], "static": [], "public": [{"name": "addBinary", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for this binary data."}, {"default": null, "optional": false, "type": ["object"], "name": "binaryData", "help": "The binary object to be addded to the cache."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 235, "public": true, "help": "Add a binary object in to the cache."}, {"name": "addBitmapData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for this BitmapData."}, {"default": null, "optional": false, "type": ["Phaser.BitmapData"], "name": "bitmapData", "help": "The BitmapData object to be addded to the cache."}, {"default": null, "optional": true, "type": ["Phaser.FrameData"], "name": "frameData", "help": "Optional FrameData set associated with the given BitmapData."}], "inheritedFrom": "", "private": false, "returns": {"help": "The BitmapData object to be addded to the cache.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 250, "public": true, "help": "Add a BitmapData object in to the cache."}, {"name": "addBitmapFont", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this font xml file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra font data."}, {"default": null, "optional": false, "type": ["object"], "name": "xmlData", "help": "Texture atlas frames data."}, {"default": "0", "optional": true, "type": ["number"], "name": "xSpacing", "help": "If you'd like to add additional horizontal spacing between the characters then set the pixel value here."}, {"default": "0", "optional": true, "type": ["number"], "name": "ySpacing", "help": "If you'd like to add additional vertical spacing between the lines then set the pixel value here."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 363, "public": true, "help": "Add a new Bitmap Font to the Cache."}, {"name": "addCanvas", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for this canvas."}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "Canvas DOM element."}, {"default": null, "optional": false, "type": ["CanvasRenderingContext2D"], "name": "context", "help": "Render context of this canvas."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 222, "public": true, "help": "Add a new canvas object in to the cache."}, {"name": "addImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this image file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra image data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 491, "public": true, "help": "Adds an Image file into the Cache. The file must have already been loaded, typically via Phaser.Loader."}, {"name": "addJSON", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the json data."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this json data file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra json data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 461, "public": true, "help": "Add a new json object into the cache."}, {"name": "addRenderTexture", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["Phaser.RenderTexture"], "name": "texture", "help": "The texture to use as the base of the RenderTexture."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 267, "public": true, "help": "Add a new Phaser.RenderTexture in to the cache."}, {"name": "addSound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this sound file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra sound data."}, {"default": null, "optional": false, "type": ["boolean"], "name": "webAudio", "help": "True if the file is using web audio."}, {"default": null, "optional": false, "type": ["boolean"], "name": "audioTag", "help": "True if the file is using legacy HTML audio."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 516, "public": true, "help": "Adds a Sound file into the Cache. The file must have already been loaded, typically via Phaser.Loader."}, {"name": "addSpriteSheet", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this sprite sheet file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra sprite sheet data."}, {"default": null, "optional": false, "type": ["number"], "name": "frameWidth", "help": "Width of the sprite sheet."}, {"default": null, "optional": false, "type": ["number"], "name": "frameHeight", "help": "Height of the sprite sheet."}, {"default": "-1", "optional": true, "type": ["number"], "name": "frameMax", "help": "How many frames stored in the sprite sheet. If -1 then it divides the whole sheet evenly."}, {"default": "0", "optional": true, "type": ["number"], "name": "margin", "help": "If the frames have been drawn with a margin, specify the amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "spacing", "help": "If the frames have been drawn with spacing between them, specify the amount here."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 288, "public": true, "help": "Add a new sprite sheet in to the cache."}, {"name": "addText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the text data."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this text data file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra text data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 445, "public": true, "help": "Add a new text data."}, {"name": "addTextureAtlas", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this texture atlas file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra texture atlas data."}, {"default": null, "optional": false, "type": ["object"], "name": "atlasData", "help": "  - Texture atlas frames data."}, {"default": null, "optional": false, "type": ["number"], "name": "format", "help": "The format of the texture atlas."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 328, "public": true, "help": "Add a new texture atlas to the Cache."}, {"name": "addTilemap", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the physics json data."}, {"default": null, "optional": false, "type": ["object"], "name": "JSONData", "help": "The physics data object (a JSON file)."}, {"default": null, "optional": false, "type": ["number"], "name": "format", "help": "The format of the physics data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 387, "public": true, "help": "Add a new physics data object to the Cache."}, {"name": "addXML", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the xml file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of this xml file."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra text data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 477, "public": true, "help": "Add a new xml object into the cache."}, {"name": "checkBinaryKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the binary file to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 842, "public": true, "help": "Checks if the given key exists in the Binary Cache."}, {"name": "checkBitmapDataKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the BitmapData to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 855, "public": true, "help": "Checks if the given key exists in the BitmapData Cache."}, {"name": "checkBitmapFontKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the BitmapFont to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 868, "public": true, "help": "Checks if the given key exists in the BitmapFont Cache."}, {"name": "checkCanvasKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the canvas to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 751, "public": true, "help": "Checks if the given key exists in the Canvas Cache."}, {"name": "checkImageKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the image to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 764, "public": true, "help": "Checks if the given key exists in the Image Cache. Note that this also includes Texture Atlases, Sprite Sheets and Retro Fonts."}, {"name": "checkJSONKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the JSON file to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 881, "public": true, "help": "Checks if the given key exists in the JSON Cache."}, {"name": "checkKey", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "type", "help": "The Cache type to check against. I.e. Phaser.Cache.CANVAS, Phaser.Cache.IMAGE, Phaser.Cache.JSON, etc."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the image to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 733, "public": true, "help": "Checks if a key for the given cache object type exists."}, {"name": "checkPhysicsKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the physics data file to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 816, "public": true, "help": "Checks if the given key exists in the Physics Cache."}, {"name": "checkSoundKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the sound file to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 790, "public": true, "help": "Checks if the given key exists in the Sound Cache."}, {"name": "checkTextKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the text file to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 803, "public": true, "help": "Checks if the given key exists in the Text Cache."}, {"name": "checkTextureKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the image to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 777, "public": true, "help": "Checks if the given key exists in the Texture Cache."}, {"name": "checkTilemapKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the Tilemap to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 829, "public": true, "help": "Checks if the given key exists in the Tilemap Cache."}, {"name": "checkUrl", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url to check for in the cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the url exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 907, "public": true, "help": "Checks if the given URL has been loaded into the Cache."}, {"name": "checkXMLKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the XML file to check is in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key exists, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 894, "public": true, "help": "Checks if the given key exists in the XML Cache."}, {"name": "decodedSound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}, {"default": null, "optional": false, "type": ["object"], "name": "data", "help": "Extra sound data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 594, "public": true, "help": "Add a new decoded sound."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1497, "public": true, "help": "Clears the cache. Removes every local cache object reference."}, {"name": "getBinary", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the binary data object to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The binary data object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1237, "public": true, "help": "Get binary data by key."}, {"name": "getBitmapData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the BitmapData object to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The requested BitmapData object if found, or null if not.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 629, "public": true, "help": "Get a BitmapData object from the cache by its key."}, {"name": "getBitmapFont", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the BitmapFont object to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The requested BitmapFont object if found, or null if not.", "types": ["Phaser.BitmapFont"]}, "protected": false, "static": false, "inherited": false, "line": 649, "public": true, "help": "Get a BitmapFont object from the cache by its key."}, {"name": "getCanvas", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the canvas to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The canvas object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 609, "public": true, "help": "Get a canvas object from the cache by its key."}, {"name": "getFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the frame data to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame data.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 1036, "public": true, "help": "Get a single frame by key. You'd only do this to get the default Frame created for a non-atlas/spritesheet image."}, {"name": "getFrameByIndex", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the frame data to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame object.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 1002, "public": true, "help": "Get a single frame out of a frameData set by key."}, {"name": "getFrameByName", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the frame data to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame object.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 1019, "public": true, "help": "Get a single frame out of a frameData set by key."}, {"name": "getFrameCount", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the image you want."}], "inheritedFrom": "", "private": false, "returns": {"help": "Then number of frames. 0 if the image is not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1159, "public": true, "help": "Get the number of frames in this image."}, {"name": "getFrameData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the frame data to retrieve from the Cache."}, {"default": "Phaser.Cache.IMAGE", "optional": true, "type": ["string"], "name": "map", "help": "The asset map to get the frameData from, for example `Phaser.Cache.IMAGE`."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame data.", "types": ["Phaser.FrameData"]}, "protected": false, "static": false, "inherited": false, "line": 967, "public": true, "help": "Get frame data by key."}, {"name": "getImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the image to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The image data if found in the Cache, otherwise `null`.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 925, "public": true, "help": "Get image data by key."}, {"name": "getJSON", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the json object to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The JSON object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1197, "public": true, "help": "Get a JSON object by key from the cache."}, {"name": "getKeys", "parameters": [{"default": "Phaser.Cache.IMAGE", "optional": true, "type": ["number"], "name": "type", "help": "The type of Cache keys you wish to get. Can be Cache.CANVAS, Cache.IMAGE, Cache.SOUND, etc."}], "inheritedFrom": "", "private": false, "returns": {"help": "The array of item keys.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1277, "public": true, "help": "Gets all keys used by the Cache for the given data type."}, {"name": "getPhysicsData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the physics data object to retrieve from the Cache."}, {"default": "null", "optional": true, "type": ["string"], "name": "object", "help": "If specified it will return just the physics object that is part of the given key, if null it will return them all."}, {"default": null, "optional": false, "type": ["string"], "name": "fixtureKey", "help": "Fixture key of fixture inside an object. This key can be set per fixture with the Phaser Exporter."}], "inheritedFrom": "", "private": false, "returns": {"help": "The requested physics object data if found.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 671, "public": true, "help": "Get a physics data object from the cache by its key. You can get either the entire data set, a single object or a single fixture of an object from it."}, {"name": "getSound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the sound to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The sound object.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 1090, "public": true, "help": "Get sound by key."}, {"name": "getSoundData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the sound to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The sound data.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1110, "public": true, "help": "Get sound data by key."}, {"name": "getText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the text data to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The text data.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1177, "public": true, "help": "Get text data by key."}, {"name": "getTexture", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the RenderTexture to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The RenderTexture object.", "types": ["Phaser.RenderTexture"]}, "protected": false, "static": false, "inherited": false, "line": 1070, "public": true, "help": "Get a RenderTexture by key."}, {"name": "getTextureFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the frame to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame data.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 1053, "public": true, "help": "Get a single texture frame by key. You'd only do this to get the default Frame created for a non-atlas/spritesheet image."}, {"name": "getTilemapData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the tilemap data to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The raw tilemap data in CSV or JSON format.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 946, "public": true, "help": "Get tilemap data by key."}, {"name": "getUrl", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url for the object loaded to get from the cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The cached object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1257, "public": true, "help": "Get a cached object by the URL."}, {"name": "getXML", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the XML object to retrieve from the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The XML object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1217, "public": true, "help": "Get a XML object by key from the cache."}, {"name": "isSoundDecoded", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the sound in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "The decoded state of the Sound object.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1130, "public": true, "help": "Check if the given sound has finished decoding."}, {"name": "isSoundReady", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key of the sound in the Cache."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the sound is decoded and the device is not touch locked.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1146, "public": true, "help": "Check if the given sound is ready for playback. A sound is considered ready when it has finished decoding and the device is no longer touch locked."}, {"name": "reloadSound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 540, "public": true, "help": "Reload a Sound file from the server."}, {"name": "reloadSoundComplete", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 562, "public": true, "help": "Fires the onSoundUnlock event when the sound has completed reloading."}, {"name": "removeBinary", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1447, "public": true, "help": "Removes a binary file from the cache."}, {"name": "removeBitmapData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1457, "public": true, "help": "Removes a bitmap data from the cache."}, {"name": "removeBitmapFont", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1467, "public": true, "help": "Removes a bitmap font from the cache."}, {"name": "removeCanvas", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1357, "public": true, "help": "Removes a canvas from the cache."}, {"name": "removeImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "removeFromPixi", "help": "Should this image also be removed from the Pixi BaseTextureCache?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1368, "public": true, "help": "Removes an image from the cache and optionally from the Pixi.BaseTextureCache as well."}, {"name": "removeJSON", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1407, "public": true, "help": "Removes a json object from the cache."}, {"name": "removePhysics", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1427, "public": true, "help": "Removes a physics data file from the cache."}, {"name": "removeSound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1387, "public": true, "help": "Removes a sound from the cache."}, {"name": "removeText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1397, "public": true, "help": "Removes a text from the cache."}, {"name": "removeTilemap", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1437, "public": true, "help": "Removes a tilemap from the cache."}, {"name": "removeXML", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1417, "public": true, "help": "Removes a xml object from the cache."}, {"name": "updateFrameData", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique key by which you will reference this object."}, {"default": null, "optional": false, "type": ["number"], "name": "frameData", "help": "The new FrameData."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 986, "public": true, "help": "Replaces a set of frameData with a new Phaser.FrameData object."}, {"name": "updateSound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 578, "public": true, "help": "Updates the sound object in the cache."}], "private": [{"name": "_resolveUrl", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The URL to resolve."}], "inheritedFrom": "", "private": true, "returns": {"help": "The resolved URL.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 1479, "public": false, "help": "Resolves a URL to its absolute form."}]}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": "The height of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": [{"name": "_height", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": false, "help": "The height of the sprite (this is initially set by the texture)"}, {"name": "_width", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": false, "help": "The width of the sprite (this is initially set by the texture)"}]}, "class": {"help": "The Sprite object is the base for all textured objects that are rendered to the screen\\n\\n\\nA sprite can be created directly from an image like this :\\nvar sprite = new PIXI.Sprite.fromImage('assets/image.png');\\nyourStage.addChild(sprite);\\nthen obviously don't forget to add it to the stage you have already created", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The texture for this sprite"}], "static": false, "constructor": true, "extends": "PIXI.DisplayObjectContainer", "name": "PIXI.Sprite"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 313, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 250, "public": false, "help": "Renders the object using the WebGL renderer"}, {"name": "onTextureUpdate", "parameters": [{"default": null, "optional": false, "type": [], "name": null, "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 155, "public": false, "help": "When the texture is updated, this event will fire to update the scale and frame"}]}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "Local reference to game.", "public": true, "help": ""}], "private": [{"name": "_add", "default": null, "type": ["array Phaser.Tween"], "private": true, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "All of the tweens queued to be added in the next update.", "public": false, "help": ""}, {"name": "_tweens", "default": null, "type": ["array Phaser.Tween"], "private": true, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "All of the currently running tweens.", "public": false, "help": ""}]}, "class": {"help": "Phaser.Game has a single instance of the TweenManager through which all Tween objects are created and updated.\\nTweens are hooked into the game clock and pause system, adjusting based on the game state.\\n\\nTweenManager is based heavily on tween.js by http://soledadpenades.com.\\nThe difference being that tweens belong to a games instance of TweenManager, rather than to a global TWEEN object.\\nIt also has callbacks swapped for Signals and a few issues patched with regard to properties and completion errors.\\nPlease see https://github.com/sole/tween.js for a full list of contributors.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.TweenManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tween"], "name": "tween", "help": "The tween object you want to add."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 79, "public": true, "help": "Add a new tween into the TweenManager."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "Object the tween will be run on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 93, "public": true, "help": "Create a tween object for a specific object. The object can be any JavaScript object or Phaser object such as Sprite."}, {"name": "getAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 51, "public": true, "help": "Get all the tween objects in an array."}, {"name": "isTweening", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "The object to check for tweens against."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 175, "public": true, "help": "Checks to see if a particular Sprite is currently being tweened."}, {"name": "pauseAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 218, "public": true, "help": "Pauses all currently running tweens."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tween"], "name": "tween", "help": "The tween object you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 105, "public": true, "help": "Remove a tween from this manager."}, {"name": "removeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 61, "public": true, "help": "Remove all tweens running and in the queue. Doesn't call any of the tween onComplete events."}, {"name": "resumeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 232, "public": true, "help": "Resumes all currently paused tweens."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 131, "public": true, "help": "Update all the tween objects you added to this manager."}], "private": [{"name": "_pauseAll", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 189, "public": false, "help": "Private. Called by game focus loss. Pauses all currently running tweens."}, {"name": "_resumeAll", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 204, "public": false, "help": "Private. Called by game focus loss. Resumes all currently paused tweens."}]}}, {"properties": {"protected": [], "public": [{"name": "height", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": ""}, {"name": "width", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": ""}, {"name": "x", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "", "public": true, "help": ""}, {"name": "y", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The Ellipse object can be used to specify a hit area for displayObjects", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the center of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the center of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The half width of this ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The half height of this ellipse"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.Ellipse"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "a copy of the ellipse", "types": ["Phaser.Ellipse"]}, "protected": false, "static": false, "inherited": false, "line": 52, "public": true, "help": "Creates a clone of this Ellipse instance"}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the point to test"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the point to test"}], "inheritedFrom": "", "private": false, "returns": {"help": "Whether the x/y coords are within this ellipse", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 65, "public": true, "help": "Checks whether the x and y coordinates given are contained within this ellipse"}, {"name": "getBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 86, "public": true, "help": "Returns the framing rectangle of the ellipse as a PIXI.Rectangle object"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "active", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 489, "inlineHelp": "If the gamepad input is active or not.", "public": true, "help": "If the gamepad input is active or not - if not active it should not be updated from Input.js"}, {"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "The context under which the callbacks are run.", "public": true, "help": ""}, {"name": "disabled", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "The disabled state of the Gamepad.", "public": true, "help": "You can disable all Gamepad Input by setting disabled to true. While true all new input related events will be ignored."}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "onAxisCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "This callback is invoked every time any gamepad axis is changed.", "public": true, "help": ""}, {"name": "onConnectCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "This callback is invoked every time any gamepad is connected", "public": true, "help": ""}, {"name": "onDisconnectCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "This callback is invoked every time any gamepad is disconnected", "public": true, "help": ""}, {"name": "onDownCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "This callback is invoked every time any gamepad button is pressed down.", "public": true, "help": ""}, {"name": "onFloatCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "This callback is invoked every time any gamepad button is changed to a value where value > 0 and value < 1.", "public": true, "help": ""}, {"name": "onUpCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "This callback is invoked every time any gamepad button is released.", "public": true, "help": ""}, {"name": "pad1", "default": null, "type": ["Phaser.SinglePad"], "private": false, "readOnly": true, "protected": false, "line": 531, "inlineHelp": "Gamepad #1;", "public": true, "help": "Gamepad #1"}, {"name": "pad2", "default": null, "type": ["Phaser.SinglePad"], "private": false, "readOnly": true, "protected": false, "line": 545, "inlineHelp": "Gamepad #2", "public": true, "help": "Gamepad #2"}, {"name": "pad3", "default": null, "type": ["Phaser.SinglePad"], "private": false, "readOnly": true, "protected": false, "line": 559, "inlineHelp": "Gamepad #3", "public": true, "help": "Gamepad #3"}, {"name": "pad4", "default": null, "type": ["Phaser.SinglePad"], "private": false, "readOnly": true, "protected": false, "line": 573, "inlineHelp": "Gamepad #4", "public": true, "help": "Gamepad #4"}, {"name": "padsConnected", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 517, "inlineHelp": "How many live gamepads are currently connected.", "public": true, "help": "How many live gamepads are currently connected."}, {"name": "supported", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 503, "inlineHelp": "Whether or not gamepads are supported in current browser.", "public": true, "help": "Whether or not gamepads are supported in current browser."}], "private": [{"name": "_active", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Private flag for whether or not the API is polled", "public": false, "help": ""}, {"name": "_gamepadIndexMap", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "Maps the browsers gamepad indices to our Phaser Gamepads", "public": false, "help": ""}, {"name": "_gamepadSupportAvailable", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "Are gamepads supported in this browser or not?", "public": false, "help": "Whether or not gamepads are supported in the current browser. Note that as of Dec. 2013 this check is actually not accurate at all due to poor implementation."}, {"name": "_gamepaddisconnected", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "Private callback for Firefox gamepad connection handling", "public": false, "help": ""}, {"name": "_gamepads", "default": null, "type": ["array Phaser.SinglePad"], "private": true, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "The four Phaser Gamepads.", "public": false, "help": ""}, {"name": "_ongamepadconnected", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "Private callback for Firefox gamepad connection handling", "public": false, "help": ""}, {"name": "_prevRawGamepadTypes", "default": "[]", "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": false, "help": "Used to check for differences between earlier polls and current state of gamepads."}, {"name": "_prevTimestamps", "default": "[]", "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "", "public": false, "help": "Used to check for differences between earlier polls and current state of gamepads."}, {"name": "_rawPads", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "The raw state of the gamepads from the browser", "public": false, "help": ""}]}, "class": {"help": "The Gamepad class handles looking after gamepad input for your game.\\nRemember to call gamepad.start(); expecting input!\\n\\nHTML5 GAMEPAD API SUPPORT IS AT AN EXPERIMENTAL STAGE!\\nAt moment of writing this (end of 2013) only Chrome supports parts of it out of the box. Firefox supports it\\nvia prefs flags (about:config, search gamepad). The browsers map the same controllers differently.\\nThis class has constants for Windows 7 Chrome mapping of XBOX 360 controller.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Gamepad"}, "consts": [], "methods": {"protected": [{"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 233, "public": false, "help": "Main gamepad update loop. Should not be called manually."}], "static": [], "public": [{"name": "addCallbacks", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context under which the callbacks are run."}, {"default": null, "optional": false, "type": ["object"], "name": "callbacks", "help": "Object that takes six different callback methods:"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 145, "public": true, "help": "Add callbacks to the main Gamepad handler to handle connect/disconnect/button down/button up/axis change/float value buttons\\nonConnectCallback, onDisconnectCallback, onDownCallback, onUpCallback, onAxisCallback, onFloatCallback"}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 468, "public": true, "help": "Destroys this object and the associated event listeners."}, {"name": "isDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check for."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if a button is currently down.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 450, "public": true, "help": "Returns true if the button is currently pressed down, on ANY gamepad."}, {"name": "justPressed", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check for."}, {"default": "250", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the button is considered as being just released."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the button is just released otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 430, "public": true, "help": "Returns the \"just released\" state of a button from ANY gamepad connected. Just released is considered as being true if the button was released within the duration given (default 250ms)."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 391, "public": true, "help": "Reset all buttons/axes of all gamepads"}, {"name": "setDeadZones", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 364, "public": true, "help": "Sets the deadZone variable for all four gamepads"}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 165, "public": true, "help": "Starts the Gamepad event handling.\\nThis MUST be called manually before Phaser will start polling the Gamepad API."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 378, "public": true, "help": "Stops the Gamepad event handling."}], "private": [{"name": "_pollGamepads", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 250, "public": false, "help": "Updating connected gamepads (for Google Chrome). Should not be called manually."}, {"name": "onGamepadConnected", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The DOM event."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 197, "public": false, "help": "Handles the connection of a Gamepad."}, {"name": "onGamepadDisconnected", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The DOM event."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 212, "public": false, "help": "Handles the disconnection of a Gamepad."}]}}, {"properties": {"protected": [], "public": [{"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "The context under which callbacks are called (defaults to game).", "public": true, "help": ""}, {"name": "disabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "", "public": true, "help": "You can disable all Input by setting disabled = true. While set all new input related events will be ignored."}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}], "private": [{"name": "_onMSPointerDown", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "Internal function to handle MSPointer events.", "public": false, "help": ""}, {"name": "_onMSPointerMove", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Internal function to handle MSPointer events.", "public": false, "help": ""}, {"name": "_onMSPointerUp", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Internal function to handle MSPointer events.", "public": false, "help": ""}]}, "class": {"help": "The MSPointer class handles touch interactions with the game and the resulting Pointer objects.\\nIt will work only in Internet Explorer 10 and Windows Store or Windows Phone 8 apps using JavaScript.\\nhttp://msdn.microsoft.com/en-us/library/ie/hh673557(v=vs.85).aspx", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.MSPointer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "onPointerDown", "parameters": [{"default": null, "optional": false, "type": ["PointerEvent"], "name": "event", "help": "The native DOM event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 105, "public": true, "help": "The function that handles the PointerDown event."}, {"name": "onPointerMove", "parameters": [{"default": null, "optional": false, "type": ["PointerEvent"], "name": "event", "help": "The native DOM event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 124, "public": true, "help": "The function that handles the PointerMove event."}, {"name": "onPointerUp", "parameters": [{"default": null, "optional": false, "type": ["PointerEvent"], "name": "event", "help": "The native DOM event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 143, "public": true, "help": "The function that handles the PointerUp event."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 60, "public": true, "help": "Starts the event listeners running."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 161, "public": true, "help": "Stop the event listeners."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "sepia", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": true, "help": "The strength of the sepia. 1 will apply the full sepia effect, 0 will make the object its normal color."}], "private": []}, "class": {"help": "This applies a sepia effect to your Display Objects.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.SepiaFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "isRunning", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 181, "inlineHelp": "If the tween is running this is set to true, otherwise false. Tweens that are in a delayed state, waiting to start, are considered as being running.", "public": true, "help": ""}, {"name": "onComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 175, "inlineHelp": "The onComplete event is fired when the Tween completes. Does not fire if the Tween is set to loop.", "public": true, "help": ""}, {"name": "onLoop", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 170, "inlineHelp": "The onLoop event is fired if the Tween loops.", "public": true, "help": ""}, {"name": "onStart", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 165, "inlineHelp": "The onStart event is fired when the Tween begins.", "public": true, "help": ""}, {"name": "pendingDelete", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 160, "inlineHelp": "If this tween is ready to be deleted by the TweenManager.", "public": true, "help": ""}], "private": [{"name": "_chainedTweens", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "A private array of chained tweens.", "public": false, "help": ""}, {"name": "_codePaused", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 154, "inlineHelp": "Was the Tween paused by code or by Game focus loss?", "public": false, "help": ""}, {"name": "_delayTime", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "Private delay counter.", "public": false, "help": ""}, {"name": "_duration", "default": "1000", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "Private duration counter.", "public": false, "help": ""}, {"name": "_easingFunction", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "The easing function used for the tween.", "public": false, "help": ""}, {"name": "_interpolationFunction", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "The interpolation function used for the tween.", "public": false, "help": ""}, {"name": "_manager", "default": null, "type": ["Phaser.TweenManager"], "private": true, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "Reference to the TweenManager.", "public": false, "help": ""}, {"name": "_object", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "", "public": false, "help": "Reference to the target object."}, {"name": "_onStartCallbackFired", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "Private flag.", "public": false, "help": ""}, {"name": "_onUpdateCallback", "default": "null", "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "An onUpdate callback.", "public": false, "help": ""}, {"name": "_onUpdateCallbackContext", "default": "null", "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 134, "inlineHelp": "The context in which to call the onUpdate callback.", "public": false, "help": ""}, {"name": "_paused", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 141, "inlineHelp": "Is this Tween paused or not?", "public": false, "help": ""}, {"name": "_pausedTime", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 148, "inlineHelp": "Private pause timer.", "public": false, "help": ""}, {"name": "_repeat", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "Private repeat counter.", "public": false, "help": ""}, {"name": "_reversed", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "Private reversed flag.", "public": false, "help": ""}, {"name": "_startTime", "default": "null", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "Private start time counter.", "public": false, "help": ""}, {"name": "_valuesEnd", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "Private value object.", "public": false, "help": ""}, {"name": "_valuesStart", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Private value object.", "public": false, "help": ""}, {"name": "_valuesStartRepeat", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "Private value object.", "public": false, "help": ""}, {"name": "_yoyo", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Private yoyo flag.", "public": false, "help": ""}]}, "class": {"help": "Tween constructor\\nCreate a new <code>Tween</code>.", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "Target object will be affected by this tween."}, {"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": null, "optional": false, "type": ["Phaser.TweenManager"], "name": "manager", "help": "The TweenManager responsible for looking after this Tween."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Tween"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "chain", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 557, "public": true, "help": "You can chain tweens together by passing a reference to the chain function. This enables one tween to call another on completion.\\nYou can pass as many tweens as you like to this function, they will each be chained in sequence."}, {"name": "delay", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount of the delay in ms."}], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 478, "public": true, "help": "Sets a delay time before this tween will start."}, {"name": "easing", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "easing", "help": "The easing function this tween will use, i.e. Phaser.Easing.Linear.None."}], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 528, "public": true, "help": "Set easing function this tween will use, i.e. Phaser.Easing.Linear.None."}, {"name": "from", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "properties", "help": "Properties you want to tween from."}, {"default": "1000", "optional": true, "type": ["number"], "name": "duration", "help": "Duration of this tween in ms."}, {"default": "null", "optional": true, "type": ["function"], "name": "ease", "help": "Easing function. If not set it will default to Phaser.Easing.Linear.None."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "autoStart", "help": "Whether this tween will start automatically or not."}, {"default": "0", "optional": true, "type": ["number"], "name": "delay", "help": "Delay before this tween will start, defaults to 0 (no delay). Value given is in ms."}, {"default": "0", "optional": true, "type": ["number"], "name": "repeat", "help": "Should the tween automatically restart once complete? If you want it to run forever set as Number.MAX_VALUE. This ignores any chained tweens."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "yoyo", "help": "A tween that yoyos will reverse itself and play backwards automatically. A yoyo'd tween doesn't fire the Tween.onComplete event, so listen for Tween.onLoop instead."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Tween object.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 271, "public": true, "help": "Sets this tween to be a `from` tween on the properties given. A `from` tween starts at the given value and tweens to the current values.\\nFor example a Sprite with an `x` coordinate of 100 could be tweened from `x: 200` by giving a properties object of `{ x: 200 }`."}, {"name": "generateData", "parameters": [{"default": "60", "optional": true, "type": ["number"], "name": "frameRate", "help": "The speed in frames per second that the data should be generated at. The higher the value, the larger the array it creates."}, {"default": null, "optional": true, "type": ["array"], "name": "data", "help": "If given the generated data will be appended to this array, otherwise a new array will be returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of tweened values.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 345, "public": true, "help": "This will generate an array populated with the tweened object values from start to end.\\nIt works by running the tween simulation at the given frame rate based on the values set-up in Tween.to and similar functions.\\nIt ignores delay and repeat counts and any chained tweens. Just one play through of tween data is returned, including yoyo if set."}, {"name": "interpolation", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "interpolation", "help": "The interpolation function to use (Phaser.Math.linearInterpolation by default)"}], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 543, "public": true, "help": "Set interpolation function the tween will use, by default it uses Phaser.Math.linearInterpolation.\\nAlso available: Phaser.Math.bezierInterpolation and Phaser.Math.catmullRomInterpolation."}, {"name": "loop", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 576, "public": true, "help": "Loop a chain of tweens\\n\\nUsage:\\ngame.add.tween(p).to({ x: 700 }, 1000, Phaser.Easing.Linear.None, true)\\n.to({ y: 300 }, 1000, Phaser.Easing.Linear.None)\\n.to({ x: 0 }, 1000, Phaser.Easing.Linear.None)\\n.to({ y: 0 }, 1000, Phaser.Easing.Linear.None)\\n.loop();"}, {"name": "onUpdateCallback", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback to invoke each time this tween is updated."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to call the onUpdate callback."}], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 591, "public": true, "help": "Sets a callback to be fired each time this tween updates."}, {"name": "pause", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 605, "public": true, "help": "Pauses the tween."}, {"name": "repeat", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "times", "help": "How many times to repeat."}], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 492, "public": true, "help": "Sets the number of times this tween will repeat."}, {"name": "resume", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 633, "public": true, "help": "Resumes a paused tween."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 291, "public": true, "help": "Starts the tween running. Can also be called by the autoStart parameter of Tween.to."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 459, "public": true, "help": "Stops the tween if running and removes it from the TweenManager. If there are any onComplete callbacks or events they are not dispatched."}, {"name": "to", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "properties", "help": "The properties you want to tween, such as `Sprite.x` or `Sound.volume`. Given as a JavaScript object."}, {"default": "1000", "optional": true, "type": ["number"], "name": "duration", "help": "Duration of this tween in ms."}, {"default": "null", "optional": true, "type": ["function"], "name": "ease", "help": "Easing function. If not set it will default to Phaser.Easing.Default, which is Phaser.Easing.Linear.None by default but can be over-ridden at will."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "autoStart", "help": "Whether this tween will start automatically or not."}, {"default": "0", "optional": true, "type": ["number"], "name": "delay", "help": "Delay before this tween will start, defaults to 0 (no delay). Value given is in ms."}, {"default": "0", "optional": true, "type": ["number"], "name": "repeat", "help": "Should the tween automatically restart once complete? If you want it to run forever set as Number.MAX_VALUE. This ignores any chained tweens."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "yoyo", "help": "A tween that yoyos will reverse itself and play backwards automatically. A yoyo'd tween doesn't fire the Tween.onComplete event, so listen for Tween.onLoop instead."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Tween object.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 201, "public": true, "help": "Sets this tween to be a `to` tween on the properties given. A `to` tween starts at the current value and tweens to the destination value given.\\nFor example a Sprite with an `x` coordinate of 100 could be tweened to `x` 200 by giving a properties object of `{ x: 200 }`."}, {"name": "update", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "time", "help": "A timestamp passed in by the TweenManager."}], "inheritedFrom": "", "private": false, "returns": {"help": "false if the tween has completed and should be deleted from the manager, otherwise true (still active).", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 671, "public": true, "help": "Core tween update function called by the TweenManager. Does not need to be invoked directly."}, {"name": "yoyo", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "yoyo", "help": "Set to true to yoyo this tween."}], "inheritedFrom": "", "private": false, "returns": {"help": "Itself.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 508, "public": true, "help": "A tween that has yoyo set to true will run through from start to finish, then reverse from finish to start.\\nUsed in combination with repeat you can create endless loops."}], "private": [{"name": "_pause", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 618, "public": false, "help": "This is called by the core Game loop. Do not call it directly, instead use Tween.pause."}, {"name": "_resume", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 650, "public": false, "help": "This is called by the core Game loop. Do not call it directly, instead use Tween.pause."}]}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The strength of the blur."}, {"name": "end", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The Y value to end the effect at."}, {"name": "gradientBlur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "The strength of the gradient blur."}, {"name": "start", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The Y value to start the effect at."}], "private": []}, "class": {"help": "A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.TiltShiftFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "bounds", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "Object that contains the quadtree bounds.", "public": true, "help": ""}, {"name": "level", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "The current level.", "public": true, "help": ""}, {"name": "maxLevels", "default": "4", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "The maximum number of levels to break down to.", "public": true, "help": ""}, {"name": "maxObjects", "default": "10", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "The maximum number of objects per node.", "public": true, "help": ""}, {"name": "nodes", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "Array of associated child nodes.", "public": true, "help": ""}, {"name": "objects", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Array of quadtree children.", "public": true, "help": ""}], "private": [{"name": "_empty", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "Internal empty array.", "public": false, "help": ""}]}, "class": {"help": "A QuadTree implementation. The original code was a conversion of the Java code posted to GameDevTuts.\\nHowever I've tweaked it massively to add node indexing, removed lots of temp. var creation and significantly increased performance as a result.\\nOriginal version at https://github.com/timohausmann/quadtree-js/", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The top left coordinate of the quadtree."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The top left coordinate of the quadtree."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the quadtree in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the quadtree in pixels."}, {"default": "10", "optional": true, "type": ["number"], "name": "maxObjects", "help": "The maximum number of objects per node."}, {"default": "4", "optional": true, "type": ["number"], "name": "maxLevels", "help": "The maximum number of levels to iterate to."}, {"default": "0", "optional": true, "type": ["number"], "name": "level", "help": "Which level is this?"}], "static": false, "constructor": true, "extends": "", "name": "Phaser.QuadTree"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clear", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 299, "public": true, "help": "Clear the quadtree."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle", "object"], "name": "rect", "help": "The bounds in which to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "index - Index of the subnode (0-3), or -1 if rect cannot completely fit within a subnode and is part of the parent node.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 210, "public": true, "help": "Determine which node the object belongs to."}, {"name": "insert", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Arcade.Body", "object"], "name": "body", "help": "The Body object to insert into the quadtree. Can be any object so long as it exposes x, y, right and bottom properties."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 157, "public": true, "help": "Insert the object into the node. If the node exceeds the capacity, it will split and add all objects to their corresponding subnodes."}, {"name": "populate", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Group"], "name": "group", "help": "The Group to add to the quadtree."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 109, "public": true, "help": "Populates this quadtree with the children of the given Group. In order to be added the child must exist and have a body property."}, {"name": "populateHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "object"], "name": "sprite", "help": "The Sprite to check."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 121, "public": true, "help": "Handler for the populate method."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The top left coordinate of the quadtree."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The top left coordinate of the quadtree."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the quadtree in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the quadtree in pixels."}, {"default": "10", "optional": true, "type": ["number"], "name": "maxObjects", "help": "The maximum number of objects per node."}, {"default": "4", "optional": true, "type": ["number"], "name": "maxLevels", "help": "The maximum number of levels to iterate to."}, {"default": "0", "optional": true, "type": ["number"], "name": "level", "help": "Which level is this?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 81, "public": true, "help": "Resets the QuadTree."}, {"name": "retrieve", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Rectangle"], "name": "source", "help": "The source object to check the QuadTree against. Either a Sprite or Rectangle."}], "inheritedFrom": "", "private": false, "returns": {"help": "- Array with all detected objects.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 254, "public": true, "help": "Return all objects that could collide with the given Sprite or Rectangle."}, {"name": "split", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 135, "public": true, "help": "Split the node into 4 subnodes"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "activePointer", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 212, "inlineHelp": "", "public": true, "help": "The most recently active Pointer object.\\nWhen you've limited max pointers to 1 this will accurately be either the first finger touched or mouse."}, {"name": "circle", "default": null, "type": ["Phaser.Circle"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "A Circle object centered on the x/y screen coordinates of the Input.\\nDefault size of 44px (Apples recommended \"finger tip\" size) but can be changed to anything."}, {"name": "currentPointers", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "The current number of active Pointers.", "public": true, "help": ""}, {"name": "disabled", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "", "public": true, "help": "You can disable all Input by setting Input.disabled = true. While set all new input related events will be ignored.\\nIf you need to disable just one type of input; for example mouse; use Input.mouse.disabled = true instead"}, {"name": "doubleTapRate", "default": "300", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 114, "inlineHelp": "The number of milliseconds between taps of the same Pointer for it to be considered a double tap / click.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "gamepad", "default": null, "type": ["Phaser.Gamepad"], "private": false, "readOnly": false, "protected": false, "line": 242, "inlineHelp": "The Gamepad Input manager.", "public": true, "help": ""}, {"name": "hitCanvas", "default": "null", "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "The canvas to which single pixels are drawn in order to perform pixel-perfect hit detection.", "public": true, "help": ""}, {"name": "hitContext", "default": "null", "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "The context of the pixel perfect hit canvas.", "public": true, "help": ""}, {"name": "holdRate", "default": "2000", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "The number of milliseconds that the Pointer has to be pressed down for it to fire a onHold event.", "public": true, "help": ""}, {"name": "interactiveItems", "default": null, "type": ["Phaser.ArrayList"], "private": false, "readOnly": false, "protected": false, "line": 280, "inlineHelp": "", "public": true, "help": "A list of interactive objects. The InputHandler components add and remove themselves from this list."}, {"name": "justPressedRate", "default": "200", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "The number of milliseconds below which the Pointer is considered justPressed.", "public": true, "help": ""}, {"name": "justReleasedRate", "default": "200", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "The number of milliseconds below which the Pointer is considered justReleased .", "public": true, "help": ""}, {"name": "keyboard", "default": null, "type": ["Phaser.Keyboard"], "private": false, "readOnly": false, "protected": false, "line": 227, "inlineHelp": "The Keyboard Input manager.", "public": true, "help": ""}, {"name": "maxPointers", "default": "10", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The maximum number of Pointers allowed to be active at any one time. For lots of games it's useful to set this to 1.", "public": true, "help": ""}, {"name": "minPriorityID", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 274, "inlineHelp": "You can tell all Pointers to ignore any object with a priorityID lower than the minPriorityID. Useful when stacking UI layers. Set to zero to disable.", "public": true, "help": ""}, {"name": "mouse", "default": null, "type": ["Phaser.Mouse"], "private": false, "readOnly": false, "protected": false, "line": 222, "inlineHelp": "The Mouse Input manager.", "public": true, "help": ""}, {"name": "mousePointer", "default": null, "type": ["Pointer"], "private": false, "readOnly": false, "protected": false, "line": 217, "inlineHelp": "The mouse has its own unique Phaser.Pointer object which you can use if making a desktop specific game.", "public": true, "help": ""}, {"name": "moveCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "An optional callback that will be fired every time the activePointer receives a move event from the DOM. Set to null to disable.", "public": true, "help": ""}, {"name": "moveCallbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "The context in which the moveCallback will be sent. Defaults to Phaser.Input but can be set to any valid JS object.", "public": true, "help": ""}, {"name": "moveCallbacks", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "An array of callbacks that will be fired every time the activePointer receives a move event from the DOM.", "public": true, "help": ""}, {"name": "mspointer", "default": null, "type": ["Phaser.MSPointer"], "private": false, "readOnly": false, "protected": false, "line": 237, "inlineHelp": "The MSPointer Input manager.", "public": true, "help": ""}, {"name": "multiInputOverride", "default": "Phaser.Input.MOUSE_TOUCH_COMBINE", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "Controls the expected behaviour when using a mouse and touch together on a multi-input device.", "public": true, "help": ""}, {"name": "onDown", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 253, "inlineHelp": "A Signal that is dispatched each time a pointer is pressed down.", "public": true, "help": ""}, {"name": "onHold", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 268, "inlineHelp": "A Signal that is dispatched each time a pointer is held down.", "public": true, "help": ""}, {"name": "onTap", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 263, "inlineHelp": "A Signal that is dispatched each time a pointer is tapped.", "public": true, "help": ""}, {"name": "onUp", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 258, "inlineHelp": "A Signal that is dispatched each time a pointer is released.", "public": true, "help": ""}, {"name": "pointer1", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 160, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer10", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 205, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer2", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 165, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer3", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 170, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer4", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 175, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer5", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 180, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer6", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 185, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer7", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 190, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer8", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 195, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pointer9", "default": null, "type": ["Phaser.Pointer"], "private": false, "readOnly": false, "protected": false, "line": 200, "inlineHelp": "A Pointer object.", "public": true, "help": ""}, {"name": "pollLocked", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 915, "inlineHelp": "True if the Input is currently poll rate locked.", "public": true, "help": ""}, {"name": "pollRate", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "How often should the input pointers be checked for updates? A value of 0 means every single frame (60fps); a value of 1 means every other frame (30fps) and so on.", "public": true, "help": ""}, {"name": "position", "default": "null", "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "A point object representing the current position of the Pointer.", "public": true, "help": ""}, {"name": "recordLimit", "default": "100", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 155, "inlineHelp": "", "public": true, "help": "The total number of entries that can be recorded into the Pointer objects tracking history.\\nIf the Pointer is tracking one event every 100ms; then a trackLimit of 100 would store the last 10 seconds worth of history."}, {"name": "recordPointerHistory", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 141, "inlineHelp": "", "public": true, "help": "Sets if the Pointer objects should record a history of x/y coordinates they have passed through.\\nThe history is cleared each time the Pointer is pressed down.\\nThe history is updated at the rate specified in Input.pollRate"}, {"name": "recordRate", "default": "100", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 147, "inlineHelp": "The rate in milliseconds at which the Pointer objects should update their tracking history.", "public": true, "help": ""}, {"name": "resetLocked", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 248, "inlineHelp": "If the Input Manager has been reset locked then all calls made to InputManager.reset, such as from a State change, are ignored.", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "The scale by which all input coordinates are multiplied; calculated by the ScaleManager. In an un-scaled game the values will be x = 1 and y = 1.", "public": true, "help": ""}, {"name": "speed", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "A point object representing the speed of the Pointer. Only really useful in single Pointer games; otherwise see the Pointer objects directly.", "public": true, "help": ""}, {"name": "tapRate", "default": "200", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "The number of milliseconds that the Pointer has to be pressed down and then released to be considered a tap or click.", "public": true, "help": ""}, {"name": "totalActivePointers", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 943, "inlineHelp": "The total number of active Pointers.", "public": true, "help": "The total number of active Pointers"}, {"name": "totalInactivePointers", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 929, "inlineHelp": "The total number of inactive Pointers.", "public": true, "help": "The total number of inactive Pointers"}, {"name": "touch", "default": null, "type": ["Phaser.Touch"], "private": false, "readOnly": false, "protected": false, "line": 232, "inlineHelp": "the Touch Input manager.", "public": true, "help": ""}, {"name": "worldX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 968, "inlineHelp": "The world X coordinate of the most recently active pointer.", "public": true, "help": "The world X coordinate of the most recently active pointer."}, {"name": "worldY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 981, "inlineHelp": "The world Y coordinate of the most recently active pointer.", "public": true, "help": "The world Y coordinate of the most recently active pointer."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 881, "inlineHelp": "The X coordinate of the most recently active pointer.", "public": true, "help": "The X coordinate of the most recently active pointer. This value takes game scaling into account automatically. See Pointer.screenX/clientX for source values."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 898, "inlineHelp": "The Y coordinate of the most recently active pointer.", "public": true, "help": "The Y coordinate of the most recently active pointer. This value takes game scaling into account automatically. See Pointer.screenY/clientY for source values."}], "private": [{"name": "_localPoint", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 286, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_oldPosition", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 298, "inlineHelp": "A point object representing the previous position of the Pointer.", "public": false, "help": ""}, {"name": "_pollCounter", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 292, "inlineHelp": "Internal var holding the current poll counter.", "public": false, "help": ""}, {"name": "_x", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 304, "inlineHelp": "x coordinate of the most recent Pointer event", "public": false, "help": ""}, {"name": "_y", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 310, "inlineHelp": "Y coordinate of the most recent Pointer event", "public": false, "help": ""}]}, "class": {"help": "Phaser.Input is the Input Manager for all types of Input across Phaser, including mouse, keyboard, touch and MSPointer.\\nThe Input manager is updated automatically by the core game loop.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Input"}, "consts": [{"line": 318, "type": "number", "name": "MOUSE_OVERRIDES_TOUCH", "help": ""}, {"line": 330, "type": "number", "name": "MOUSE_TOUCH_COMBINE", "help": ""}, {"line": 324, "type": "number", "name": "TOUCH_OVERRIDES_MOUSE", "help": ""}], "methods": {"protected": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 339, "public": false, "help": "Starts the Input Manager running."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 464, "public": false, "help": "Updates the Input Manager. Called by the core Game loop."}], "static": [], "public": [{"name": "addMoveCallback", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called each time the activePointer receives a DOM move event."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context in which the callback will be called."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the callback entry. Use this index when calling Input.deleteMoveCallback.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 406, "public": true, "help": "Adds a callback that is fired every time the activePointer receives a DOM move event such as a mousemove or touchmove.\\nIt will be called every time the activePointer moves, which in a multi-touch game can be a lot of times, so this is best\\nto only use if you've limited input to a single pointer (i.e. mouse or touch).\\nThe callback is added to the Phaser.Input.moveCallbacks array and should be removed with Phaser.Input.deleteMoveCallback."}, {"name": "addPointer", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A reference to the new Pointer object that was created.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 433, "public": true, "help": "Add a new Pointer object to the Input Manager. By default Input creates 3 pointer objects: mousePointer, pointer1 and pointer2.\\nIf you need more then use this to create a new one, up to a maximum of 10."}, {"name": "deleteMoveCallback", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the callback to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 418, "public": true, "help": "Removes the callback at the defined index from the Phaser.Input.moveCallbacks array"}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 383, "public": true, "help": "Stops all of the Input Managers from running."}, {"name": "getLocalPosition", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image"], "name": "displayObject", "help": "The DisplayObject to get the local coordinates for."}, {"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer to use in the check against the displayObject."}], "inheritedFrom": "", "private": false, "returns": {"help": "A point containing the coordinates of the Pointer position relative to the DisplayObject.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 771, "public": true, "help": "This will return the local coordinates of the specified displayObject based on the given Pointer."}, {"name": "getPointer", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "The state the Pointer should be in (false for inactive, true for active)."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Pointer object or null if no Pointer object matches the requested state.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 668, "public": true, "help": "Get the next Pointer object whos active property matches the given state"}, {"name": "getPointerFromId", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "pointerId", "help": "The Pointer.pointerId value to search for."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Pointer object or null if no Pointer object matches the requested identifier.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 739, "public": true, "help": "Get the Pointer object whos `pointerId` property matches the given value.\\nThe pointerId property is not set until the Pointer has been used at least once, as its populated by the DOM event.\\nAlso it can change every time you press the pointer down if the browser recycles it."}, {"name": "getPointerFromIdentifier", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "identifier", "help": "The Pointer.identifier value to search for."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Pointer object or null if no Pointer object matches the requested identifier.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 705, "public": true, "help": "Get the Pointer object whos `identifier` property matches the given identifier value.\\nThe identifier property is not set until the Pointer has been used at least once, as its populated by the DOM event.\\nAlso it can change every time you press the pointer down, and is not fixed once set.\\nNote: Not all browsers set the identifier property and it's not part of the W3C spec, so you may need getPointerFromId instead."}, {"name": "hitTest", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "The displayObject to test for a hit."}, {"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The pointer to use for the test."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "localPoint", "help": "The local translated point."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 793, "public": true, "help": "Tests if the pointer hits the given object."}, {"name": "reset", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "hard", "help": "A soft reset won't reset any events or callbacks that are bound. A hard reset will."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 506, "public": true, "help": "Reset all of the Pointers and Input states. The optional `hard` parameter will reset any events or callbacks that may be bound.\\nInput.reset is called automatically during a State change or if a game loses focus / visibility. If you wish to control the reset\\ndirectly yourself then set InputManager.resetLocked to `true`."}, {"name": "resetSpeed", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Sets the oldPosition.x value."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Sets the oldPosition.y value."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 557, "public": true, "help": "Resets the speed and old position properties."}, {"name": "startPointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "event", "help": "The event data from the Touch event."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Pointer object that was started or null if no Pointer object is available.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 570, "public": true, "help": "Find the first free Pointer object and start it, passing in the event data. This is called automatically by Phaser.Touch and Phaser.MSPointer."}, {"name": "stopPointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "event", "help": "The event data from the Touch event."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Pointer object that was stopped or null if no Pointer object is available.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 637, "public": true, "help": "Stops the matching Pointer object, passing in the event data."}, {"name": "updatePointer", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "event", "help": "The event data from the Touch event."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Pointer object that was updated or null if no Pointer object is available.", "types": ["Phaser.Pointer"]}, "protected": false, "static": false, "inherited": false, "line": 606, "public": true, "help": "Updates the matching Pointer object, passing in the event data. This is called automatically and should not normally need to be invoked."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 532, "inlineHelp": "The angle of this Sprite in degrees.", "public": true, "help": "Indicates the rotation of the Sprite, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle."}, {"name": "animations", "default": null, "type": ["Phaser.AnimationManager"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)", "public": true, "help": ""}, {"name": "autoCull", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "A flag indicating if the Sprite should be automatically camera culled or not.", "public": true, "help": "Should this Sprite be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it."}, {"name": "body", "default": "null", "type": ["Phaser.Physics.Arcade.Body", "Phaser.Physics.P2.Body", "Phaser.Physics.Ninja.Body", "null"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "", "public": true, "help": "By default Sprites won't add themselves to any physics system and their physics body will be `null`.\\nTo enable them for physics you need to call `game.physics.enable(sprite, system)` where `sprite` is this object\\nand `system` is the Physics system you want to use to manage this body. Once enabled you can access all physics related properties via `Sprite.body`.\\n\\nImportant: Enabling a Sprite for P2 or Ninja physics will automatically set `Sprite.anchor` to 0.5 so the physics body is centered on the Sprite.\\nIf you need a different result then adjust or re-create the Body shape offsets manually, and/or reset the anchor after enabling physics."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 124, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "checkWorldBounds", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 119, "inlineHelp": "", "public": true, "help": "If true the Sprite checks if it is still within the world each frame, when it leaves the world it dispatches Sprite.events.onOutOfBounds\\nand optionally kills the sprite (if Sprite.outOfBoundsKill is true). By default this is disabled because the Sprite has to calculate its\\nbounds every frame to support it, and not all games need it. Enable it by setting the value to true."}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 821, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "Whether the strip is dirty or not"}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.", "public": true, "help": ""}, {"name": "exists", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 629, "inlineHelp": "If the Rope is processed by the core game update and physics.", "public": true, "help": "Rope.exists controls if the core game loop and physics update this Rope or not.\\nWhen you set Rope.exists to false it will remove its Body from the physics world (if it has one) and also set Rope.visible to false.\\nSetting Rope.exists to true will re-add the Body to the physics world (if it has a body) and set Rope.visible to true."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 598, "inlineHelp": "Set to true to fix this Rope to the Camera at its current world coordinates.", "public": true, "help": "A Rope that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Rope.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Rope was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 552, "inlineHelp": "Gets or sets the current frame index and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 573, "inlineHelp": "Gets or sets the current frame name and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 675, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default a Rope won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "key", "default": null, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "The user defined name given to this Sprite.", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "", "public": true, "help": "if you need a padding, not yet implemented"}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "", "public": true, "help": "The texture of the strip"}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 48, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "updateAnimation", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 796, "inlineHelp": "Returns an array of Phaser.Rectangles that represent the segments of the given rope", "public": true, "help": "The segments that make up the rope body as an array of Phaser.Rectangles"}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 715, "inlineHelp": "The position of the Rope on the x axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the Rope on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 742, "inlineHelp": "The position of the Rope on the y axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the Rope on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 153, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}, {"name": "_frame", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_frameName", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_scroll", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "A Rope is a Sprite that has a repeating texture. The texture can be scrolled and scaled and will automatically wrap on the edges as it does so.\\nPlease note that Ropes, as with normal Sprites, have no input handler or physics bodies by default. Both need enabling.\\nExample usage: https://github.com/codevinsky/phaser-rope-demo/blob/master/dist/demo.js", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Rope at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Rope at."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Rope during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Rope is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}, {"default": null, "optional": false, "type": ["array"], "name": "points", "help": "An array of {Phaser.Point}."}], "static": false, "constructor": true, "extends": "PIXI.Rope", "name": "Phaser.Rope"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 408, "public": true, "help": "Destroys the Rope. This removes it from its parent group, destroys the event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection."}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "loadTexture", "parameters": [{"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Rope during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Rope is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 311, "public": true, "help": "Changes the Texture the Rope is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "play", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\"."}, {"default": "null", "optional": true, "type": ["number"], "name": "frameRate", "help": "The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "killOnComplete", "help": "If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed."}], "inheritedFrom": "", "private": false, "returns": {"help": "A reference to playing Animation instance.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": false, "line": 482, "public": true, "help": "Play an animation based on the given key. The animation should previously have been added via sprite.animations.add()\\nIf the requested animation is already playing this request will be ignored. If you need to reset an already running animation do so directly on the Animation object itself."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 279, "public": true, "help": "Internal function called by the World postUpdate cycle."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 167, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Sprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Sprite at."}], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": false, "line": 499, "public": true, "help": "Resets the Rope. This places the Rope at the given x/y world coordinates, resets the tilePosition and then\\nsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state.\\nIf the Rope has a physics body that too is reset."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The Frame to be used by the Rope texture."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 360, "public": true, "help": "Sets the Texture frame the Rope uses for rendering.\\nThis is primarily an internal method used by Rope.loadTexture, although you may call it directly."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 266, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": []}}, {"properties": {"protected": [{"name": "pendingDelete", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": true, "line": 69, "inlineHelp": "A flag that controls if the TimerEvent is pending deletion.", "public": false, "help": ""}], "public": [{"name": "arguments", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "The values to be passed to the callback.", "public": true, "help": ""}, {"name": "callback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "The callback that will be called when the TimerEvent occurs.", "public": true, "help": ""}, {"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The context in which the callback will be called.", "public": true, "help": ""}, {"name": "delay", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "The delay in ms at which this TimerEvent fires.", "public": true, "help": ""}, {"name": "loop", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "True if this TimerEvent loops, otherwise false.", "public": true, "help": ""}, {"name": "repeatCount", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "If this TimerEvent repeats it will do so this many times.", "public": true, "help": ""}, {"name": "tick", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "The tick is the next game clock time that this event will fire at.", "public": true, "help": ""}, {"name": "timer", "default": null, "type": ["Phaser.Timer"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "The Timer object that this TimerEvent belongs to.", "public": true, "help": ""}], "private": []}, "class": {"help": "A TimerEvent is a single event that is processed by a Phaser.Timer.\\nIt consists of a delay, which is a value in milliseconds after which the event will fire.\\nIt can call a specific callback, passing in optional parameters.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Timer"], "name": "timer", "help": "The Timer object that this TimerEvent belongs to."}, {"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The delay in ms at which this TimerEvent fires."}, {"default": null, "optional": false, "type": ["number"], "name": "tick", "help": "The tick is the next game clock time that this event will fire at."}, {"default": null, "optional": false, "type": ["number"], "name": "repeatCount", "help": "If this TimerEvent repeats it will do so this many times."}, {"default": null, "optional": false, "type": ["boolean"], "name": "loop", "help": "True if this TimerEvent loops, otherwise false."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called when the TimerEvent occurs."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the callback will be called."}, {"default": null, "optional": false, "type": ["array"], "name": "arguments", "help": "The values to be passed to the callback."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.TimerEvent"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "A set of functions used by the webGL renderer to draw the primitive graphics data", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "PIXI.WebGLGraphics"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 852, "public": true, "help": ""}, {"name": "upload", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 862, "public": true, "help": ""}], "private": [{"name": "buildCircle", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object to draw"}, {"default": null, "optional": false, "type": ["object"], "name": "webGLData", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 429, "public": false, "help": "Builds a circle to draw"}, {"name": "buildComplexPoly", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object containing all the necessary properties"}, {"default": null, "optional": false, "type": ["object"], "name": "webGLData", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 724, "public": false, "help": "Builds a complex polygon to draw"}, {"name": "buildLine", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object containing all the necessary properties"}, {"default": null, "optional": false, "type": ["object"], "name": "webGLData", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 512, "public": false, "help": "Builds a line to draw"}, {"name": "buildPoly", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object containing all the necessary properties"}, {"default": null, "optional": false, "type": ["object"], "name": "webGLData", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 786, "public": false, "help": "Builds a polygon to draw"}, {"name": "buildRectangle", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object containing all the necessary properties"}, {"default": null, "optional": false, "type": ["object"], "name": "webGLData", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 242, "public": false, "help": "Builds a rectangle to draw"}, {"name": "buildRoundedRectangle", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object containing all the necessary properties"}, {"default": null, "optional": false, "type": ["object"], "name": "webGLData", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 310, "public": false, "help": "Builds a rounded rectangle to draw"}, {"name": "quadraticBezierCurve", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "fromX", "help": "Origin point x"}, {"default": null, "optional": false, "type": ["number"], "name": "fromY", "help": "Origin point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpX", "help": "Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY", "help": "Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "toX", "help": "Destination point x"}, {"default": null, "optional": false, "type": ["number"], "name": "toY", "help": "Destination point y"}], "inheritedFrom": "", "private": true, "returns": {"help": "", "types": ["array number"]}, "protected": false, "static": true, "inherited": false, "line": 383, "public": false, "help": "Calculate the points for a quadratic bezier curve. (helper function..)\\nBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c"}, {"name": "renderGraphics", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphics", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 25, "public": false, "help": "Renders the graphics object"}, {"name": "switchMode", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "webGL", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "type", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 206, "public": false, "help": ""}, {"name": "updateGraphics", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphicsData", "help": "The graphics object to update"}, {"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": true, "inherited": false, "line": 93, "public": false, "help": "Updates the graphics object"}]}}, {"properties": {"protected": [], "public": [{"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 224, "inlineHelp": "Gets or sets the bottom of the ellipse.", "public": true, "help": "The sum of the y and height properties. Changing the bottom property of an Ellipse doesn't adjust the y property, but does change the height."}, {"name": "empty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 250, "inlineHelp": "Gets or sets the empty state of the ellipse.", "public": true, "help": "Determines whether or not this Ellipse object is empty. Will return a value of true if the Ellipse objects dimensions are less than or equal to 0; otherwise false.\\nIf set to true it will reset all of the Ellipse objects properties to 0. An Ellipse object is empty if its width or height is less than or equal to 0."}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "The overall height of this ellipse.", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 182, "inlineHelp": "Gets or sets the value of the rightmost point of the ellipse.", "public": true, "help": "The x coordinate of the rightmost point of the Ellipse. Changing the right property of an Ellipse object has no effect on the x property, but does adjust the width."}, {"name": "top", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 207, "inlineHelp": "Gets or sets the top of the ellipse.", "public": true, "help": "The top of the Ellipse. The same as its y property."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "The overall width of this ellipse.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "The X coordinate of the upper-left corner of the framing rectangle of this ellipse.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "The Y coordinate of the upper-left corner of the framing rectangle of this ellipse.", "public": true, "help": ""}], "private": []}, "class": {"help": "Creates a Ellipse object. A curve on a plane surrounding two focal points.", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The X coordinate of the upper-left corner of the framing rectangle of this ellipse."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The Y coordinate of the upper-left corner of the framing rectangle of this ellipse."}, {"default": "0", "optional": true, "type": ["number"], "name": "width", "help": "The overall width of this ellipse."}, {"default": "0", "optional": true, "type": ["number"], "name": "height", "help": "The overall height of this ellipse."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Ellipse"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Ellipse"], "name": "output", "help": "Optional Ellipse object. If given the values will be set into the object, otherwise a brand new Ellipse object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "The cloned Ellipse object.", "types": ["Phaser.Ellipse"]}, "protected": false, "static": false, "inherited": false, "line": 117, "public": true, "help": "Returns a new Ellipse object with the same values for the x, y, width, and height properties as this Ellipse object."}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Ellipse"], "name": "a", "help": "The Ellipse to be checked."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X value of the coordinate to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y value of the coordinate to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the coordinates are within this ellipse, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 275, "public": true, "help": "Return true if the given x/y coordinates are within the Ellipse object."}, {"name": "copyFrom", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The object to copy from."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Ellipse object.", "types": ["Phaser.Ellipse"]}, "protected": false, "static": false, "inherited": false, "line": 88, "public": true, "help": "Copies the x, y, width and height properties from any given object to this Ellipse."}, {"name": "copyTo", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "dest", "help": "The object to copy to."}], "inheritedFrom": "", "private": false, "returns": {"help": "This dest object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 100, "public": true, "help": "Copies the x, y, width and height properties from this Ellipse to any given object."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 299, "public": true, "help": "Returns the framing rectangle of the ellipse as a Phaser.Rectangle object."}, {"name": "setTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the upper-left corner of the framing rectangle of this ellipse."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the upper-left corner of the framing rectangle of this ellipse."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The overall width of this ellipse."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The overall height of this ellipse."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Ellipse object.", "types": ["Phaser.Ellipse"]}, "protected": false, "static": false, "inherited": false, "line": 60, "public": true, "help": "Sets the members of the Ellipse to the specified values."}, {"name": "toString", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A string representation of the instance.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 150, "public": true, "help": "Returns a string representation of this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "The strength of the blur."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "A Smart Blur Filter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.SmartBlurFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.World"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "A reference to the game world.", "public": true, "help": ""}], "private": []}, "class": {"help": "The Game Object Creator is a quick way to create all of the different sorts of core objects that Phaser uses, but not add them to the game world.\\nUse the GameObjectFactory to create and add the objects into the world.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.GameObjectCreator"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "audio", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the sound that this object will use."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "The volume at which the sound will be played."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "connect", "help": "Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created text object.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 122, "public": true, "help": "Creates a new Sound object."}, {"name": "audioSprite", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the sound that this object will use."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created AudioSprite object.", "types": ["Phaser.AudioSprite"]}, "protected": false, "static": false, "inherited": false, "line": 135, "public": true, "help": "Creates a new AudioSprite object."}, {"name": "bitmapData", "parameters": [{"default": "256", "optional": true, "type": ["number"], "name": "width", "help": "The width of the BitmapData in pixels."}, {"default": "256", "optional": true, "type": ["number"], "name": "height", "help": "The height of the BitmapData in pixels."}, {"default": "''", "optional": true, "type": ["string"], "name": "key", "help": "Asset key for the BitmapData when stored in the Cache (see addToCache parameter)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToCache", "help": "Should this BitmapData be added to the Game.Cache? If so you can retrieve it with Cache.getBitmapData(key)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created BitmapData object.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 360, "public": true, "help": "A BitmapData object which can be manipulated and drawn to like a traditional Canvas object and used to texture Sprites."}, {"name": "bitmapText", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new bitmapText object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new bitmapText object."}, {"default": null, "optional": false, "type": ["string"], "name": "font", "help": "The key of the BitmapText font as stored in Game.Cache."}, {"default": null, "optional": true, "type": ["string"], "name": "text", "help": "The actual text that will be rendered. Can be set later via BitmapText.text."}, {"default": null, "optional": true, "type": ["number"], "name": "size", "help": "The size the font will be rendered in, in pixels."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created bitmapText object.", "types": ["Phaser.BitmapText"]}, "protected": false, "static": false, "inherited": false, "line": 298, "public": true, "help": "Create a new BitmapText object."}, {"name": "button", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "x", "help": " X position of the new button object."}, {"default": null, "optional": true, "type": ["number"], "name": "y", "help": " Y position of the new button object."}, {"default": null, "optional": true, "type": ["string"], "name": "key", "help": " The image key as defined in the Game.Cache to use as the texture for this button."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": " The function to call when this button is pressed"}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": " The context in which the callback will be called (usually 'this')"}, {"default": null, "optional": true, "type": ["string", "number"], "name": "overFrame", "help": " This is the frame or frameName that will be set when this button is in an over state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "outFrame", "help": " This is the frame or frameName that will be set when this button is in an out state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "downFrame", "help": " This is the frame or frameName that will be set when this button is in a down state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "upFrame", "help": " This is the frame or frameName that will be set when this button is in an up state. Give either a number to use a frame ID or a string for a frame name."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created button object.", "types": ["Phaser.Button"]}, "protected": false, "static": false, "inherited": false, "line": 224, "public": true, "help": "Creates a new Button object."}, {"name": "emitter", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate within the Emitter that the particles are emitted from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate within the Emitter that the particles are emitted from."}, {"default": "50", "optional": true, "type": ["number"], "name": "maxParticles", "help": "The total number of particles in this emitter."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created emitter object.", "types": ["Phaser.Emitter"]}, "protected": false, "static": false, "inherited": false, "line": 255, "public": true, "help": "Emitter is a lightweight particle emitter. It can be used for one-time explosions or for\\ncontinuous effects like rain and fire. All it really does is launch Particle objects out\\nat set intervals, and fixes their positions and velocities accorindgly."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "filter", "help": "The name of the filter you wish to create, for example HueRotate or SineWave."}, {"default": null, "optional": false, "type": ["any"], "name": "-", "help": " Whatever parameters are needed to be passed to the filter init function."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created Phaser.Filter object.", "types": ["Phaser.Filter"]}, "protected": false, "static": false, "inherited": false, "line": 384, "public": true, "help": "A WebGL shader/filter that can be applied to Sprites."}, {"name": "graphics", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new graphics object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new graphics object."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created graphics object.", "types": ["Phaser.Graphics"]}, "protected": false, "static": false, "inherited": false, "line": 238, "public": true, "help": "Creates a new Graphics object."}, {"name": "group", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "parent", "help": "The parent Group or DisplayObjectContainer that will hold this group, if any."}, {"default": "'group'", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Group. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Group will be added directly to the Game.Stage instead of Game.World."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "enableBody", "help": "If true all Sprites created with `Group.create` or `Group.createMulitple` will have a physics body created on them. Change the body type with physicsBodyType."}, {"default": "0", "optional": true, "type": ["number"], "name": "physicsBodyType", "help": "If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created Group.", "types": ["Phaser.Group"]}, "protected": false, "static": false, "inherited": false, "line": 88, "public": true, "help": "A Group is a container for display objects that allows for fast pooling, recycling and collision checks."}, {"name": "image", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the image."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the image."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "frame", "help": "If the sprite uses an image from a texture atlas or sprite sheet you can pass the frame here. Either a number for a frame ID or a string for a frame name."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 42, "public": true, "help": "Create a new `Image` object. An Image is a light-weight object you can use to display anything that doesn't need physics or animation.\\nIt can still rotate, scale, crop and receive input events. This makes it perfect for logos, backgrounds, simple buttons and other non-Sprite graphics."}, {"name": "renderTexture", "parameters": [{"default": "100", "optional": true, "type": ["number"], "name": "width", "help": "the width of the RenderTexture."}, {"default": "100", "optional": true, "type": ["number"], "name": "height", "help": "the height of the RenderTexture."}, {"default": "''", "optional": true, "type": ["string"], "name": "key", "help": "Asset key for the RenderTexture when stored in the Cache (see addToCache parameter)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToCache", "help": "Should this RenderTexture be added to the Game.Cache? If so you can retrieve it with Cache.getTexture(key)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created RenderTexture object.", "types": ["Phaser.RenderTexture"]}, "protected": false, "static": false, "inherited": false, "line": 334, "public": true, "help": "A dynamic initially blank canvas to which images can be drawn."}, {"name": "retroFont", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "font", "help": "The key of the image in the Game.Cache that the RetroFont will use."}, {"default": null, "optional": false, "type": ["number"], "name": "characterWidth", "help": "The width of each character in the font set."}, {"default": null, "optional": false, "type": ["number"], "name": "characterHeight", "help": "The height of each character in the font set."}, {"default": null, "optional": false, "type": ["string"], "name": "chars", "help": "The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements."}, {"default": null, "optional": false, "type": ["number"], "name": "charsPerRow", "help": "The number of characters per row in the font set."}, {"default": "0", "optional": true, "type": ["number"], "name": "xSpacing", "help": "If the characters in the font set have horizontal spacing between them set the required amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "ySpacing", "help": "If the characters in the font set have vertical spacing between them set the required amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "xOffset", "help": "If the font set doesn't start at the top left of the given image, specify the X coordinate offset here."}, {"default": "0", "optional": true, "type": ["number"], "name": "yOffset", "help": "If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created RetroFont texture which can be applied to an Image or Sprite.", "types": ["Phaser.RetroFont"]}, "protected": false, "static": false, "inherited": false, "line": 281, "public": true, "help": "Create a new RetroFont object to be used as a texture for an Image or Sprite and optionally add it to the Cache.\\nA RetroFont uses a bitmap which contains fixed with characters for the font set. You use character spacing to define the set.\\nIf you need variable width character support then use a BitmapText object instead. The main difference between a RetroFont and a BitmapText\\nis that a RetroFont creates a single texture that you can apply to a game object, where-as a BitmapText creates one Sprite object per letter of text.\\nThe texture can be asssigned or one or multiple images/sprites, but note that the text the RetroFont uses will be shared across them all,\\ni.e. if you need each Image to have different text in it, then you need to create multiple RetroFont objects."}, {"name": "rope", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Rope at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Rope at."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the Rope."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the Rope."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Rope is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created rope object.", "types": ["Phaser.Rope"]}, "protected": false, "static": false, "inherited": false, "line": 187, "public": true, "help": "Creates a new Rope object."}, {"name": "sound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the sound that this object will use."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "The volume at which the sound will be played."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "connect", "help": "Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created text object.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 151, "public": true, "help": "Creates a new Sound object."}, {"name": "sprite", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new sprite."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new sprite."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "frame", "help": "If the sprite uses an image from a texture atlas or sprite sheet you can pass the frame here. Either a number for a frame ID or a string for a frame name."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 58, "public": true, "help": "Create a new Sprite with specific position and sprite sheet key."}, {"name": "spriteBatch", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "parent", "help": "The parent Group or DisplayObjectContainer that will hold this group, if any."}, {"default": "'group'", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Group. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Group will be added directly to the Game.Stage instead of Game.World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created group.", "types": ["Phaser.Group"]}, "protected": false, "static": false, "inherited": false, "line": 103, "public": true, "help": "A Group is a container for display objects that allows for fast pooling, recycling and collision checks."}, {"name": "text", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new text object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new text object."}, {"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The actual text that will be written."}, {"default": null, "optional": false, "type": ["object"], "name": "style", "help": "The style object containing style attributes like font, font size , etc."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created text object.", "types": ["Phaser.Text"]}, "protected": false, "static": false, "inherited": false, "line": 203, "public": true, "help": "Creates a new Text object."}, {"name": "tileSprite", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the TileSprite."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the TileSprite."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created tileSprite object.", "types": ["Phaser.TileSprite"]}, "protected": false, "static": false, "inherited": false, "line": 169, "public": true, "help": "Creates a new TileSprite object."}, {"name": "tilemap", "parameters": [{"default": null, "optional": true, "type": ["string"], "name": "key", "help": "The key of the tilemap data as stored in the Cache. If you're creating a blank map either leave this parameter out or pass `null`."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileWidth", "help": "The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileHeight", "help": "The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "10", "optional": true, "type": ["number"], "name": "width", "help": "The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}, {"default": "10", "optional": true, "type": ["number"], "name": "height", "help": "The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 318, "public": true, "help": "Creates a new Phaser.Tilemap object. The map can either be populated with data from a Tiled JSON file or from a CSV file.\\nTo do this pass the Cache key as the first parameter. When using Tiled data you need only provide the key.\\nWhen using CSV data you must provide the key and the tileWidth and tileHeight parameters.\\nIf creating a blank tilemap to be populated later, you can either specify no parameters at all and then use `Tilemap.create` or pass the map and tile dimensions here.\\nNote that all Tilemaps use a base tile size to calculate dimensions from, but that a TilemapLayer may have its own unique tile size that overrides it."}, {"name": "tween", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "obj", "help": "Object the tween will be run on."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Tween object.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 71, "public": true, "help": "Create a tween object for a specific object. The object can be any JavaScript object or Phaser object such as Sprite."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1814, "inlineHelp": "The angle of rotation given in degrees, where 0 degrees = to the right.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "classType", "default": "Phaser.Sprite", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame."}, {"name": "cursor", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The current display object that the Group cursor is pointing to.", "public": true, "help": "The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "enableBody", "default": "enableBody", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.", "public": true, "help": ""}, {"name": "enableBodyDebug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "If exists is true the Group is updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1834, "inlineHelp": "Set to true to fix this Group to the Camera at its current world coordinates.", "public": true, "help": "A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "grid", "default": null, "type": ["Phaser.FlexGrid"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "A reference to the FlexGrid that owns this layer.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "ignoreDestroy", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.", "public": true, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1798, "inlineHelp": "The total number of children in this Group, regardless of their exists/alive status.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A name for this Group. Not used internally but useful for debugging.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Group", "Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The parent of this Group.", "public": true, "help": ""}, {"name": "physicsBodyType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.", "public": true, "help": ""}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The pivot point of the Group container.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1879, "inlineHelp": "The angle of rotation given in radians.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "scale", "default": null, "type": ["Phaser.ScaleManager"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "A reference to the ScaleManager.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1783, "inlineHelp": "The total number of children in this Group who have a state of exists = true.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1884, "inlineHelp": "The visible state of the Group. Non-visible Groups and all of their children are not rendered.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1865, "inlineHelp": "The x coordinate of the Group container.", "public": true, "help": "The x coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1872, "inlineHelp": "The y coordinate of the Group container.", "public": true, "help": "The y coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": []}, "class": {"help": "WARNING: This is an EXPERIMENTAL class. The API will change significantly in the coming versions and is incomplete.\\nPlease try to avoid using in production games with a long time to build.\\nThis is also why the documentation is incomplete.\\n\\nA responsive grid layer.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.ScaleManager"], "name": "manager", "help": "The ScaleManager."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "A reference to the Point object used for positioning."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "bounds", "help": "A reference to the Rectangle used for the layer bounds."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "scale", "help": "A reference to the Point object used for layer scaling."}], "static": false, "constructor": true, "extends": "Phaser.Group", "name": "Phaser.FlexLayer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 209, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method."}, {"name": "addAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to increment, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 956, "public": true, "help": "Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value."}, {"name": "addAt", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index within the Group to insert the child to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 273, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering."}, {"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addMultiple", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "children", "help": "An array containing instances of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The array of children that were added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 249, "public": true, "help": "Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array."}, {"name": "ascendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1385, "public": true, "help": "An internal helper function for the sort process."}, {"name": "bringToTop", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to bring to the top of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 509, "public": true, "help": "Brings the given child to the top of this Group so it renders above all other children."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "method", "help": "A string containing the name of the function that will be called. The function must exist on the child."}, {"default": "null", "optional": true, "type": ["string"], "name": "context", "help": "A string containing the context under which the method will be executed. Set to null to default to the child."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the method."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1095, "public": true, "help": "Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child."}, {"name": "callAllExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that exists on the children that will be called."}, {"default": null, "optional": false, "type": ["boolean"], "name": "existsValue", "help": "Only children with exists=existsValue will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1019, "public": true, "help": "Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback."}, {"name": "checkAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 925, "public": true, "help": "This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children."}, {"name": "checkProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was was equal to value, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 790, "public": true, "help": "Checks a property for the given value on the child."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "countDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as dead.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1582, "public": true, "help": "Call this function to find out how many members of the group are dead."}, {"name": "countLiving", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as alive.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1570, "public": true, "help": "Call this function to find out how many members of the group are alive."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed.", "types": ["Phaser.Sprite", "object"]}, "protected": false, "static": false, "inherited": true, "line": 335, "public": true, "help": "Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "createMultiple", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "quantity", "help": "The number of Sprites to create."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 380, "public": true, "help": "Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "customSort", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "sortHandler", "help": "Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The scope in which the sortHandler is called."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1364, "public": true, "help": "This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b."}, {"name": "descendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1416, "public": true, "help": "An internal helper function for the sort process."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this Group have its destroy method called?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "soft", "help": "A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1751, "public": true, "help": "Destroys this Group. Removes all children, then removes the container from the display list and nulls references."}, {"name": "divideAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to divide, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1004, "public": true, "help": "Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "predicate", "help": "The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns an array list containing all the children that the predicate returned true for", "types": ["Phaser.ArrayList"]}, "protected": false, "static": false, "inherited": true, "line": 1223, "public": true, "help": "Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1250, "public": true, "help": "Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEachAlive", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1295, "public": true, "help": "Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)"}, {"name": "forEachDead", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1313, "public": true, "help": "Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)"}, {"name": "forEachExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1277, "public": true, "help": "Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to return the child from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was found at the given index. If the index was out of bounds then this will return -1.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 310, "public": true, "help": "Returns the child found at the given index within this Group."}, {"name": "getBottom", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the bottom of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1555, "public": true, "help": "Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getFirstAlive", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first alive child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1515, "public": true, "help": "Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first dead child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1528, "public": true, "help": "Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstExists", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "True or false."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1497, "public": true, "help": "Call this function to retrieve the first object with exists == (the given state) in the Group."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to get the index for."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The index of the child or -1 if it's not a member of this Group.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 629, "public": true, "help": "Get the index position of the given child in this Group. This should always match the childs z property."}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "A random child of this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1596, "public": true, "help": "Returns a member at random from the group."}, {"name": "getTop", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the top of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1540, "public": true, "help": "Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child."}, {"name": "hasProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check for the existance of the property on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the child has the property, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 679, "public": true, "help": "Checks if the child has the given property. Will scan up to 4 levels deep only."}, {"name": "iterate", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The child property to check, i.e. 'exists', 'alive', 'health'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "If child.key === this value it will be considered a match. Note that a strict comparison is used."}, {"default": null, "optional": false, "type": ["number"], "name": "returnType", "help": "How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD."}, {"default": "null", "optional": true, "type": ["function"], "name": "callback", "help": "Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns either a numeric total (if RETURN_TOTAL was specified) or the child object.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1446, "public": true, "help": "Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move down in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 571, "public": true, "help": "Moves the given child down one place in this Group unless it's already at the top."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move up in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 547, "public": true, "help": "Moves the given child up one place in this Group unless it's already at the top."}, {"name": "multiplyAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to multiply, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 988, "public": true, "help": "Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value."}, {"name": "next", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 439, "public": true, "help": "Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object."}, {"name": "previous", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 466, "public": true, "help": "Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to remove."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "true if the child was removed from this Group, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 1620, "public": true, "help": "Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child."}, {"name": "removeAll", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on each child that is removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1661, "public": true, "help": "Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list."}, {"name": "removeBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "The index to start removing children from."}, {"default": null, "optional": true, "type": ["number"], "name": "endIndex", "help": "The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1700, "public": true, "help": "Removes all children from this Group whos index falls beteen the given startIndex and endIndex values."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "oldChild", "help": "The child in this Group that will be replaced."}, {"default": null, "optional": false, "type": ["any"], "name": "newChild", "help": "The child to be inserted into this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns the oldChild that was replaced within this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 643, "public": true, "help": "Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group."}, {"name": "resetCursor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "index", "help": "Set the cursor to point to a specific index."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 415, "public": true, "help": "Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead."}, {"name": "reverse", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 615, "public": true, "help": "Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "sendToBack", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to send to the bottom of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": "Sends the given child to the bottom of this Group so it renders below all other children."}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "child", "help": "The child to set the property on."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then the child will only be updated if alive=true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then the child will only be updated if visible=true."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 823, "public": true, "help": "This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 854, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAllChildren", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 889, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to set the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 720, "public": true, "help": "Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "sort", "parameters": [{"default": "'z'", "optional": true, "type": ["string"], "name": "index", "help": "The `string` name of the property you want to sort on. Defaults to the objects z-depth value."}, {"default": "Phaser.Group.SORT_ASCENDING", "optional": true, "type": ["number"], "name": "order", "help": "The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1330, "public": true, "help": "Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`."}, {"name": "subAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to decrement, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 972, "public": true, "help": "Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value."}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child1", "help": "The first child to swap."}, {"default": null, "optional": false, "type": ["any"], "name": "child2", "help": "The second child to swap."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 495, "public": true, "help": "Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "xy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the child in the Group to set the position of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the child."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the child."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 596, "public": true, "help": "Positions the child found at the given index within this Group to the given x and y coordinates."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.World"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "A reference to the game world.", "public": true, "help": ""}], "private": []}, "class": {"help": "The Game Object Factory is a quick way to create all of the different sorts of core objects that Phaser uses.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.GameObjectFactory"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "audio", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the sound that this object will use."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "The volume at which the sound will be played."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "connect", "help": "Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created text object.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 160, "public": true, "help": "Creates a new Sound object."}, {"name": "audioSprite", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the sound that this object will use."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created AudioSprite object.", "types": ["Phaser.AudioSprite"]}, "protected": false, "static": false, "inherited": false, "line": 189, "public": true, "help": "Creates a new AudioSprite object."}, {"name": "bitmapData", "parameters": [{"default": "256", "optional": true, "type": ["number"], "name": "width", "help": "The width of the BitmapData in pixels."}, {"default": "256", "optional": true, "type": ["number"], "name": "height", "help": "The height of the BitmapData in pixels."}, {"default": "''", "optional": true, "type": ["string"], "name": "key", "help": "Asset key for the BitmapData when stored in the Cache (see addToCache parameter)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToCache", "help": "Should this BitmapData be added to the Game.Cache? If so you can retrieve it with Cache.getBitmapData(key)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created BitmapData object.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 417, "public": true, "help": "A BitmapData object which can be manipulated and drawn to like a traditional Canvas object and used to texture Sprites."}, {"name": "bitmapText", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new bitmapText object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new bitmapText object."}, {"default": null, "optional": false, "type": ["string"], "name": "font", "help": "The key of the BitmapText font as stored in Game.Cache."}, {"default": null, "optional": true, "type": ["string"], "name": "text", "help": "The actual text that will be rendered. Can be set later via BitmapText.text."}, {"default": null, "optional": true, "type": ["number"], "name": "size", "help": "The size the font will be rendered in, in pixels."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created bitmapText object.", "types": ["Phaser.BitmapText"]}, "protected": false, "static": false, "inherited": false, "line": 352, "public": true, "help": "Create a new BitmapText object."}, {"name": "button", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "x", "help": " X position of the new button object."}, {"default": null, "optional": true, "type": ["number"], "name": "y", "help": " Y position of the new button object."}, {"default": null, "optional": true, "type": ["string"], "name": "key", "help": " The image key as defined in the Game.Cache to use as the texture for this button."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": " The function to call when this button is pressed"}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": " The context in which the callback will be called (usually 'this')"}, {"default": null, "optional": true, "type": ["string", "number"], "name": "overFrame", "help": " This is the frame or frameName that will be set when this button is in an over state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "outFrame", "help": " This is the frame or frameName that will be set when this button is in an out state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "downFrame", "help": " This is the frame or frameName that will be set when this button is in a down state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "upFrame", "help": " This is the frame or frameName that will be set when this button is in an up state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created button object.", "types": ["Phaser.Button"]}, "protected": false, "static": false, "inherited": false, "line": 272, "public": true, "help": "Creates a new Button object."}, {"name": "emitter", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate within the Emitter that the particles are emitted from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate within the Emitter that the particles are emitted from."}, {"default": "50", "optional": true, "type": ["number"], "name": "maxParticles", "help": "The total number of particles in this emitter."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created emitter object.", "types": ["Phaser.Emitter"]}, "protected": false, "static": false, "inherited": false, "line": 308, "public": true, "help": "Emitter is a lightweight particle emitter. It can be used for one-time explosions or for\\ncontinuous effects like rain and fire. All it really does is launch Particle objects out\\nat set intervals, and fixes their positions and velocities accorindgly."}, {"name": "existing", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "object", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}], "inheritedFrom": "", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 36, "public": true, "help": "Adds an existing object to the game world."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "filter", "help": "The name of the filter you wish to create, for example HueRotate or SineWave."}, {"default": null, "optional": false, "type": ["any"], "name": "-", "help": " Whatever parameters are needed to be passed to the filter init function."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created Phaser.Filter object.", "types": ["Phaser.Filter"]}, "protected": false, "static": false, "inherited": false, "line": 441, "public": true, "help": "A WebGL shader/filter that can be applied to Sprites."}, {"name": "graphics", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new graphics object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new graphics object."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created graphics object.", "types": ["Phaser.Graphics"]}, "protected": false, "static": false, "inherited": false, "line": 289, "public": true, "help": "Creates a new Graphics object."}, {"name": "group", "parameters": [{"default": null, "optional": true, "type": ["any"], "name": "parent", "help": "The parent Group or DisplayObjectContainer that will hold this group, if any. If set to null the Group won't be added to the display list. If undefined it will be added to World by default."}, {"default": "'group'", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Group. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Group will be added directly to the Game.Stage instead of Game.World."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "enableBody", "help": "If true all Sprites created with `Group.create` or `Group.createMulitple` will have a physics body created on them. Change the body type with physicsBodyType."}, {"default": "0", "optional": true, "type": ["number"], "name": "physicsBodyType", "help": "If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created group.", "types": ["Phaser.Group"]}, "protected": false, "static": false, "inherited": false, "line": 105, "public": true, "help": "A Group is a container for display objects that allows for fast pooling, recycling and collision checks."}, {"name": "image", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the image."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the image."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "frame", "help": "If the sprite uses an image from a texture atlas or sprite sheet you can pass the frame here. Either a number for a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 54, "public": true, "help": "Create a new `Image` object. An Image is a light-weight object you can use to display anything that doesn't need physics or animation.\\nIt can still rotate, scale, crop and receive input events. This makes it perfect for logos, backgrounds, simple buttons and other non-Sprite graphics."}, {"name": "physicsGroup", "parameters": [{"default": "Phaser.Physics.ARCADE", "optional": true, "type": ["number"], "name": "physicsBodyType", "help": "If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc."}, {"default": null, "optional": true, "type": ["any"], "name": "parent", "help": "The parent Group or DisplayObjectContainer that will hold this group, if any. If set to null the Group won't be added to the display list. If undefined it will be added to World by default."}, {"default": "'group'", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Group. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Group will be added directly to the Game.Stage instead of Game.World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created group.", "types": ["Phaser.Group"]}, "protected": false, "static": false, "inherited": false, "line": 123, "public": true, "help": "A Group is a container for display objects that allows for fast pooling, recycling and collision checks.\\nA Physics Group is the same as an ordinary Group except that is has enableBody turned on by default, so any Sprites it creates\\nare automatically given a physics body."}, {"name": "plugin", "parameters": [{"default": null, "optional": false, "type": ["object", "Phaser.Plugin"], "name": "plugin", "help": "The Plugin to add into the PluginManager. This can be a function or an existing object."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the Plugin.init method."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Plugin that was added to the manager.", "types": ["Phaser.Plugin"]}, "protected": false, "static": false, "inherited": false, "line": 462, "public": true, "help": "Add a new Plugin into the PluginManager.\\nThe Plugin must have 2 properties: game and parent. Plugin.game is set to the game reference the PluginManager uses, and parent is set to the PluginManager."}, {"name": "renderTexture", "parameters": [{"default": "100", "optional": true, "type": ["number"], "name": "width", "help": "the width of the RenderTexture."}, {"default": "100", "optional": true, "type": ["number"], "name": "height", "help": "the height of the RenderTexture."}, {"default": "''", "optional": true, "type": ["string"], "name": "key", "help": "Asset key for the RenderTexture when stored in the Cache (see addToCache parameter)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToCache", "help": "Should this RenderTexture be added to the Game.Cache? If so you can retrieve it with Cache.getTexture(key)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created RenderTexture object.", "types": ["Phaser.RenderTexture"]}, "protected": false, "static": false, "inherited": false, "line": 391, "public": true, "help": "A dynamic initially blank canvas to which images can be drawn."}, {"name": "retroFont", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "font", "help": "The key of the image in the Game.Cache that the RetroFont will use."}, {"default": null, "optional": false, "type": ["number"], "name": "characterWidth", "help": "The width of each character in the font set."}, {"default": null, "optional": false, "type": ["number"], "name": "characterHeight", "help": "The height of each character in the font set."}, {"default": null, "optional": false, "type": ["string"], "name": "chars", "help": "The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements."}, {"default": null, "optional": false, "type": ["number"], "name": "charsPerRow", "help": "The number of characters per row in the font set."}, {"default": "0", "optional": true, "type": ["number"], "name": "xSpacing", "help": "If the characters in the font set have horizontal spacing between them set the required amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "ySpacing", "help": "If the characters in the font set have vertical spacing between them set the required amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "xOffset", "help": "If the font set doesn't start at the top left of the given image, specify the X coordinate offset here."}, {"default": "0", "optional": true, "type": ["number"], "name": "yOffset", "help": "If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created RetroFont texture which can be applied to an Image or Sprite.", "types": ["Phaser.RetroFont"]}, "protected": false, "static": false, "inherited": false, "line": 334, "public": true, "help": "Create a new RetroFont object to be used as a texture for an Image or Sprite and optionally add it to the Cache.\\nA RetroFont uses a bitmap which contains fixed with characters for the font set. You use character spacing to define the set.\\nIf you need variable width character support then use a BitmapText object instead. The main difference between a RetroFont and a BitmapText\\nis that a RetroFont creates a single texture that you can apply to a game object, where-as a BitmapText creates one Sprite object per letter of text.\\nThe texture can be asssigned or one or multiple images/sprites, but note that the text the RetroFont uses will be shared across them all,\\ni.e. if you need each Image to have different text in it, then you need to create multiple RetroFont objects."}, {"name": "rope", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}, {"default": null, "optional": false, "type": ["array"], "name": "points", "help": "An array of {Phaser.Point}."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created tileSprite object.", "types": ["Phaser.TileSprite"]}, "protected": false, "static": false, "inherited": false, "line": 229, "public": true, "help": "Creates a new Rope object.\\n\\nExample usage: https://github.com/codevinsky/phaser-rope-demo/blob/master/dist/demo.js"}, {"name": "sound", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the sound that this object will use."}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "The volume at which the sound will be played."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the sound will loop."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "connect", "help": "Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created text object.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 176, "public": true, "help": "Creates a new Sound object."}, {"name": "sprite", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new sprite."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new sprite."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "frame", "help": "If the sprite uses an image from a texture atlas or sprite sheet you can pass the frame here. Either a number for a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 73, "public": true, "help": "Create a new Sprite with specific position and sprite sheet key."}, {"name": "spriteBatch", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Group", "null"], "name": "parent", "help": "The parent Group that will hold this Sprite Batch. Set to `undefined` or `null` to add directly to game.world."}, {"default": "'group'", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Sprite Batch. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Sprite Batch will be added directly to the Game.Stage instead of the parent."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created group.", "types": ["Phaser.Group"]}, "protected": false, "static": false, "inherited": false, "line": 140, "public": true, "help": "A SpriteBatch is a really fast version of a Phaser Group built solely for speed.\\nUse when you need a lot of sprites or particles all sharing the same texture.\\nThe speed gains are specifically for WebGL. In Canvas mode you won't see any real difference."}, {"name": "text", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new text object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new text object."}, {"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The actual text that will be written."}, {"default": null, "optional": false, "type": ["object"], "name": "style", "help": "The style object containing style attributes like font, font size , etc."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created text object.", "types": ["Phaser.Text"]}, "protected": false, "static": false, "inherited": false, "line": 248, "public": true, "help": "Creates a new Text object."}, {"name": "tileSprite", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the TileSprite."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the TileSprite."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created tileSprite object.", "types": ["Phaser.TileSprite"]}, "protected": false, "static": false, "inherited": false, "line": 208, "public": true, "help": "Creates a new TileSprite object."}, {"name": "tilemap", "parameters": [{"default": null, "optional": true, "type": ["string"], "name": "key", "help": "The key of the tilemap data as stored in the Cache. If you're creating a blank map either leave this parameter out or pass `null`."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileWidth", "help": "The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileHeight", "help": "The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "10", "optional": true, "type": ["number"], "name": "width", "help": "The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}, {"default": "10", "optional": true, "type": ["number"], "name": "height", "help": "The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created tilemap object.", "types": ["Phaser.Tilemap"]}, "protected": false, "static": false, "inherited": false, "line": 375, "public": true, "help": "Creates a new Phaser.Tilemap object. The map can either be populated with data from a Tiled JSON file or from a CSV file.\\nTo do this pass the Cache key as the first parameter. When using Tiled data you need only provide the key.\\nWhen using CSV data you must provide the key and the tileWidth and tileHeight parameters.\\nIf creating a blank tilemap to be populated later, you can either specify no parameters at all and then use `Tilemap.create` or pass the map and tile dimensions here.\\nNote that all Tilemaps use a base tile size to calculate dimensions from, but that a TilemapLayer may have its own unique tile size that overrides it."}, {"name": "tween", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "obj", "help": "Object the tween will be run on."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created Phaser.Tween object.", "types": ["Phaser.Tween"]}, "protected": false, "static": false, "inherited": false, "line": 88, "public": true, "help": "Create a tween on a specific object. The object can be any JavaScript object or Phaser object such as Sprite."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "plugins", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "An array of all the plugins being managed by this PluginManager.", "public": true, "help": ""}], "private": [{"name": "_i", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_len", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "The Plugin Manager is responsible for the loading, running and unloading of Phaser Plugins.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.PluginManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["object", "Phaser.Plugin"], "name": "plugin", "help": "The Plugin to add into the PluginManager. This can be a function or an existing object."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the Plugin.init method."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Plugin that was added to the manager.", "types": ["Phaser.Plugin"]}, "protected": false, "static": false, "inherited": false, "line": 53, "public": true, "help": "Add a new Plugin into the PluginManager.\\nThe Plugin must have 2 properties: game and parent. Plugin.game is set to the game reference the PluginManager uses, and parent is set to the PluginManager."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 277, "public": true, "help": "Clear down this PluginManager, calls destroy on every plugin and nulls out references."}, {"name": "postRender", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 258, "public": true, "help": "Post-render is called after the Game Renderer and State.render have run.\\nIt only calls plugins who have visible=true."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 218, "public": true, "help": "PostUpdate is the last thing to be called before the world render.\\nIn particular, it is called after the world postUpdate, which means the camera has been adjusted.\\nIt only calls plugins who have active=true."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 177, "public": true, "help": "Pre-update is called at the very start of the update cycle, before any other subsystems have been updated (including Physics).\\nIt only calls plugins who have active=true."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Plugin"], "name": "plugin", "help": "The plugin to be removed."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 135, "public": true, "help": "Remove a Plugin from the PluginManager. It calls Plugin.destroy on the plugin before removing it from the manager."}, {"name": "removeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 157, "public": true, "help": "Remove all Plugins from the PluginManager. It calls Plugin.destroy on every plugin before removing it from the manager."}, {"name": "render", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 238, "public": true, "help": "Render is called right after the Game Renderer completes, but before the State.render.\\nIt only calls plugins who have visible=true."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 197, "public": true, "help": "Update is called after all the core subsystems (Input, Tweens, Sound, etc) and the State have updated, but before the render.\\nIt only calls plugins who have active=true."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "assetURLs", "default": null, "type": ["array string"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": true, "help": "The array of asset URLs that are going to be loaded"}, {"name": "crossorigin", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "Whether the requests should be treated as cross origin"}, {"name": "loadersByType", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "Maps file extension to loader types"}], "private": []}, "class": {"help": "A Class that loads a bunch of images / sprite sheet / bitmap font files. Once the\\nassets have been loaded they are added to the PIXI Texture cache and can be accessed\\neasily through PIXI.Texture.fromImage() and PIXI.Sprite.fromImage()\\nWhen all items have been loaded this class will dispatch a 'onLoaded' event\\nAs each individual item is loaded this class will dispatch a 'onProgress' event\\n\\nsupported. Supported image formats include 'jpeg', 'jpg', 'png', 'gif'. Supported\\nsprite sheet data formats only include 'JSON' at this time. Supported bitmap font\\ndata formats include 'xml' and 'fnt'.", "parameters": [{"default": null, "optional": false, "type": ["array string"], "name": "assetURLs", "help": "An array of image/sprite sheet urls that you would like loaded"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.AssetLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "_getDataType", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "str", "help": "the name of the asset"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 80, "public": true, "help": "Given a filename, returns its extension."}, {"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 112, "public": true, "help": "Starts loading the assets sequentially"}], "private": [{"name": "onAssetLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 149, "public": false, "help": "Invoked after each file is loaded"}]}}, {"properties": {"protected": [], "public": [{"name": "currentFrame", "default": null, "type": ["Phaser.Frame"], "private": false, "readOnly": false, "protected": false, "line": 125, "inlineHelp": "The currently displayed frame of the Animation.", "public": true, "help": ""}, {"name": "delay", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The delay in ms between each frame of the Animation, based on the given frameRate.", "public": true, "help": ""}, {"name": "enableUpdate", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 708, "inlineHelp": "Gets or sets if this animation will dispatch the onUpdate events upon changing frame.", "public": true, "help": ""}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 647, "inlineHelp": "Gets or sets the current frame index and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameTotal", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 635, "inlineHelp": "The total number of frames in the currently loaded FrameData, or -1 if no FrameData is loaded.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "isFinished", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "The finished state of the Animation. Set to true once playback completes, false during playback.", "public": true, "help": ""}, {"name": "isPaused", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "The paused state of the Animation.", "public": true, "help": ""}, {"name": "isPlaying", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "The playing state of the Animation. Set to false once playback completes, true during playback.", "public": true, "help": ""}, {"name": "killOnComplete", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Should the parent of this Animation be killed when the animation completes?", "public": true, "help": ""}, {"name": "loop", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "The loop state of the Animation.", "public": true, "help": ""}, {"name": "loopCount", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "The number of times the animation has looped since it was last started.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "The user defined name given to this Animation.", "public": true, "help": ""}, {"name": "onComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 141, "inlineHelp": "This event is dispatched when this Animation completes playback. If the animation is set to loop this is never fired, listen for onAnimationLoop instead.", "public": true, "help": ""}, {"name": "onLoop", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 146, "inlineHelp": "This event is dispatched when this Animation loops.", "public": true, "help": ""}, {"name": "onStart", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "This event is dispatched when this Animation starts playback.", "public": true, "help": ""}, {"name": "onUpdate", "default": "null", "type": ["Phaser.Signal", "null"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "This event is dispatched when the Animation changes frame. By default this event is disabled due to its intensive nature. Enable it with: `Animation.enableUpdate = true`.", "public": true, "help": ""}, {"name": "paused", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 600, "inlineHelp": "Gets and sets the paused state of this Animation.", "public": true, "help": ""}, {"name": "speed", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 685, "inlineHelp": "Gets or sets the current speed of the animation in frames per second. Changing this in a playing animation will take effect from the next frame. Minimum value is 1.", "public": true, "help": ""}], "private": [{"name": "_frameData", "default": null, "type": ["Phaser.FrameData"], "private": true, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "The FrameData the Animation uses.", "public": false, "help": ""}, {"name": "_frameDiff", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "", "public": false, "help": ""}, {"name": "_frameIndex", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "", "public": false, "help": ""}, {"name": "_frameSkip", "default": "1", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "", "public": false, "help": ""}, {"name": "_frames", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": false, "help": ""}, {"name": "_parent", "default": null, "type": ["Phaser.Sprite"], "private": true, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "A reference to the parent Sprite that owns this Animation.", "public": false, "help": ""}, {"name": "_pauseStartTime", "default": "0", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "The time the animation paused.", "public": false, "help": ""}]}, "class": {"help": "An Animation instance contains a single animation and the controls to play it.\\nIt is created by the AnimationManager, consists of Animation.Frame objects and belongs to a single Game Object such as a Sprite.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "parent", "help": "A reference to the owner of this Animation."}, {"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The unique name for this animation, used in playback commands."}, {"default": null, "optional": false, "type": ["Phaser.FrameData"], "name": "frameData", "help": "The FrameData object that contains all frames used by this Animation."}, {"default": null, "optional": false, "type": ["array number", "array string"], "name": "frames", "help": "An array of numbers or strings indicating which frames to play in which order."}, {"default": "60", "optional": true, "type": ["number"], "name": "frameRate", "help": "The speed at which the animation should play. The speed is given in frames per second."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the animation is looped or just plays once."}, {"default": null, "optional": false, "type": ["boolean"], "name": "loop", "help": "Should this animation loop when it reaches the end or play through once."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Animation"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "complete", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 575, "public": true, "help": "Called internally when the animation finishes playback.\\nSets the isPlaying and isFinished states and dispatches the onAnimationComplete event if it exists on the parent and local onComplete event."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 546, "public": true, "help": "Cleans up this animation ready for deletion. Nulls all values and references."}, {"name": "generateFrameNames", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "prefix", "help": "The start of the filename. If the filename was 'explosion_0001-large' the prefix would be 'explosion_'."}, {"default": null, "optional": false, "type": ["number"], "name": "start", "help": "The number to start sequentially counting from. If your frames are named 'explosion_0001' to 'explosion_0034' the start is 1."}, {"default": null, "optional": false, "type": ["number"], "name": "stop", "help": "The number to count to. If your frames are named 'explosion_0001' to 'explosion_0034' the stop value is 34."}, {"default": "''", "optional": true, "type": ["string"], "name": "suffix", "help": "The end of the filename. If the filename was 'explosion_0001-large' the prefix would be '-large'."}, {"default": "0", "optional": true, "type": ["number"], "name": "zeroPad", "help": "The number of zeroes to pad the min and max values with. If your frames are named 'explosion_0001' to 'explosion_0034' then the zeroPad is 4."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of framenames.", "types": ["array"]}, "protected": false, "static": true, "inherited": false, "line": 746, "public": true, "help": "Really handy function for when you are creating arrays of animation data but it's using frame names and not numbers.\\nFor example imagine you've got 30 frames named: 'explosion_0001-large' to 'explosion_0030-large'\\nYou could use this function to generate those by doing: Phaser.Animation.generateFrameNames('explosion_', 1, 30, '-large', 4);"}, {"name": "next", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "quantity", "help": "The number of frames to advance."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 436, "public": true, "help": "Advances by the given number of frames in the Animation, taking the loop value into consideration."}, {"name": "onPause", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 333, "public": true, "help": "Called when the Game enters a paused state."}, {"name": "onResume", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 347, "public": true, "help": "Called when the Game resumes from a paused state."}, {"name": "play", "parameters": [{"default": "null", "optional": true, "type": ["number"], "name": "frameRate", "help": "The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "killOnComplete", "help": "If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed."}], "inheritedFrom": "", "private": false, "returns": {"help": "- A reference to this Animation instance.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": false, "line": 165, "public": true, "help": "Plays this animation."}, {"name": "previous", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "quantity", "help": "The number of frames to move back."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 485, "public": true, "help": "Moves backwards the given number of frames in the Animation, taking the loop value into consideration."}, {"name": "restart", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 219, "public": true, "help": "Sets this animation back to the first frame and restarts the animation."}, {"name": "setFrame", "parameters": [{"default": null, "optional": true, "type": ["string", "number"], "name": "frameId", "help": "The identifier of the frame to set. Can be the name of the frame, the sprite index of the frame, or the animation-local frame index."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "useLocalFrameIndex", "help": "If you provide a number for frameId, should it use the numeric indexes of the frameData, or the 0-indexed frame index local to the animation."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 246, "public": true, "help": "Sets this animations playback to a given frame with the given ID."}, {"name": "stop", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "resetFrame", "help": "If true after the animation stops the currentFrame value will be set to the first frame in this animation."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "dispatchComplete", "help": "Dispatch the Animation.onComplete and parent.onAnimationComplete events?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 305, "public": true, "help": "Stops playback of this animation and set it to a finished state. If a resetFrame is provided it will stop playback and set frame to the first in the animation.\\nIf `dispatchComplete` is true it will dispatch the complete events, otherwise they'll be ignored."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 361, "public": true, "help": "Updates this animation. Called automatically by the AnimationManager."}, {"name": "updateFrameData", "parameters": [{"default": null, "optional": false, "type": ["Phaser.FrameData"], "name": "frameData", "help": "The FrameData object that contains all frames used by this Animation."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 534, "public": true, "help": "Changes the FrameData object this Animation is using."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "circleTileProjections", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "All of the collision response handlers.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 68, "inlineHelp": "The height.", "public": true, "help": ""}, {"name": "oldpos", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "The position of this object in the previous update.", "public": true, "help": ""}, {"name": "pos", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "The position of this object.", "public": true, "help": ""}, {"name": "radius", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The radius of this circle shape.", "public": true, "help": ""}, {"name": "system", "default": null, "type": ["Phaser.Physics.Ninja"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "A reference to the physics system.", "public": true, "help": ""}, {"name": "velocity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "The velocity of this object.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 62, "inlineHelp": "The width.", "public": true, "help": ""}, {"name": "xw", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 56, "inlineHelp": "Half the height.", "public": true, "help": ""}], "private": [{"name": "oH", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "oV", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Internal var.", "public": false, "help": ""}]}, "class": {"help": "Ninja Physics Circle constructor.\\nNote: This class could be massively optimised and reduced in size. I leave that challenge up to you.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Body"], "name": "body", "help": "The body that owns this shape."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to create this shape at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to create this shape at."}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of this Circle."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Ninja.Circle"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "collideCircleVsTile", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if they collide, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 255, "public": true, "help": "Collides this Circle with a Tile."}, {"name": "collideWorldBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 212, "public": true, "help": "Collides this Circle against the world bounds."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 2617, "public": true, "help": "Destroys this Circle's reference to Body and System"}, {"name": "integrate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 117, "public": true, "help": "Updates this Circles position."}, {"name": "projCircle_22DegB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1731, "public": true, "help": "Resolves 22 Degree tile collision."}, {"name": "projCircle_22DegS", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1439, "public": true, "help": "Resolves 22 Degree tile collision."}, {"name": "projCircle_45Deg", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 459, "public": true, "help": "Resolves 45 Degree tile collision."}, {"name": "projCircle_67DegB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 2319, "public": true, "help": "Resolves 67 Degree tile collision."}, {"name": "projCircle_67DegS", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 2034, "public": true, "help": "Resolves 67 Degree tile collision."}, {"name": "projCircle_Concave", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 729, "public": true, "help": "Resolves Concave tile collision."}, {"name": "projCircle_Convex", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 963, "public": true, "help": "Resolves Convex tile collision."}, {"name": "projCircle_Full", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 347, "public": true, "help": "Resolves Full tile collision."}, {"name": "projCircle_Half", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1205, "public": true, "help": "Resolves Half tile collision."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context to render to."}, {"default": null, "optional": false, "type": ["number"], "name": "xOffset", "help": "X offset from circle's position to render at."}, {"default": null, "optional": false, "type": ["number"], "name": "yOffset", "help": "Y offset from circle's position to render at."}, {"default": null, "optional": false, "type": ["string"], "name": "color", "help": "color of the debug shape to be rendered. (format is css color string)."}, {"default": null, "optional": false, "type": ["boolean"], "name": "filled", "help": "Render the shape as solid (true) or hollow (false)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 2632, "public": true, "help": "Render this circle for debugging purposes."}, {"name": "reportCollisionVsWorld", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "px", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "py", "help": "The tangent velocity"}, {"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "Collision normal"}, {"default": null, "optional": false, "type": ["number"], "name": "obj", "help": "Object this Circle collided with"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 142, "public": true, "help": "Process a world collision and apply the resulting forces."}, {"name": "resolveCircleTile", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Penetration depth on the x axis."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Penetration depth on the y axis."}, {"default": null, "optional": false, "type": ["number"], "name": "oH", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["number"], "name": "oV", "help": "Grid / voronoi region."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Circle"], "name": "obj", "help": "The Circle involved in the collision."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Tile"], "name": "t", "help": "The Tile involved in the collision."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result of the collision.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 322, "public": true, "help": "Resolves tile collision."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": [{"name": "c", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "s0", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "s1", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "s2", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Internal var.", "public": false, "help": ""}]}, "class": {"help": "An extremely useful repeatable random data generator.\\nBased on Nonsense by Josh Faul https://github.com/jocafa/Nonsense.\\nRandom number generator from http://baagoe.org/en/wiki/Better_random_numbers_for_javascript", "parameters": [{"default": null, "optional": true, "type": ["array"], "name": "seeds", "help": "An array of values to use as the seed."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.RandomDataGenerator"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "angle", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A random number between -180 and 180.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 285, "public": true, "help": "Returns a random angle between -180 and 180."}, {"name": "between", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value in the range."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value in the range."}], "inheritedFrom": "", "private": false, "returns": {"help": "A random number between min and max.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 188, "public": true, "help": "Returns a random integer between and including min and max.\\nThis method is an alias for RandomDataGenerator.integerInRange."}, {"name": "frac", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A random real number between 0 and 1.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 147, "public": true, "help": "Returns a random real number between 0 and 1."}, {"name": "integer", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A random integer between 0 and 2^32.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 135, "public": true, "help": "Returns a random integer between 0 and 2^32."}, {"name": "integerInRange", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value in the range."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value in the range."}], "inheritedFrom": "", "private": false, "returns": {"help": "A random number between min and max.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 173, "public": true, "help": "Returns a random integer between and including min and max."}, {"name": "normal", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A random real number between -1 and 1.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 214, "public": true, "help": "Returns a random real number between -1 and 1."}, {"name": "pick", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "ary", "help": "An Array to pick a random member of."}], "inheritedFrom": "", "private": false, "returns": {"help": "A random member of the array.", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 246, "public": true, "help": "Returns a random member of `array`."}, {"name": "real", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A random real number between 0 and 2^32.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 159, "public": true, "help": "Returns a random real number between 0 and 2^32."}, {"name": "realInRange", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value in the range."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value in the range."}], "inheritedFrom": "", "private": false, "returns": {"help": "A random number between min and max.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 202, "public": true, "help": "Returns a random real number between min and max."}, {"name": "sow", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "seeds", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 77, "public": true, "help": "Reset the seed of the random data generator."}, {"name": "timestamp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value in the range."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value in the range."}], "inheritedFrom": "", "private": false, "returns": {"help": "A random timestamp between min and max.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 273, "public": true, "help": "Returns a random timestamp between min and max, or between the beginning of 2000 and the end of 2020 if min and max aren't specified."}, {"name": "uuid", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A valid RFC4122 version4 ID hex string", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 226, "public": true, "help": "Returns a valid RFC4122 version4 ID hex string from https://gist.github.com/1308368"}, {"name": "weightedPick", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "ary", "help": "An Array to pick a random member of."}], "inheritedFrom": "", "private": false, "returns": {"help": "A random member of the array.", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 259, "public": true, "help": "Returns a random member of `array`, favoring the earlier entries."}], "private": [{"name": "hash", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "data", "help": ""}], "inheritedFrom": "", "private": true, "returns": {"help": "hashed value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 108, "public": false, "help": "Internal method that creates a seed hash."}, {"name": "rnd", "parameters": [], "inheritedFrom": "", "private": true, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 59, "public": false, "help": "Private random helper."}]}}, {"properties": {"protected": [], "public": [{"name": "aspectRatio", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 186, "inlineHelp": "The aspect ratio of the scaled game.", "public": true, "help": ""}, {"name": "bounds", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": true, "protected": false, "line": 180, "inlineHelp": "The bounds of the scaled game. The x/y will match the offset of the canvas element and the width/height the scaled width and height.", "public": true, "help": ""}, {"name": "enterFullScreen", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 134, "inlineHelp": "The event that is dispatched when the browser enters full screen mode (if it supports the FullScreen API).", "public": true, "help": ""}, {"name": "enterIncorrectOrientation", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "The event that is dispatched when the browser enters an incorrect orientation, as defined by forceOrientation.", "public": true, "help": ""}, {"name": "enterLandscape", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "The event that is dispatched when the browser enters landscape orientation having been in portrait.", "public": true, "help": ""}, {"name": "enterPortrait", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The event that is dispatched when the browser enters portrait orientation having been in landscape.", "public": true, "help": ""}, {"name": "event-", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 197, "inlineHelp": " The native browser events from full screen API changes.", "public": true, "help": ""}, {"name": "forceLandscape", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "Set to `true` if the game should only run in a landscape orientation.", "public": true, "help": ""}, {"name": "forcePortrait", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "Set to `true` if the game should only run in a portrait orientation.", "public": true, "help": ""}, {"name": "fullScreenTarget", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "", "public": true, "help": "This is the DOM element that will have the Full Screen mode called on it. It defaults to the game canvas, but can be retargetted to any valid DOM element.\\nIf you adjust this property it's up to you to see it has the correct CSS applied, and that you have contained the game canvas correctly.\\nNote that if you use a scale property of EXACT_FIT then fullScreenTarget will have its width and height style set to 100%."}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "grid", "default": null, "type": ["Phaser.FlexGrid"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "EXPERIMENTAL: A responsive grid on which you can align game objects.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "Height of the game after calculation.", "public": true, "help": ""}, {"name": "incorrectOrientation", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "If `forceLandscape` or `forcePortrait` are true and the browser doesn't match that orientation this is set to `true`.", "public": true, "help": ""}, {"name": "isFullScreen", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 1130, "inlineHelp": "Returns true if the browser is in full screen mode, otherwise false.", "public": true, "help": ""}, {"name": "isLandscape", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 1156, "inlineHelp": "Returns true if the browser dimensions match a landscape display.", "public": true, "help": ""}, {"name": "isPortrait", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 1143, "inlineHelp": "Returns true if the browser dimensions match a portrait display.", "public": true, "help": ""}, {"name": "leaveFullScreen", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 139, "inlineHelp": "The event that is dispatched when the browser leaves full screen mode (if it supports the FullScreen API).", "public": true, "help": ""}, {"name": "leaveIncorrectOrientation", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "The event that is dispatched when the browser leaves an incorrect orientation, as defined by forceOrientation.", "public": true, "help": ""}, {"name": "margin", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 174, "inlineHelp": "If the game canvas is set to align by adjusting the margin, the margin calculation values are stored in this Point.", "public": true, "help": ""}, {"name": "maxHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "Maximum height the canvas should be scaled to (in pixels). If null it will scale to whatever height the browser can handle.", "public": true, "help": ""}, {"name": "maxIterations", "default": "5", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "The maximum number of times it will try to resize the canvas to fill the browser.", "public": true, "help": ""}, {"name": "maxWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "Maximum width the canvas should be scaled to (in pixels). If null it will scale to whatever width the browser can handle.", "public": true, "help": ""}, {"name": "minHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "Minimum height the canvas should be scaled to (in pixels).", "public": true, "help": ""}, {"name": "minWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Minimum width the canvas should be scaled to (in pixels).", "public": true, "help": ""}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "Holds the offset coordinates of the Game.canvas from the top-left of the browser window (used by Input and other classes)", "public": true, "help": ""}, {"name": "onResize", "default": "null", "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 232, "inlineHelp": "The callback that will be called each time a window.resize event happens or if set, the parent container resizes.", "public": true, "help": ""}, {"name": "onResizeContext", "default": "null", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 238, "inlineHelp": "The context in which the callback will be called.", "public": true, "help": ""}, {"name": "orientation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 144, "inlineHelp": "The orientation value of the game (as defined by window.orientation if set). 90 = landscape. 0 = portrait.", "public": true, "help": ""}, {"name": "pageAlignHorizontally", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "If you wish to align your game in the middle of the page then you can set this value to true.", "public": true, "help": "It will place a re-calculated margin-left pixel value onto the canvas element which is updated on orientation/resizing events.\\nIt doesn't care about any other DOM element that may be on the page, it literally just sets the margin."}, {"name": "pageAlignVertically", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "If you wish to align your game in the middle of the page then you can set this value to true.", "public": true, "help": "It will place a re-calculated margin-left pixel value onto the canvas element which is updated on orientation/resizing events.\\nIt doesn't care about any other DOM element that may be on the page, it literally just sets the margin."}, {"name": "parentIsWindow", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 208, "inlineHelp": "If the parent container of the game is the browser window, rather than a div, this is set to `true`.", "public": true, "help": ""}, {"name": "parentNode", "default": null, "type": ["object"], "private": false, "readOnly": true, "protected": false, "line": 214, "inlineHelp": "The fully parsed parent container of the game. If the parent is the browser window this will be `null`.", "public": true, "help": ""}, {"name": "parentScaleFactor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 220, "inlineHelp": "The scale of the game in relation to its parent container.", "public": true, "help": ""}, {"name": "scaleFactor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 162, "inlineHelp": "The scale factor based on the game dimensions vs. the scaled dimensions.", "public": true, "help": ""}, {"name": "scaleFactorInversed", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": true, "protected": false, "line": 168, "inlineHelp": "The inversed scale factor. The displayed dimensions divided by the game dimensions.", "public": true, "help": ""}, {"name": "scaleMode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1106, "inlineHelp": "The scaling method used by the ScaleManager.", "public": true, "help": ""}, {"name": "sourceAspectRatio", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 192, "inlineHelp": "The aspect ratio (width / height) of the original game dimensions.", "public": true, "help": ""}, {"name": "trackParentInterval", "default": "2000", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 226, "inlineHelp": "The interval (in ms) upon which the ScaleManager checks if the parent has changed dimensions. Only applies if scaleMode = RESIZE and the game is contained within another html element.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "Width of the game after calculation.", "public": true, "help": ""}], "private": [{"name": "_check", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 262, "inlineHelp": "Cached size interval var.", "public": false, "help": ""}, {"name": "_height", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 256, "inlineHelp": "Cached game height for full screen mode.", "public": false, "help": ""}, {"name": "_nextParentCheck", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 268, "inlineHelp": "The time to run the next parent bounds check.", "public": false, "help": ""}, {"name": "_parentBounds", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 274, "inlineHelp": "The cached result of getBoundingClientRect from the parent.", "public": false, "help": ""}, {"name": "_width", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 250, "inlineHelp": "Cached game width for full screen mode.", "public": false, "help": ""}, {"name": "scaleMode", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 244, "inlineHelp": "The current scaling method being used.", "public": false, "help": ""}]}, "class": {"help": "The ScaleManager object is responsible for helping you manage the scaling, resizing and alignment of your game within the browser.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number", "string"], "name": "width", "help": "The width of the game."}, {"default": null, "optional": false, "type": ["number", "string"], "name": "height", "help": "The height of the game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.ScaleManager"}, "consts": [{"line": 289, "type": "number", "name": "EXACT_FIT", "help": ""}, {"line": 295, "type": "number", "name": "NO_SCALE", "help": ""}, {"line": 307, "type": "number", "name": "RESIZE", "help": ""}, {"line": 301, "type": "number", "name": "SHOW_ALL", "help": ""}], "methods": {"protected": [{"name": "fullScreenChange", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The fullscreenchange event"}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 1030, "public": false, "help": "Called automatically when the browser enters of leaves full screen mode."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 506, "public": false, "help": "The ScaleManager.preUpdate is called automatically by the core Game loop."}], "static": [], "public": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 421, "public": true, "help": "Calculates and sets the game dimensions based on the given width and height."}, {"name": "checkOrientation", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The orientationchange event data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 636, "public": true, "help": "window.orientationchange event handler."}, {"name": "checkOrientationState", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 597, "public": true, "help": "Checks if the browser is in the correct orientation for your game (if forceLandscape or forcePortrait have been set)"}, {"name": "checkResize", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The resize event data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 664, "public": true, "help": "window.resize event handler."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1084, "public": true, "help": "Destroys the ScaleManager and removes any event listeners."}, {"name": "forceOrientation", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "forceLandscape", "help": "true if the game should run in landscape mode only."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "forcePortrait", "help": "true if the game should run in portrait mode only."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 583, "public": true, "help": "If you need your game to run in only one orientation you can force that to happen."}, {"name": "parseConfig", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "config", "help": "The game configuration object."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 317, "public": true, "help": "Parses the Game configuration object."}, {"name": "refresh", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 732, "public": true, "help": "Re-calculate scale mode and update screen size. This only applies if ScaleMode is not set to RESIZE."}, {"name": "setExactFit", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 956, "public": true, "help": "Sets the width and height values of the canvas, no larger than the maxWidth/Height."}, {"name": "setMaximum", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 930, "public": true, "help": "Sets this.width equal to window.innerWidth and this.height equal to window.innerHeight."}, {"name": "setMinMax", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "minWidth", "help": "The minimum width the game is allowed to scale down to."}, {"default": null, "optional": false, "type": ["number"], "name": "minHeight", "help": "The minimum height the game is allowed to scale down to."}, {"default": null, "optional": false, "type": ["number"], "name": "maxWidth", "help": "The maximum width the game is allowed to scale up to."}, {"default": null, "optional": false, "type": ["number"], "name": "maxHeight", "help": "The maximum height the game is allowed to scale up to."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 483, "public": true, "help": "Set the ScaleManager min and max dimensions in one single callback."}, {"name": "setResizeCallback", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called each time a window.resize event happens or if set, the parent container resizes."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context in which the callback will be called."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 467, "public": true, "help": "Sets the callback that will be called when the window resize event occurs, or if set the parent container changes dimensions.\\nUse this to handle responsive game layout options.\\nNote that the callback will only be called if the ScaleManager.scaleMode is set to RESIZE."}, {"name": "setShowAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 942, "public": true, "help": "Calculates the multiplier needed to scale the game proportionally."}, {"name": "setSize", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 843, "public": true, "help": "Sets the canvas style width and height values based on minWidth/Height and maxWidth/Height."}, {"name": "setupScale", "parameters": [{"default": null, "optional": false, "type": ["number", "string"], "name": "width", "help": "The width of the game."}, {"default": null, "optional": false, "type": ["number", "string"], "name": "height", "help": "The height of the game."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 343, "public": true, "help": "Calculates and sets the game dimensions based on the given width and height."}, {"name": "startFullScreen", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "antialias", "help": "You can toggle the anti-alias feature of the canvas before jumping in to full screen (false = retain pixel art, true = smooth art)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 988, "public": true, "help": "Tries to enter the browser into full screen mode.\\nPlease note that this needs to be supported by the web browser and isn't the same thing as setting your game to fill the browser."}, {"name": "stopFullScreen", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1018, "public": true, "help": "Stops full screen mode if the browser is in it."}, {"name": "updateDimensions", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The new width of the parent container."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The new height of the parent container."}, {"default": null, "optional": false, "type": ["boolean"], "name": "resize", "help": "True if the renderer should be resized, otherwise false to just update the internal vars."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 541, "public": true, "help": "Called automatically when the game parent dimensions change."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "fragmentSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The fragment shader."}, {"name": "gl", "default": null, "type": ["PIXI.WebGLContext"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": ""}, {"name": "program", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The WebGL program."}, {"name": "vertexSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "", "public": true, "help": "The vertex shader."}], "private": [{"name": "_UID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 17, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.StripShader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 116, "public": true, "help": "Destroys the shader."}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 85, "public": true, "help": "Initialises the shader."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseUrl", "default": null, "type": ["string"], "private": false, "readOnly": true, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "[read-only] The base url of the bitmap font data"}, {"name": "crossorigin", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "", "public": true, "help": "Whether the requests should be treated as cross origin"}, {"name": "loaded", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 50, "inlineHelp": "", "public": true, "help": "[read-only] Whether the data has loaded yet"}, {"name": "url", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "The url of the bitmap font data"}], "private": []}, "class": {"help": "The json file loader is used to load in JSON data and parse it\\nWhen loaded this class will dispatch a 'loaded' event\\nIf loading fails this class will dispatch an 'error' event", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url of the JSON file"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.JsonLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 64, "public": true, "help": "Loads the JSON data"}], "private": [{"name": "onError", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 182, "public": false, "help": "Invoked if an error occurs."}, {"name": "onJSONLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 104, "public": false, "help": "Invoked when the JSON file is loaded."}, {"name": "onLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 168, "public": false, "help": "Invoked when the json file has loaded."}]}}, {"properties": {"protected": [], "public": [{"name": "CanvasMaskManager", "default": null, "type": ["PIXI.CanvasMaskManager"], "private": false, "readOnly": false, "protected": false, "line": 135, "inlineHelp": "", "public": true, "help": "Instance of a PIXI.CanvasMaskManager, handles masking when using the canvas renderer"}, {"name": "clearBeforeRender", "default": false, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\\nIf the Stage is NOT transparent Pixi will use a canvas sized fillRect operation every frame to set the canvas background color.\\nIf the Stage is transparent Pixi will use clearRect to clear the canvas every frame.\\nDisable this by setting this to false. For example if your game has a canvas filling background image you often don't need this set."}, {"name": "context", "default": null, "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "", "public": true, "help": "The canvas 2d context that everything is drawn with"}, {"name": "count", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 128, "inlineHelp": "", "public": true, "help": "Internal var."}, {"name": "height", "default": "600", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The height of the canvas view"}, {"name": "refresh", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "", "public": true, "help": "Boolean flag controlling canvas refresh."}, {"name": "renderSession", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 142, "inlineHelp": "", "public": true, "help": "The render session is just a bunch of parameter used for rendering"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "The resolution of the canvas."}, {"name": "transparent", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "", "public": true, "help": "Whether the render view is transparent"}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "The renderer type."}, {"name": "view", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "", "public": true, "help": "The canvas element that everything is drawn to."}, {"name": "width", "default": "800", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 82, "inlineHelp": "", "public": true, "help": "The width of the canvas view"}], "private": []}, "class": {"help": "The CanvasRenderer draws the Stage and all its content onto a 2d canvas. This renderer should be used for browsers that do not support webGL.\\nDon't forget to add the CanvasRenderer.view to your DOM or you will not see anything :)", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "[width=800]", "help": "the width of the canvas view"}, {"default": null, "optional": false, "type": ["number"], "name": "[height=600]", "help": "the height of the canvas view"}, {"default": null, "optional": false, "type": ["object"], "name": "[options]", "help": "The optional renderer parameters"}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "[options.view]", "help": "the canvas to use as a view, optional"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.transparent=false]", "help": "If the render view is transparent, default false"}, {"default": null, "optional": false, "type": ["number"], "name": "[options.resolution=1]", "help": "the resolution of the renderer retina would be 2"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.clearBeforeRender=true]", "help": "This sets if the CanvasRenderer will clear the canvas or not before the new render pass."}], "static": false, "constructor": true, "extends": "", "name": "PIXI.CanvasRenderer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "render", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the Stage element to be rendered"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 180, "public": true, "help": "Renders the Stage to this canvas view"}, {"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the new width of the canvas view"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the new height of the canvas view"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 230, "public": true, "help": "Resizes the canvas view to the specified width and height"}], "private": [{"name": "mapBlendModes", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 263, "public": false, "help": "Maps Pixi blend modes to canvas blend modes."}, {"name": "renderDisplayObject", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "The displayObject to render"}, {"default": null, "optional": false, "type": ["CanvasRenderingContext2D"], "name": "context", "help": "the context 2d method of the canvas"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 250, "public": false, "help": "Renders a display object"}]}}, {"properties": {"protected": [{"name": "data", "default": null, "type": ["p2.Body"], "private": false, "readOnly": false, "protected": true, "line": 59, "inlineHelp": "The p2 Body data.", "public": false, "help": ""}], "public": [{"name": "DYNAMIC", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1284, "inlineHelp": "", "public": true, "help": "Dynamic body. Dynamic bodies body can move and respond to collisions and forces."}, {"name": "KINEMATIC", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1300, "inlineHelp": "", "public": true, "help": "Kinematic body. Kinematic bodies only moves according to its .velocity, and does not respond to collisions or force."}, {"name": "STATIC", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1292, "inlineHelp": "", "public": true, "help": "Static body. Static bodies do not move, and they do not respond to forces or collision."}, {"name": "allowSleep", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1401, "inlineHelp": "", "public": true, "help": ""}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1428, "inlineHelp": "The angle of this Body in degrees.", "public": true, "help": "The angle of the Body in degrees from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement Body.angle = 450 is the same as Body.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Body.rotation instead. Working in radians is faster as it doesn't have to convert values."}, {"name": "angularDamping", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1449, "inlineHelp": "The angular damping acting acting on the body.", "public": true, "help": "Damping is specified as a value between 0 and 1, which is the proportion of velocity lost per second."}, {"name": "angularForce", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1469, "inlineHelp": "The angular force acting on the body.", "public": true, "help": ""}, {"name": "angularVelocity", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1489, "inlineHelp": "The angular velocity of the body.", "public": true, "help": ""}, {"name": "collideWorldBounds", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1752, "inlineHelp": "Should the Body collide with the World bounds?", "public": true, "help": "A Body can be set to collide against the World bounds automatically if this is set to true. Otherwise it will leave the World.\\nNote that this only applies if your World has bounds! The response to the collision should be managed via CollisionMaterials.\\nAlso note that when you set this it will only effect Body shapes that already exist. If you then add further shapes to your Body\\nafter setting this it will *not* proactively set them to collide with the bounds."}, {"name": "collidesWith", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "Array of CollisionGroups that this Bodies shapes collide with.", "public": true, "help": ""}, {"name": "damping", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1510, "inlineHelp": "The linear damping acting on the body in the velocity direction.", "public": true, "help": "Damping is specified as a value between 0 and 1, which is the proportion of velocity lost per second."}, {"name": "debug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1718, "inlineHelp": "Enable or disable debug drawing of this body", "public": true, "help": ""}, {"name": "debugBody", "default": null, "type": ["Phaser.Physics.P2.BodyDebug"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "Reference to the debug body.", "public": true, "help": ""}, {"name": "dynamic", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1339, "inlineHelp": "Returns true if the Body is dynamic. Setting Body.dynamic to 'false' will make it static.", "public": true, "help": ""}, {"name": "fixedRotation", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1530, "inlineHelp": "", "public": true, "help": ""}, {"name": "force", "default": null, "type": ["Phaser.Physics.P2.InversePointProxy"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The force applied to the body.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "gravity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "A locally applied gravity force to the Body. Applied directly before the world step. NOTE: Not currently implemented.", "public": true, "help": ""}, {"name": "id", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1704, "inlineHelp": "The Body ID. Each Body that has been added to the World has a unique ID.", "public": true, "help": ""}, {"name": "inertia", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1553, "inlineHelp": "The inertia of the body around the Z axis..", "public": true, "help": ""}, {"name": "kinematic", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1372, "inlineHelp": "Returns true if the Body is kinematic. Setting Body.kinematic to 'false' will make it static.", "public": true, "help": ""}, {"name": "mass", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1573, "inlineHelp": "", "public": true, "help": ""}, {"name": "motionState", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1597, "inlineHelp": "The type of motion this body has. Should be one of: Body.STATIC (the body does not move), Body.DYNAMIC (body can move and respond to collisions) and Body.KINEMATIC (only moves according to its .velocity).", "public": true, "help": ""}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "The offset of the Physics Body from the Sprite x/y position.", "public": true, "help": ""}, {"name": "onBeginContact", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "", "public": true, "help": "Dispatched when a first contact is created between shapes in two bodies. This event is fired during the step, so collision has already taken place.\\nThe event will be sent 4 parameters: The body it is in contact with, the shape from this body that caused the contact, the shape from the contact body and the contact equation data array."}, {"name": "onEndContact", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "", "public": true, "help": "Dispatched when contact ends between shapes in two bodies. This event is fired during the step, so collision has already taken place.\\nThe event will be sent 3 parameters: The body it is in contact with, the shape from this body that caused the contact and the shape from the contact body."}, {"name": "removeNextStep", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "To avoid deleting this body during a physics step, and causing all kinds of problems, set removeNextStep to true to have it removed in the next preUpdate.", "public": true, "help": ""}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1623, "inlineHelp": "The angle of this Body in radians.", "public": true, "help": "The angle of the Body in radians.\\nIf you wish to work in degrees instead of radians use the Body.angle property instead. Working in radians is faster as it doesn't have to convert values."}, {"name": "sleepSpeedLimit", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1643, "inlineHelp": ".", "public": true, "help": ""}, {"name": "sprite", "default": null, "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "Reference to the parent Sprite.", "public": true, "help": ""}, {"name": "static", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1306, "inlineHelp": "Returns true if the Body is static. Setting Body.static to 'false' will make it dynamic.", "public": true, "help": ""}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The type of physics system this body belongs to.", "public": true, "help": ""}, {"name": "velocity", "default": null, "type": ["Phaser.Physics.P2.InversePointProxy"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "The velocity of the body. Set velocity.x to a negative value to move to the left, position to the right. velocity.y negative values move up, positive move down.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "Local reference to the P2 World.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1663, "inlineHelp": "The x coordinate of this Body.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1683, "inlineHelp": "The y coordinate of this Body.", "public": true, "help": ""}], "private": [{"name": "_bodyCallbackContext", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 135, "inlineHelp": "Array of Grouo callback contexts.", "public": false, "help": ""}, {"name": "_bodyCallbacks", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "Array of Body callbacks.", "public": false, "help": ""}, {"name": "_collideWorldBounds", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "Internal var that determines if this Body collides with the world bounds or not.", "public": false, "help": ""}, {"name": "_groupCallbacks", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "Array of Group callbacks.", "public": false, "help": ""}]}, "class": {"help": "The Physics Body is typically linked to a single Sprite and defines properties that determine how the physics body is simulated.\\nThese properties affect how the body reacts to forces, what forces it generates on itself (to simulate friction), and how it reacts to collisions in the scene.\\nIn most cases, the properties are used to simulate physical effects. Each body also has its own property values that determine exactly how it reacts to forces and collisions in the scene.\\nBy default a single Rectangle shape is added to the Body that matches the dimensions of the parent Sprite. See addShape, removeShape, clearShapes to add extra shapes around the Body.\\nNote: When bound to a Sprite to avoid single-pixel jitters on mobile devices we strongly recommend using Sprite sizes that are even on both axis, i.e. 128x128 not 127x127.\\nNote: When a game object is given a P2 body it has its anchor x/y set to 0.5, so it becomes centered.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}, {"default": null, "optional": true, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The Sprite object this physics body belongs to."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate of this Body."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate of this Body."}, {"default": "1", "optional": true, "type": ["number"], "name": "mass", "help": "The default mass of this Body (0 = static)."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.Body"}, "consts": [], "methods": {"protected": [{"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 670, "public": false, "help": "Internal method. This is called directly before the sprites are sent to the renderer and after the update function has finished."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 654, "public": false, "help": "Internal method. This is called directly before the sprites are sent to the renderer and after the update function has finished."}], "static": [], "public": [{"name": "addCapsule", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "length", "help": "The distance between the end points in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "Radius of the capsule in pixels."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Capsule shape that was added to the Body.", "types": ["p2.Capsule"]}, "protected": false, "static": false, "inherited": false, "line": 926, "public": true, "help": "Adds a Capsule shape to this Body.\\nYou can control the offset from the center of the body and the rotation."}, {"name": "addCircle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of this circle (in pixels)"}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Circle shape that was added to the Body.", "types": ["p2.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 833, "public": true, "help": "Adds a Circle shape to this Body. You can control the offset from the center of the body and the rotation."}, {"name": "addFixture", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "fixtureData", "help": "The data for the fixture. It contains: isSensor, filter (collision) and the actual polygon shapes."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array containing the generated shapes for the given polygon.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1157, "public": true, "help": "Add a polygon fixture. This is used during #loadPolygon."}, {"name": "addLine", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "length", "help": "The length of this line (in pixels)"}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Line shape that was added to the Body.", "types": ["p2.Line"]}, "protected": false, "static": false, "inherited": false, "line": 906, "public": true, "help": "Adds a Line shape to this Body.\\nThe line shape is along the x direction, and stretches from [-length/2, 0] to [length/2,0].\\nYou can control the offset from the center of the body and the rotation."}, {"name": "addParticle", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Particle shape that was added to the Body.", "types": ["p2.Particle"]}, "protected": false, "static": false, "inherited": false, "line": 886, "public": true, "help": "Adds a Particle shape to this Body. You can control the offset from the center of the body and the rotation."}, {"name": "addPhaserPolygon", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key of the Physics Data file as stored in Game.Cache."}, {"default": null, "optional": false, "type": ["string"], "name": "object", "help": "The key of the object within the Physics data file that you wish to load the shape data from."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1121, "public": true, "help": "Reads the shape data from a physics data file stored in the Game.Cache and adds it as a polygon to this Body.\\nThe shape data format is based on the custom phaser export in."}, {"name": "addPlane", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Plane shape that was added to the Body.", "types": ["p2.Plane"]}, "protected": false, "static": false, "inherited": false, "line": 869, "public": true, "help": "Adds a Plane shape to this Body. The plane is facing in the Y direction. You can control the offset from the center of the body and the rotation."}, {"name": "addPolygon", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "options", "help": "An object containing the build options:"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "options.optimalDecomp", "help": "Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "options.skipSimpleCheck", "help": "Set to true if you already know that the path is not intersecting itself."}, {"default": "false", "optional": true, "type": ["boolean", "number"], "name": "options.removeCollinearPoints", "help": "Set to a number (angle threshold value) to remove collinear points, or false to keep all points."}, {"default": null, "optional": false, "type": ["array number", "number"], "name": "points", "help": "An array of 2d vectors that form the convex or concave polygon."}], "inheritedFrom": "", "private": false, "returns": {"help": "True on success, else false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 948, "public": true, "help": "Reads a polygon shape path, and assembles convex shapes from that and puts them at proper offset points. The shape must be simple and without holes.\\nThis function expects the x.y values to be given in pixels. If you want to provide them at p2 world scales then call Body.data.fromPolygon directly.\\n\\nEither [[0,0], [0,1],...] or a flat array of numbers that will be interpreted as [x,y, x,y, ...],\\nor the arguments passed can be flat x,y values e.g. `setPolygon(options, x,y, x,y, x,y, ...)` where `x` and `y` are numbers."}, {"name": "addRectangle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the rectangle in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the rectangle in pixels."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Rectangle shape that was added to the Body.", "types": ["p2.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 852, "public": true, "help": "Adds a Rectangle shape to this Body. You can control the offset from the center of the body and the rotation."}, {"name": "addShape", "parameters": [{"default": null, "optional": false, "type": ["p2.Shape"], "name": "shape", "help": "The shape to add to the body."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The shape that was added to the body.", "types": ["p2.Shape"]}, "protected": false, "static": false, "inherited": false, "line": 810, "public": true, "help": "Add a shape to the body. You can pass a local transform when adding a shape, so that the shape gets an offset and an angle relative to the body center of mass.\\nWill automatically update the mass properties and bounding radius."}, {"name": "addToWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 720, "public": true, "help": "Adds this physics body to the world."}, {"name": "adjustCenterOfMass", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 400, "public": true, "help": "Moves the shape offsets so their center of mass becomes the body center of mass."}, {"name": "applyDamping", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "dt", "help": "Current time step."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 412, "public": true, "help": "Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details."}, {"name": "applyForce", "parameters": [{"default": null, "optional": false, "type": ["Float32Array", "array"], "name": "force", "help": "The force vector to add."}, {"default": null, "optional": false, "type": ["number"], "name": "worldX", "help": "The world x point to apply the force on."}, {"default": null, "optional": false, "type": ["number"], "name": "worldY", "help": "The world y point to apply the force on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 426, "public": true, "help": "Apply force to a world point. This could for example be a point on the RigidBody surface. Applying force this way will add to Body.force and Body.angularForce."}, {"name": "clearCollision", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "clearGroup", "help": "Clear the collisionGroup value from the shape/s?"}, {"default": "true", "optional": true, "type": ["boolean"], "name": "clearMask", "help": "Clear the collisionMask value from the shape/s?"}, {"default": null, "optional": true, "type": ["p2.Shape"], "name": "shape", "help": "An optional Shape. If not provided the collision data will be cleared from all Shapes in this Body."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 303, "public": true, "help": "Clears the collision data from the shapes in this Body. Optionally clears Group and/or Mask."}, {"name": "clearShapes", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 786, "public": true, "help": "Removes all Shapes from this Body."}, {"name": "collides", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.CollisionGroup", "array"], "name": "group", "help": "The Collision Group or Array of Collision Groups that this Bodies shapes will collide with."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": "Optional callback that will be triggered when this Body impacts with the given Group."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback will be called."}, {"default": null, "optional": true, "type": ["p2.Shape"], "name": "shape", "help": "An optional Shape. If not provided the collision mask will be added to all Shapes in this Body."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 349, "public": true, "help": "Adds the given CollisionGroup, or array of CollisionGroups, to the list of groups that this body will collide with and updates the collision masks."}, {"name": "createBodyCallback", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.TileSprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "object", "help": "The object to send impact events for."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback to fire on impact. Set to null to clear a previously set callback."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback will fire."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 163, "public": true, "help": "Sets a callback to be fired any time a shape in this Body impacts with a shape in the given Body. The impact test is performed against body.id values.\\nThe callback will be sent 4 parameters: This body, the body that impacted, the Shape in this body and the shape in the impacting body.\\nNote that the impact event happens after collision resolution, so it cannot be used to prevent a collision from happening.\\nIt also happens mid-step. So do not destroy a Body during this callback, instead set safeDestroy to true so it will be killed on the next preUpdate."}, {"name": "createGroupCallback", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.CollisionGroup"], "name": "group", "help": "The Group to send impact events for."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback to fire on impact. Set to null to clear a previously set callback."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback will fire."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 204, "public": true, "help": "Sets a callback to be fired any time this Body impacts with the given Group. The impact test is performed against shape.collisionGroup values.\\nThe callback will be sent 4 parameters: This body, the body that impacted, the Shape in this body and the shape in the impacting body.\\nThis callback will only fire if this Body has been assigned a collision group.\\nNote that the impact event happens after collision resolution, so it cannot be used to prevent a collision from happening.\\nIt also happens mid-step. So do not destroy a Body during this callback, instead set safeDestroy to true so it will be killed on the next preUpdate."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 759, "public": true, "help": "Destroys this Body and all references it holds to other objects."}, {"name": "getCollisionMask", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The bitmask.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 225, "public": true, "help": "Gets the collision bitmask from the groups this body collides with."}, {"name": "loadPolygon", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key of the Physics Data file as stored in Game.Cache."}, {"default": null, "optional": false, "type": ["string"], "name": "object", "help": "The key of the object within the Physics data file that you wish to load the shape data from."}], "inheritedFrom": "", "private": false, "returns": {"help": "True on success, else false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1230, "public": true, "help": "Reads the shape data from a physics data file stored in the Game.Cache and adds it as a polygon to this Body."}, {"name": "moveBackward", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move backwards."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 552, "public": true, "help": "Moves the Body backwards based on its current angle and the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move down, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 642, "public": true, "help": "If this Body is dynamic then this will move it down by setting its y velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveForward", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move forwards."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 535, "public": true, "help": "Moves the Body forwards based on its current angle and the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveLeft", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move to the left, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 603, "public": true, "help": "If this Body is dynamic then this will move it to the left by setting its x velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveRight", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move to the right, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 616, "public": true, "help": "If this Body is dynamic then this will move it to the right by setting its x velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move up, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 629, "public": true, "help": "If this Body is dynamic then this will move it up by setting its y velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "removeFromWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 745, "public": true, "help": "Removes this physics body from the world."}, {"name": "removeShape", "parameters": [{"default": null, "optional": false, "type": ["p2.Circle", "p2.Rectangle", "p2.Plane", "p2.Line", "p2.Particle"], "name": "shape", "help": "The shape to remove from the body."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the shape was found and removed, else false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1007, "public": true, "help": "Remove a shape from the body. Will automatically update the mass properties and bounding radius."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the Body."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new x position of the Body."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "resetDamping", "help": "Resets the linear and angular damping."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "resetMass", "help": "Sets the Body mass back to 1."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 691, "public": true, "help": "Resets the Body force, velocity (linear and angular) and rotation. Optionally resets damping and mass."}, {"name": "reverse", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should reverse."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 586, "public": true, "help": "Applies a force to the Body that causes it to 'thrust' backwards (in reverse), based on its current angle and the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "rotateLeft", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should rotate."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 510, "public": true, "help": "This will rotate the Body by the given speed to the left (counter-clockwise)."}, {"name": "rotateRight", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should rotate."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 522, "public": true, "help": "This will rotate the Body by the given speed to the left (clockwise)."}, {"name": "setCircle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of this circle (in pixels)"}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1025, "public": true, "help": "Clears any previously set shapes. Then creates a new Circle shape and adds it to this Body."}, {"name": "setCollisionGroup", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.CollisionGroup"], "name": "group", "help": "The Collision Group that this Bodies shapes will use."}, {"default": null, "optional": true, "type": ["p2.Shape"], "name": "shape", "help": "An optional Shape. If not provided the collision group will be added to all Shapes in this Body."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 275, "public": true, "help": "Sets the given CollisionGroup to be the collision group for all shapes in this Body, unless a shape is specified.\\nThis also resets the collisionMask."}, {"name": "setMaterial", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "material", "help": "The Material that will be applied."}, {"default": null, "optional": true, "type": ["p2.Shape"], "name": "shape", "help": "An optional Shape. If not provided the Material will be added to all Shapes in this Body."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1083, "public": true, "help": "Adds the given Material to all Shapes that belong to this Body.\\nIf you only wish to apply it to a specific Shape in this Body then provide that as the 2nd parameter."}, {"name": "setRectangle", "parameters": [{"default": "16", "optional": true, "type": ["number"], "name": "width", "help": "The width of the rectangle in pixels."}, {"default": "16", "optional": true, "type": ["number"], "name": "height", "help": "The height of the rectangle in pixels."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetX", "help": "Local horizontal offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "offsetY", "help": "Local vertical offset of the shape relative to the body center of mass."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotation", "help": "Local rotation of the shape relative to the body center of mass, specified in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Rectangle shape that was added to the Body.", "types": ["p2.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 1045, "public": true, "help": "Clears any previously set shapes. The creates a new Rectangle shape at the given size and offset, and adds it to this Body.\\nIf you wish to create a Rectangle to match the size of a Sprite or Image see Body.setRectangleFromSprite."}, {"name": "setRectangleFromSprite", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Sprite", "Phaser.Image"], "name": "sprite", "help": "The Sprite on which the Rectangle will get its dimensions."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Rectangle shape that was added to the Body.", "types": ["p2.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 1065, "public": true, "help": "Clears any previously set shapes.\\nThen creates a Rectangle shape sized to match the dimensions and orientation of the Sprite given.\\nIf no Sprite is given it defaults to using the parent of this Body."}, {"name": "setZeroDamping", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 471, "public": true, "help": "Sets the Body damping and angularDamping to zero."}, {"name": "setZeroForce", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 437, "public": true, "help": "Sets the force on the body to zero."}, {"name": "setZeroRotation", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 448, "public": true, "help": "If this Body is dynamic then this will zero its angular velocity."}, {"name": "setZeroVelocity", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 459, "public": true, "help": "If this Body is dynamic then this will zero its velocity on both axis."}, {"name": "shapeChanged", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1104, "public": true, "help": "Updates the debug draw if any body shapes change."}, {"name": "thrust", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should thrust."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 569, "public": true, "help": "Applies a force to the Body that causes it to 'thrust' forwards, based on its current angle and the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "toLocalFrame", "parameters": [{"default": null, "optional": false, "type": ["Float32Array", "array"], "name": "out", "help": "The vector to store the result in."}, {"default": null, "optional": false, "type": ["Float32Array", "array"], "name": "worldPoint", "help": "The input world vector."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 485, "public": true, "help": "Transform a world point to local body frame."}, {"name": "toWorldFrame", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "out", "help": "The vector to store the result in."}, {"default": null, "optional": false, "type": ["array"], "name": "localPoint", "help": "The input local vector."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 498, "public": true, "help": "Transform a local point to world frame."}, {"name": "updateCollisionMask", "parameters": [{"default": null, "optional": true, "type": ["p2.Shape"], "name": "shape", "help": "An optional Shape. If not provided the collision group will be added to all Shapes in this Body."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 249, "public": true, "help": "Updates the collisionMask."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "size", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "", "public": true, "help": "The pixel size used by the filter."}], "private": []}, "class": {"help": "An ASCII filter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.AsciiFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 225, "inlineHelp": "Gets the angle of the line.", "public": true, "help": ""}, {"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 329, "inlineHelp": "Gets the bottom-most point of this line.", "public": true, "help": ""}, {"name": "end", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "The end point of the line.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 355, "inlineHelp": "Gets the height of this bounds of this line.", "public": true, "help": ""}, {"name": "left", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 290, "inlineHelp": "Gets the left-most point of this line.", "public": true, "help": ""}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 212, "inlineHelp": "Gets the length of the line segment.", "public": true, "help": ""}, {"name": "perpSlope", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 251, "inlineHelp": "Gets the perpendicular slope of the line (x/y).", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 303, "inlineHelp": "Gets the right-most point of this line.", "public": true, "help": ""}, {"name": "slope", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 238, "inlineHelp": "Gets the slope of the line (y/x).", "public": true, "help": ""}, {"name": "start", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "The start point of the line.", "public": true, "help": ""}, {"name": "top", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 316, "inlineHelp": "Gets the top-most point of this line.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 342, "inlineHelp": "Gets the width of this bounds of this line.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 264, "inlineHelp": "Gets the x coordinate of the top left of the bounds around this line.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 277, "inlineHelp": "Gets the y coordinate of the top left of the bounds around this line.", "public": true, "help": ""}], "private": []}, "class": {"help": "Creates a new Line object with a start and an end point.", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x1", "help": "The x coordinate of the start of the line."}, {"default": "0", "optional": true, "type": ["number"], "name": "y1", "help": "The y coordinate of the start of the line."}, {"default": "0", "optional": true, "type": ["number"], "name": "x2", "help": "The x coordinate of the end of the line."}, {"default": "0", "optional": true, "type": ["number"], "name": "y2", "help": "The y coordinate of the end of the line."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Line"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Line"], "name": "output", "help": "Optional Line object. If given the values will be set into the object, otherwise a brand new Line object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "The cloned Line object.", "types": ["Phaser.Line"]}, "protected": false, "static": false, "inherited": false, "line": 190, "public": true, "help": "Returns a new Line object with the same values for the start and end properties as this Line object."}, {"name": "coordinatesOnLine", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "stepRate", "help": "How many steps will we return? 1 = every coordinate on the line, 2 = every other coordinate, etc."}, {"default": null, "optional": true, "type": ["array"], "name": "results", "help": "The array to store the results in. If not provided a new one will be generated."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of coordinates.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 135, "public": true, "help": "Using Bresenham's line algorithm this will return an array of all coordinates on this line.\\nThe start and end points are rounded before this runs as the algorithm works on integers."}, {"name": "fromSprite", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "startSprite", "help": "The coordinates of this Sprite will be set to the Line.start point."}, {"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "endSprite", "help": "The coordinates of this Sprite will be set to the Line.start point."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "useCenter", "help": "If true it will use startSprite.center.x, if false startSprite.x. Note that Sprites don't have a center property by default, so only enable if you've over-ridden your Sprite with a custom class."}], "inheritedFrom": "", "private": false, "returns": {"help": "This line object", "types": ["Phaser.Line"]}, "protected": false, "static": false, "inherited": false, "line": 65, "public": true, "help": "Sets the line to match the x/y coordinates of the two given sprites.\\nCan optionally be calculated from their center coordinates."}, {"name": "intersects", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Line"], "name": "a", "help": "The first Line to be checked."}, {"default": null, "optional": false, "type": ["Phaser.Line"], "name": "b", "help": "The second Line to be checked."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "asSegment", "help": "If true it will check for segment intersection, otherwise full line intersection."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "result", "help": "A Point object to store the result in, if not given a new one will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The intersection segment of the two lines as a Point, or null if there is no intersection.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 429, "public": true, "help": "Checks for intersection between two lines.\\nIf asSegment is true it will check for segment intersection.\\nIf asSegment is false it will check for line intersection.\\nReturns the intersection segment of AB and EF as a Point, or null if there is no intersection.\\nAdapted from code by Keith Hair"}, {"name": "intersectsPoints", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The start of the first Line to be checked."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The end of the first line to be checked."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "e", "help": "The start of the second Line to be checked."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "f", "help": "The end of the second line to be checked."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "asSegment", "help": "If true it will check for segment intersection, otherwise full line intersection."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "result", "help": "A Point object to store the result in, if not given a new one will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The intersection segment of the two lines as a Point, or null if there is no intersection.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 378, "public": true, "help": "Checks for intersection between two lines as defined by the given start and end points.\\nIf asSegment is true it will check for line segment intersection. If asSegment is false it will check for line intersection.\\nReturns the intersection segment of AB and EF as a Point, or null if there is no intersection.\\nAdapted from code by Keith Hair"}, {"name": "pointOnLine", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The line to check against this one."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The line to check against this one."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the point is on the line, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 102, "public": true, "help": "Tests if the given coordinates fall on this line. See pointOnSegment to test against just the line segment."}, {"name": "pointOnSegment", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The line to check against this one."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The line to check against this one."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the point is on the line and segment, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 115, "public": true, "help": "Tests if the given coordinates fall on this line and within the segment. See pointOnLine to test against just the line."}, {"name": "setTo", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x1", "help": "The x coordinate of the start of the line."}, {"default": "0", "optional": true, "type": ["number"], "name": "y1", "help": "The y coordinate of the start of the line."}, {"default": "0", "optional": true, "type": ["number"], "name": "x2", "help": "The x coordinate of the end of the line."}, {"default": "0", "optional": true, "type": ["number"], "name": "y2", "help": "The y coordinate of the end of the line."}], "inheritedFrom": "", "private": false, "returns": {"help": "This line object", "types": ["Phaser.Line"]}, "protected": false, "static": false, "inherited": false, "line": 47, "public": true, "help": "Sets the components of the Line to the specified values."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "The alpha value at which this tile is drawn to the canvas.", "public": true, "help": ""}, {"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 391, "inlineHelp": "The sum of the y and height properties.", "public": true, "help": ""}, {"name": "canCollide", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 339, "inlineHelp": "True if this tile can collide on any of its faces or has a collision callback set.", "public": true, "help": ""}, {"name": "collideDown", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 128, "inlineHelp": "Indicating collide with any object on the bottom.", "public": true, "help": ""}, {"name": "collideLeft", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "Indicating collide with any object on the left.", "public": true, "help": ""}, {"name": "collideRight", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "Indicating collide with any object on the right.", "public": true, "help": ""}, {"name": "collideUp", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "Indicating collide with any object on the top.", "public": true, "help": ""}, {"name": "collides", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 326, "inlineHelp": "True if this tile can collide on any of its faces.", "public": true, "help": ""}, {"name": "collisionCallback", "default": "null", "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 134, "inlineHelp": "Tile collision callback.", "public": true, "help": ""}, {"name": "collisionCallbackContext", "default": "this", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 140, "inlineHelp": "The context in which the collision callback will be called.", "public": true, "help": ""}, {"name": "faceBottom", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "Is the bottom of this tile an interesting edge?", "public": true, "help": ""}, {"name": "faceLeft", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "Is the left of this tile an interesting edge?", "public": true, "help": ""}, {"name": "faceRight", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Is the right of this tile an interesting edge?", "public": true, "help": ""}, {"name": "faceTop", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "Is the top of this tile an interesting edge?", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "The height of the tile in pixels.", "public": true, "help": ""}, {"name": "index", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "The index of this tile within the map data corresponding to the tileset, or -1 if this represents a blank/null tile.", "public": true, "help": ""}, {"name": "layer", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "The layer in the Tilemap data that this tile belongs to.", "public": true, "help": ""}, {"name": "left", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 352, "inlineHelp": "The x value in pixels.", "public": true, "help": ""}, {"name": "properties", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "Tile specific properties.", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 365, "inlineHelp": "The sum of the x and width properties.", "public": true, "help": ""}, {"name": "scanned", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "Has this tile been walked / turned into a poly?", "public": true, "help": ""}, {"name": "top", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 378, "inlineHelp": "The y value.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "The width of the tile in pixels.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The x map coordinate of this tile.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "The y map coordinate of this tile.", "public": true, "help": ""}], "private": []}, "class": {"help": "A Tile is a representation of a single tile within the Tilemap.", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "layer", "help": "The layer in the Tilemap data that this tile belongs to."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of this tile type in the core map data."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of this tile."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of this tile."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width of the tile."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "Height of the tile."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Tile"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "containsPoint", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the coordinates are within this Tile, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 154, "public": true, "help": "Check if the given x and y world coordinates are within this Tile."}, {"name": "copy", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tile"], "name": "tile", "help": "The tile to copy from."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 301, "public": true, "help": "Copies the tile data and properties from the given tile to this tile."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 215, "public": true, "help": "Clean up memory."}, {"name": "intersects", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x axis in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y axis in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "right", "help": "The right point."}, {"default": null, "optional": false, "type": ["number"], "name": "bottom", "help": "The bottom point."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 169, "public": true, "help": "Check for intersection with this tile."}, {"name": "isInteresting", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "collides", "help": "If true will check any collides value."}, {"default": null, "optional": false, "type": ["boolean"], "name": "faces", "help": "If true will check any face value."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the Tile is interesting, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 273, "public": true, "help": "Is this tile interesting?"}, {"name": "resetCollision", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 251, "public": true, "help": "Reset collision status flags."}, {"name": "setCollision", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "left", "help": "Indicating collide with any object on the left."}, {"default": null, "optional": false, "type": ["boolean"], "name": "right", "help": "Indicating collide with any object on the right."}, {"default": null, "optional": false, "type": ["boolean"], "name": "up", "help": "Indicating collide with any object on the top."}, {"default": null, "optional": false, "type": ["boolean"], "name": "down", "help": "Indicating collide with any object on the bottom."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 232, "public": true, "help": "Sets the collision flags for each side of this tile and updates the interesting faces list."}, {"name": "setCollisionCallback", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "Callback function."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "Callback will be called within this context."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 203, "public": true, "help": "Set a callback to be called when this tile is hit by an object.\\nThe callback must true true for collision processing to take place."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "Connects two bodies at given offset points, letting them rotate relative to each other around this point.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "lockRotation", "help": "If set to false, bodyB will be free to rotate around its anchor point."}, {"default": null, "optional": true, "type": ["array"], "name": "anchorA", "help": "Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "anchorB", "help": "Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "axis", "help": "An axis, defined in body A frame, that body B's anchor point may slide along. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.PrismaticConstraint"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseURL", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "If you want to append a URL before the path of any asset you can set this here.\\nUseful if you need to allow an asset url to be configured outside of the game code.\\nMUST have / on the end of it!"}, {"name": "crossOrigin", "default": "false", "type": ["boolean", "string"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "The crossOrigin value applied to loaded images. Very often this needs to be set to 'anonymous'.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "hasLoaded", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "True if all assets in the queue have finished loading.", "public": true, "help": ""}, {"name": "isLoading", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "True if the Loader is in the process of loading the queue.", "public": true, "help": ""}, {"name": "onFileComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "This event is dispatched when a file completes loading successfully.", "public": true, "help": ""}, {"name": "onFileError", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "This event is dispatched when a file errors as a result of the load request.", "public": true, "help": ""}, {"name": "onFileStart", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "This event is dispatched immediately before a file starts loading. It's possible the file may still error (404, etc) after this event is sent.", "public": true, "help": ""}, {"name": "onLoadComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "This event is dispatched when the final file in the load queue has either loaded or failed.", "public": true, "help": ""}, {"name": "onLoadStart", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "This event is dispatched when the loading process starts, before the first file has been requested.", "public": true, "help": ""}, {"name": "onPackComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "This event is dispatched when an asset pack has either loaded or failed.", "public": true, "help": ""}, {"name": "preloadSprite", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "", "public": true, "help": "You can optionally link a sprite to the preloader.\\nIf you do so the Sprites width or height will be cropped based on the percentage loaded.\\nThis property is an object containing: sprite, rect, direction, width and height"}, {"name": "progress", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "The rounded load progress percentage value (from 0 to 100)", "public": true, "help": ""}, {"name": "progressFloat", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "The non-rounded load progress value (from 0.0 to 100.0)", "public": true, "help": ""}, {"name": "useXDomainRequest", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "If true and if the browser supports XDomainRequest, it will be used in preference for xhr when loading json files. It is enabled automatically if the browser is IE9, but you can disable it as required.", "public": true, "help": ""}], "private": [{"name": "-", "default": null, "type": ["XDomainRequest"], "private": true, "readOnly": false, "protected": false, "line": 147, "inlineHelp": " An ajax request used specifically by IE9 for CORs loading issues.", "public": false, "help": ""}, {"name": "_fileIndex", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 128, "inlineHelp": "The index of the current file being loaded.", "public": false, "help": ""}, {"name": "_fileList", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "Contains all the assets file infos.", "public": false, "help": ""}, {"name": "_packIndex", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "The index of the current asset pack.", "public": false, "help": ""}, {"name": "_packList", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "Contains all the assets packs.", "public": false, "help": ""}, {"name": "_progressChunk", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 135, "inlineHelp": "Indicates the size of 1 file in terms of a percentage out of 100.", "public": false, "help": ""}]}, "class": {"help": "The Loader handles loading all external content such as Images, Sounds, Texture Atlases and data files.\\nIt uses a combination of Image() loading and xhr and provides progress and completion callbacks.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Loader"}, "consts": [{"line": 173, "type": "number", "name": "PHYSICS_LIME_CORONA_JSON", "help": ""}, {"line": 179, "type": "number", "name": "PHYSICS_PHASER_JSON", "help": ""}, {"line": 155, "type": "number", "name": "TEXTURE_ATLAS_JSON_ARRAY", "help": ""}, {"line": 161, "type": "number", "name": "TEXTURE_ATLAS_JSON_HASH", "help": ""}, {"line": 167, "type": "number", "name": "TEXTURE_ATLAS_XML_STARLING", "help": ""}], "methods": {"protected": [{"name": "addToFileList", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The type of resource to add to the list (image, audio, xml, etc)."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique Cache ID key of this resource."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The URL the asset will be loaded from."}, {"default": null, "optional": false, "type": ["object"], "name": "properties", "help": "Any additional properties needed to load the file."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 319, "public": false, "help": "Internal function that adds a new entry to the file list. Do not call directly."}, {"name": "replaceInFileList", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The type of resource to add to the list (image, audio, xml, etc)."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The unique Cache ID key of this resource."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The URL the asset will be loaded from."}, {"default": null, "optional": false, "type": ["object"], "name": "properties", "help": "Any additional properties needed to load the file."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 355, "public": false, "help": "Internal function that replaces an existing entry in the file list with a new one. Do not call directly."}], "static": [], "public": [{"name": "atlas", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the texture atlas file."}, {"default": null, "optional": false, "type": ["string"], "name": "textureURL", "help": "The url of the texture atlas image file."}, {"default": null, "optional": true, "type": ["string"], "name": "atlasURL", "help": "The url of the texture atlas data file (json/xml). You don't need this if you are passing an atlasData object instead."}, {"default": null, "optional": true, "type": ["object"], "name": "atlasData", "help": "A JSON or XML data object. You don't need this if the data is being loaded from a URL."}, {"default": null, "optional": true, "type": ["number"], "name": "format", "help": "A value describing the format of the data, the default is Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 856, "public": true, "help": "Add a new texture atlas to the loader."}, {"name": "atlasJSONArray", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the texture atlas file."}, {"default": null, "optional": false, "type": ["string"], "name": "textureURL", "help": "The url of the texture atlas image file."}, {"default": null, "optional": true, "type": ["string"], "name": "atlasURL", "help": "The url of the texture atlas data file (json/xml). You don't need this if you are passing an atlasData object instead."}, {"default": null, "optional": true, "type": ["object"], "name": "atlasData", "help": "A JSON or XML data object. You don't need this if the data is being loaded from a URL."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 807, "public": true, "help": "Add a new texture atlas to the loader. This atlas uses the JSON Array data format."}, {"name": "atlasJSONHash", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the texture atlas file."}, {"default": null, "optional": false, "type": ["string"], "name": "textureURL", "help": "The url of the texture atlas image file."}, {"default": null, "optional": true, "type": ["string"], "name": "atlasURL", "help": "The url of the texture atlas data file (json/xml). You don't need this if you are passing an atlasData object instead."}, {"default": null, "optional": true, "type": ["object"], "name": "atlasData", "help": "A JSON or XML data object. You don't need this if the data is being loaded from a URL."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 823, "public": true, "help": "Add a new texture atlas to the loader. This atlas uses the JSON Hash data format."}, {"name": "atlasXML", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the texture atlas file."}, {"default": null, "optional": false, "type": ["string"], "name": "textureURL", "help": "The url of the texture atlas image file."}, {"default": null, "optional": true, "type": ["string"], "name": "atlasURL", "help": "The url of the texture atlas data file (json/xml). You don't need this if you are passing an atlasData object instead."}, {"default": null, "optional": true, "type": ["object"], "name": "atlasData", "help": "A JSON or XML data object. You don't need this if the data is being loaded from a URL."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 839, "public": true, "help": "Add a new texture atlas to the loader. This atlas uses the Starling XML data format."}, {"name": "audio", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the audio file."}, {"default": null, "optional": false, "type": ["array", "string"], "name": "urls", "help": "An array containing the URLs of the audio files, i.e.: [ 'jump.mp3', 'jump.ogg', 'jump.m4a' ] or a single string containing just one URL."}, {"default": null, "optional": false, "type": ["boolean"], "name": "autoDecode", "help": "When using Web Audio the audio files can either be decoded at load time or run-time. They can't be played until they are decoded, but this let's you control when that happens. Decoding is a non-blocking async process."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 607, "public": true, "help": "Add a new audio file to the loader."}, {"name": "audiosprite", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the audio file."}, {"default": null, "optional": false, "type": ["array", "string"], "name": "urls", "help": "An array containing the URLs of the audio files, i.e.: [ 'audiosprite.mp3', 'audiosprite.ogg', 'audiosprite.m4a' ] or a single string containing just one URL."}, {"default": null, "optional": false, "type": ["string"], "name": "atlasURL", "help": "The URL of the audiosprite configuration json."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 627, "public": true, "help": "Add a new audiosprite file to the loader. Audio Sprites are a combination of audio files and a JSON configuration.\\nThe JSON follows the format of that created by https://github.com/tonistiigi/audiosprite"}, {"name": "binary", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the binary file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the binary file."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": "Optional callback that will be passed the file after loading, so you can perform additional processing on it."}, {"default": null, "optional": true, "type": ["function"], "name": "callbackContext", "help": "The context under which the callback will be applied. If not specified it will use the callback itself as the context."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 562, "public": true, "help": "Add a binary file to the Loader. It will be loaded via xhr with a responseType of \"arraybuffer\". You can specify an optional callback to process the file after load.\\nWhen the callback is called it will be passed 2 parameters: the key of the file and the file data.\\nWARNING: If you specify a callback, the file data will be set to whatever your callback returns. So always return the data object, even if you didn't modify it."}, {"name": "bitmapFont", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the bitmap font."}, {"default": null, "optional": false, "type": ["string"], "name": "textureURL", "help": "The url of the font image file."}, {"default": null, "optional": true, "type": ["string"], "name": "xmlURL", "help": "The url of the font data file (xml/fnt)"}, {"default": null, "optional": true, "type": ["object"], "name": "xmlData", "help": "An optional XML data object."}, {"default": "0", "optional": true, "type": ["number"], "name": "xSpacing", "help": "If you'd like to add additional horizontal spacing between the characters then set the pixel value here."}, {"default": "0", "optional": true, "type": ["number"], "name": "ySpacing", "help": "If you'd like to add additional vertical spacing between the lines then set the pixel value here."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 745, "public": true, "help": "Add a new bitmap font loading request."}, {"name": "checkKeyExists", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The type asset you want to check."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "Return true if exists, otherwise return false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 224, "public": true, "help": "Check whether asset exists with a specific key.\\nUse Phaser.Cache to access loaded assets, e.g. Phaser.Cache#checkImageKey"}, {"name": "csvLoadComplete", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that loaded."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1625, "public": true, "help": "Successfully loaded a CSV file."}, {"name": "dataLoadError", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that errored."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1650, "public": true, "help": "Error occured when load a JSON."}, {"name": "fileComplete", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that loaded."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1434, "public": true, "help": "Called when a file is successfully loaded."}, {"name": "fileError", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that errored."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1415, "public": true, "help": "Error occured when loading a file."}, {"name": "getAsset", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The type asset you want to check."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns an object if found that has 2 properties: index and file. Otherwise false.", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 274, "public": true, "help": "Gets the asset that is queued for load."}, {"name": "getAssetIndex", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The type asset you want to check."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the asset you want to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of this key in the filelist, or -1 if not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 249, "public": true, "help": "Gets the fileList index for the given key."}, {"name": "image", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of this image file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of image file."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "overwrite", "help": "If an unloaded file with a matching key already exists in the queue, this entry will overwrite it."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 433, "public": true, "help": "Add an image to the Loader."}, {"name": "json", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the json file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the json file."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "overwrite", "help": "If an unloaded file with a matching key already exists in the queue, this entry will overwrite it."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 485, "public": true, "help": "Add a json file to the Loader."}, {"name": "jsonLoadComplete", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that loaded."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1581, "public": true, "help": "Successfully loaded a JSON file."}, {"name": "pack", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of this image file."}, {"default": null, "optional": true, "type": ["string"], "name": "url", "help": "URL of the Asset Pack JSON file. If you wish to pass a json object instead set this to null and pass the object as the data parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "data", "help": "The Asset Pack JSON data. Use this to pass in a json data object rather than loading it from a URL. TODO"}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "Some Loader operations, like Binary and Script require a context for their callbacks. Pass the context here."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 397, "public": true, "help": "Add an image to the Loader."}, {"name": "physics", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the physics json data."}, {"default": null, "optional": true, "type": ["string"], "name": "url", "help": "The url of the map data file (csv/json)"}, {"default": null, "optional": true, "type": ["object"], "name": "data", "help": "An optional JSON data object. If given then the url is ignored and this JSON object is used for physics data instead."}, {"default": "Phaser.Physics.LIME_CORONA_JSON", "optional": true, "type": ["string"], "name": "format", "help": "The format of the physics data."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 701, "public": true, "help": "Add a new physics data object loading request.\\nThe data must be in Lime + Corona JSON format. Physics Editor by code'n'web exports in this format natively."}, {"name": "removeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 948, "public": true, "help": "Remove all file loading requests."}, {"name": "removeFile", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The type of resource to add to the list (image, audio, xml, etc)."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Key of the file you want to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 932, "public": true, "help": "Remove loading request of a file."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 296, "public": true, "help": "Reset loader, this will remove the load queue."}, {"name": "script", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the script file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the JavaScript file."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": "Optional callback that will be called after the script tag has loaded, so you can perform additional processing."}, {"default": null, "optional": true, "type": ["function"], "name": "callbackContext", "help": "The context under which the callback will be applied. If not specified it will use the callback itself as the context."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 539, "public": true, "help": "Add a JavaScript file to the Loader. Once loaded the JavaScript file will be automatically turned into a script tag (and executed), so be careful what you load!\\nYou can also specify a callback. This will be executed as soon as the script tag has been created."}, {"name": "setPreloadSprite", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image"], "name": "sprite", "help": "The sprite or image that will be cropped during the load."}, {"default": "0", "optional": true, "type": ["number"], "name": "direction", "help": "A value of zero means the sprite will be cropped horizontally, a value of 1 means its will be cropped vertically."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 192, "public": true, "help": "You can set a Sprite to be a \"preload\" sprite by passing it to this method.\\nA \"preload\" sprite will have its width or height crop adjusted based on the percentage of the loader in real-time.\\nThis allows you to easily make loading bars for games. Note that Sprite.visible = true will be set when calling this."}, {"name": "spritesheet", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the sheet file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the sheet file."}, {"default": null, "optional": false, "type": ["number"], "name": "frameWidth", "help": "Width of each single frame."}, {"default": null, "optional": false, "type": ["number"], "name": "frameHeight", "help": "Height of each single frame."}, {"default": "-1", "optional": true, "type": ["number"], "name": "frameMax", "help": "How many frames in this sprite sheet. If not specified it will divide the whole image into frames."}, {"default": "0", "optional": true, "type": ["number"], "name": "margin", "help": "If the frames have been drawn with a margin, specify the amount here."}, {"default": "0", "optional": true, "type": ["number"], "name": "spacing", "help": "If the frames have been drawn with spacing between them, specify the amount here."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 586, "public": true, "help": "Add a new sprite sheet to the loader."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 959, "public": true, "help": "Start loading the assets. Normally you don't need to call this yourself as the StateManager will do so."}, {"name": "text", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the text file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the text file."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "overwrite", "help": "If an unloaded file with a matching key already exists in the queue, this entry will overwrite it."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 459, "public": true, "help": "Add a text file to the Loader."}, {"name": "tilemap", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the tilemap data."}, {"default": null, "optional": true, "type": ["string"], "name": "url", "help": "The url of the map data file (csv/json)"}, {"default": null, "optional": true, "type": ["object"], "name": "data", "help": "An optional JSON data object. If given then the url is ignored and this JSON object is used for map data instead."}, {"default": "Phaser.Tilemap.CSV", "optional": true, "type": ["number"], "name": "format", "help": "The format of the map data. Either Phaser.Tilemap.CSV or Phaser.Tilemap.TILED_JSON."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 647, "public": true, "help": "Add a new tilemap loading request."}, {"name": "totalLoadedFiles", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The number of files that have already been loaded (even if they errored)", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1781, "public": true, "help": "Returns the number of files that have already been loaded, even if they errored."}, {"name": "totalLoadedPacks", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The number of asset packs that have already been loaded (even if they errored)", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1825, "public": true, "help": "Returns the number of asset packs that have already been loaded, even if they errored."}, {"name": "totalQueuedFiles", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The number of files that still remain in the load queue.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1803, "public": true, "help": "Returns the number of files still waiting to be processed in the load queue. This value decreases as each file in the queue is loaded."}, {"name": "totalQueuedPacks", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The number of asset packs that still remain in the load queue.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1847, "public": true, "help": "Returns the number of asset packs still waiting to be processed in the load queue. This value decreases as each pack in the queue is loaded."}, {"name": "xml", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Unique asset key of the xml file."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "URL of the xml file."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "overwrite", "help": "If an unloaded file with a matching key already exists in the queue, this entry will overwrite it."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Loader instance.", "types": ["Phaser.Loader"]}, "protected": false, "static": false, "inherited": false, "line": 511, "public": true, "help": "Add an XML file to the Loader."}, {"name": "xmlLoadComplete", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that loaded."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1669, "public": true, "help": "Successfully loaded an XML file."}], "private": [{"name": "beginLoad", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 984, "public": false, "help": "Starts off the actual loading process after the asset packs have been sorted out."}, {"name": "getAudioURL", "parameters": [{"default": null, "optional": false, "type": ["array", "string"], "name": "urls", "help": "Either an array of audio file URLs or a string containing a single URL path."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1383, "public": false, "help": "Private method ONLY used by loader."}, {"name": "loadFile", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1195, "public": false, "help": "Load files. Private method ONLY used by loader."}, {"name": "loadPack", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1016, "public": false, "help": "Loads the current asset pack in the queue."}, {"name": "nextFile", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "previousIndex", "help": "Index of the previously loaded asset."}, {"default": null, "optional": false, "type": ["boolean"], "name": "success", "help": "Whether the previous asset loaded successfully or not."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1732, "public": false, "help": "Handle loading next file."}, {"name": "nextPack", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1172, "public": false, "help": "Handle loading the next asset pack."}, {"name": "packError", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that errored."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1153, "public": false, "help": "Error occured when loading an asset pack."}, {"name": "packLoadComplete", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file in the file queue that loaded."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "parse", "help": "Automatically parse the JSON data?"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1046, "public": false, "help": "Handle the successful loading of a JSON asset pack."}, {"name": "xhrLoad", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the file to load from the file list."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The URL of the file."}, {"default": null, "optional": false, "type": ["string"], "name": "type", "help": "The xhr responseType."}, {"default": null, "optional": false, "type": ["string"], "name": "onload", "help": "A String of the name of the local function to be called on a successful file load."}, {"default": null, "optional": false, "type": ["string"], "name": "onerror", "help": "A String of the name of the local function to be called on a file load error."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1357, "public": false, "help": "Starts the xhr loader."}]}}, {"properties": {"protected": [], "public": [{"name": "baseUrl", "default": null, "type": ["string"], "private": false, "readOnly": true, "protected": false, "line": 42, "inlineHelp": "", "public": true, "help": "[read-only] The base url of the bitmap font data"}, {"name": "crossorigin", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "", "public": true, "help": "Whether the requests should be treated as cross origin"}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "", "public": true, "help": "[read-only] The texture of the bitmap font"}, {"name": "url", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "", "public": true, "help": "The url of the bitmap font data"}], "private": []}, "class": {"help": "The xml loader is used to load in XML bitmap font data ('xml' or 'fnt')\\nTo generate the data you can use http://www.angelcode.com/products/bmfont/\\nThis loader will also load the image file as the data.\\nWhen loaded this class will dispatch a 'loaded' event", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url of the sprite sheet JSON file"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.BitmapFontLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 62, "public": true, "help": "Loads the XML font data"}], "private": [{"name": "onLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 158, "public": false, "help": "Invoked when all files are loaded (xml/fnt and texture)"}, {"name": "onXMLLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 78, "public": false, "help": "Invoked when the XML file is loaded, parses the data."}]}}, {"properties": {"protected": [{"name": "config", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": true, "line": 36, "inlineHelp": "The p2 World configuration object.", "public": false, "help": ""}, {"name": "materials", "default": null, "type": ["array Phaser.Physics.P2.Material"], "private": false, "readOnly": false, "protected": true, "line": 66, "inlineHelp": "A local array of all created Materials.", "public": false, "help": ""}, {"name": "world", "default": null, "type": ["p2.World"], "private": false, "readOnly": false, "protected": true, "line": 42, "inlineHelp": "The p2 World in which the simulation is run.", "public": false, "help": ""}], "public": [{"name": "applyDamping", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1761, "inlineHelp": "Enable to automatically apply body damping each step.", "public": true, "help": ""}, {"name": "applyGravity", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1781, "inlineHelp": "Enable to automatically apply gravity each step.", "public": true, "help": ""}, {"name": "applySpringForces", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1741, "inlineHelp": "Enable to automatically apply spring forces each step.", "public": true, "help": ""}, {"name": "boundsCollidesWith", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 174, "inlineHelp": "An array of the bodies the world bounds collides with.", "public": true, "help": ""}, {"name": "boundsCollisionGroup", "default": null, "type": ["Phaser.Physics.P2.CollisionGroup"], "private": false, "readOnly": false, "protected": false, "line": 164, "inlineHelp": "A default collision group.", "public": true, "help": ""}, {"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "The context under which the callbacks are fired.", "public": true, "help": ""}, {"name": "collisionGroups", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 154, "inlineHelp": "An array containing the collision groups that have been defined in the World.", "public": true, "help": ""}, {"name": "contactMaterial", "default": null, "type": ["p2.ContactMaterial"], "private": false, "readOnly": false, "protected": false, "line": 1721, "inlineHelp": "The default Contact Material being used by the World.", "public": true, "help": ""}, {"name": "emitImpactEvent", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1836, "inlineHelp": "Set to true if you want to the world to emit the \"impact\" event. Turning this off could improve performance.", "public": true, "help": ""}, {"name": "everythingCollisionGroup", "default": null, "type": ["Phaser.Physics.P2.CollisionGroup"], "private": false, "readOnly": false, "protected": false, "line": 169, "inlineHelp": "A default collision group.", "public": true, "help": ""}, {"name": "frameRate", "default": "1 / 60", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The frame rate the world will be stepped at. Defaults to 1 / 60, but you can change here. Also see useElapsedTime property.", "public": true, "help": ""}, {"name": "friction", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1681, "inlineHelp": "Friction between colliding bodies. This value is used if no matching ContactMaterial is found for a Material pair.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "gravity", "default": null, "type": ["Phaser.Physics.P2.InversePointProxy"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The gravity applied to all bodies each step.", "public": true, "help": ""}, {"name": "nothingCollisionGroup", "default": null, "type": ["Phaser.Physics.P2.CollisionGroup"], "private": false, "readOnly": false, "protected": false, "line": 159, "inlineHelp": "A default collision group.", "public": true, "help": ""}, {"name": "onBeginContact", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "Dispatched when a first contact is created between two bodies. This event is fired before the step has been done.", "public": true, "help": ""}, {"name": "onBodyAdded", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "Dispatched when a new Body is added to the World.", "public": true, "help": ""}, {"name": "onBodyRemoved", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "Dispatched when a Body is removed from the World.", "public": true, "help": ""}, {"name": "onConstraintAdded", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "Dispatched when a new Constraint is added to the World.", "public": true, "help": ""}, {"name": "onConstraintRemoved", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "Dispatched when a Constraint is removed from the World.", "public": true, "help": ""}, {"name": "onContactMaterialAdded", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "Dispatched when a new ContactMaterial is added to the World.", "public": true, "help": ""}, {"name": "onContactMaterialRemoved", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "Dispatched when a ContactMaterial is removed from the World.", "public": true, "help": ""}, {"name": "onEndContact", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "Dispatched when final contact occurs between two bodies. This event is fired before the step has been done.", "public": true, "help": ""}, {"name": "onSpringAdded", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "Dispatched when a new Spring is added to the World.", "public": true, "help": ""}, {"name": "onSpringRemoved", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "Dispatched when a Spring is removed from the World.", "public": true, "help": ""}, {"name": "paused", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "The paused state of the P2 World.", "public": true, "help": ""}, {"name": "postBroadphaseCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "A postBroadphase callback.", "public": true, "help": ""}, {"name": "restitution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1701, "inlineHelp": "Default coefficient of restitution between colliding bodies. This value is used if no matching ContactMaterial is found for a Material pair.", "public": true, "help": ""}, {"name": "sleepMode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1858, "inlineHelp": "", "public": true, "help": "How to deactivate bodies during simulation. Possible modes are: World.NO_SLEEPING, World.BODY_SLEEPING and World.ISLAND_SLEEPING.\\nIf sleeping is enabled, you might need to wake up the bodies if they fall asleep when they shouldn't. If you want to enable sleeping in the world, but want to disable it for a particular body, see Body.allowSleep."}, {"name": "solveConstraints", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1801, "inlineHelp": "Enable/disable constraint solving in each step.", "public": true, "help": ""}, {"name": "time", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 1822, "inlineHelp": "The World time.", "public": true, "help": ""}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1879, "inlineHelp": "The total number of bodies in the world.", "public": true, "help": ""}, {"name": "useElapsedTime", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "If true the frameRate value will be ignored and instead p2 will step with the value of Game.Time.physicsElapsed, which is a delta time value.", "public": true, "help": ""}, {"name": "walls", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "An object containing the 4 wall bodies that bound the physics world.", "public": true, "help": ""}], "private": [{"name": "_collisionGroupID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 186, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "_toRemove", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 180, "inlineHelp": "Internal var used to hold references to bodies to remove from the world on the next step.", "public": false, "help": ""}]}, "class": {"help": "This is your main access to the P2 Physics World.\\nFrom here you can create materials, listen for events and add bodies into the physics simulation.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Reference to the current game instance."}, {"default": null, "optional": true, "type": ["object"], "name": "config", "help": "Physics configuration object passed in from the game constructor."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addBody", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Body"], "name": "body", "help": "The Body to add to the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the Body was added successfully, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 734, "public": true, "help": "Add a body to the world."}, {"name": "addConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Constraint"], "name": "constraint", "help": "The Constraint to add to the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Constraint that was added.", "types": ["Phaser.Physics.P2.Constraint"]}, "protected": false, "static": false, "inherited": false, "line": 966, "public": true, "help": "Adds a Constraint to the world."}, {"name": "addContactMaterial", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.ContactMaterial"], "name": "material", "help": "The Contact Material to be added to the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Contact Material that was added.", "types": ["Phaser.Physics.P2.ContactMaterial"]}, "protected": false, "static": false, "inherited": false, "line": 1000, "public": true, "help": "Adds a Contact Material to the world."}, {"name": "addSpring", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Spring", "p2.LinearSpring", "p2.RotationalSpring"], "name": "spring", "help": "The Spring to add to the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Spring that was added.", "types": ["Phaser.Physics.P2.Spring"]}, "protected": false, "static": false, "inherited": false, "line": 778, "public": true, "help": "Adds a Spring to the world."}, {"name": "beginContactHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The event data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 418, "public": true, "help": "Handles a p2 begin contact event."}, {"name": "clear", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 696, "public": true, "help": "Clears all bodies from the simulation, resets callbacks and resets the collision bitmask."}, {"name": "clearTilemapLayerBodies", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tilemap"], "name": "map", "help": "The Tilemap to get the map data from."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to map.currentLayer."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1511, "public": true, "help": "Clears all physics bodies from the given TilemapLayer that were created with `World.convertTilemap`."}, {"name": "convertCollisionObjects", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tilemap"], "name": "map", "help": "The Tilemap to get the map data from."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to map.currentLayer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "addToWorld", "help": "If true it will automatically add each body to the world."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of the Phaser.Physics.Body objects that have been created.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1473, "public": true, "help": "Converts all of the polylines objects inside a Tiled ObjectGroup into physics bodies that are added to the world.\\nNote that the polylines must be created in such a way that they can withstand polygon decomposition."}, {"name": "convertTilemap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tilemap"], "name": "map", "help": "The Tilemap to get the map data from."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to map.currentLayer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "addToWorld", "help": "If true it will automatically add each body to the world, otherwise it's up to you to do so."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "optimize", "help": "If true adjacent colliding tiles will be combined into a single body to save processing. However it means you cannot perform specific Tile to Body collision responses."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of the Phaser.Physics.P2.Body objects that were created.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1539, "public": true, "help": "Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics bodies.\\nOnly call this *after* you have specified all of the tiles you wish to collide with calls like Tilemap.setCollisionBetween, etc.\\nEvery time you call this method it will destroy any previously created bodies and remove them from the world.\\nTherefore understand it's a very expensive operation and not to be done in a core game update loop."}, {"name": "createBody", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of Body."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of Body."}, {"default": null, "optional": false, "type": ["number"], "name": "mass", "help": "The mass of the Body. A mass of 0 means a 'static' Body is created."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToWorld", "help": "Automatically add this Body to the world? (usually false as it won't have any shapes on construction)."}, {"default": null, "optional": false, "type": ["object"], "name": "options", "help": "An object containing the build options:"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "options.optimalDecomp", "help": "Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "options.skipSimpleCheck", "help": "Set to true if you already know that the path is not intersecting itself."}, {"default": "false", "optional": true, "type": ["boolean", "number"], "name": "options.removeCollinearPoints", "help": "Set to a number (angle threshold value) to remove collinear points, or false to keep all points."}, {"default": null, "optional": false, "type": ["array number", "number"], "name": "points", "help": "An array of 2d vectors that form the convex or concave polygon."}], "inheritedFrom": "", "private": false, "returns": {"help": "The body", "types": ["Phaser.Physics.P2.Body"]}, "protected": false, "static": false, "inherited": false, "line": 1397, "public": true, "help": "Creates a new Body and adds it to the World.\\n\\nEither [[0,0], [0,1],...] or a flat array of numbers that will be interpreted as [x,y, x,y, ...],\\nor the arguments passed can be flat x,y values e.g. `setPolygon(options, x,y, x,y, x,y, ...)` where `x` and `y` are numbers."}, {"name": "createCollisionGroup", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Group", "Phaser.Sprite"], "name": "object", "help": "An optional Sprite or Group to apply the Collision Group to. If a Group is given it will be applied to all top-level children."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1256, "public": true, "help": "Creates a new Collision Group and optionally applies it to the given object.\\nCollision Groups are handled using bitmasks, therefore you have a fixed limit you can create before you need to re-use older groups."}, {"name": "createContactMaterial", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Physics.P2.Material"], "name": "materialA", "help": "The first Material to create the ContactMaterial from. If undefined it will create a new Material object first."}, {"default": null, "optional": true, "type": ["Phaser.Physics.P2.Material"], "name": "materialB", "help": "The second Material to create the ContactMaterial from. If undefined it will create a new Material object first."}, {"default": null, "optional": true, "type": ["object"], "name": "options", "help": "Material options object."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Contact Material that was created.", "types": ["Phaser.Physics.P2.ContactMaterial"]}, "protected": false, "static": false, "inherited": false, "line": 1095, "public": true, "help": "Creates a Contact Material from the two given Materials. You can then edit the properties of the Contact Material directly."}, {"name": "createDistanceConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": false, "type": ["number"], "name": "distance", "help": "The distance to keep between the bodies."}, {"default": null, "optional": true, "type": ["array"], "name": "localAnchorA", "help": "The anchor point for bodyA, defined locally in bodyA frame. Defaults to [0,0]."}, {"default": null, "optional": true, "type": ["array"], "name": "localAnchorB", "help": "The anchor point for bodyB, defined locally in bodyB frame. Defaults to [0,0]."}, {"default": null, "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}], "inheritedFrom": "", "private": false, "returns": {"help": "The constraint", "types": ["Phaser.Physics.P2.DistanceConstraint"]}, "protected": false, "static": false, "inherited": false, "line": 831, "public": true, "help": "Creates a constraint that tries to keep the distance between two bodies constant."}, {"name": "createGearConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": "0", "optional": true, "type": ["number"], "name": "angle", "help": "The relative angle"}, {"default": "1", "optional": true, "type": ["number"], "name": "ratio", "help": "The gear ratio."}], "inheritedFrom": "", "private": false, "returns": {"help": "The constraint", "types": ["Phaser.Physics.P2.GearConstraint"]}, "protected": false, "static": false, "inherited": false, "line": 857, "public": true, "help": "Creates a constraint that tries to keep the distance between two bodies constant."}, {"name": "createLockConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": true, "type": ["array"], "name": "offset", "help": "The offset of bodyB in bodyA's frame. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": "0", "optional": true, "type": ["number"], "name": "angle", "help": "The angle of bodyB in bodyA's frame."}, {"default": null, "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}], "inheritedFrom": "", "private": false, "returns": {"help": "The constraint", "types": ["Phaser.Physics.P2.LockConstraint"]}, "protected": false, "static": false, "inherited": false, "line": 913, "public": true, "help": "Locks the relative position between two bodies."}, {"name": "createMaterial", "parameters": [{"default": null, "optional": true, "type": ["string"], "name": "name", "help": "Optional name of the Material. Each Material has a unique ID but string names are handy for debugging."}, {"default": null, "optional": true, "type": ["Phaser.Physics.P2.Body"], "name": "body", "help": "Optional Body. If given it will assign the newly created Material to the Body shapes."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Material that was created. This is also stored in Phaser.Physics.P2.materials.", "types": ["Phaser.Physics.P2.Material"]}, "protected": false, "static": false, "inherited": false, "line": 1069, "public": true, "help": "Creates a Material. Materials are applied to Shapes owned by a Body and can be set with Body.setMaterial().\\nMaterials are a way to control what happens when Shapes collide. Combine unique Materials together to create Contact Materials.\\nContact Materials have properties such as friction and restitution that allow for fine-grained collision control between different Materials."}, {"name": "createParticle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of Body."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of Body."}, {"default": null, "optional": false, "type": ["number"], "name": "mass", "help": "The mass of the Body. A mass of 0 means a 'static' Body is created."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToWorld", "help": "Automatically add this Body to the world? (usually false as it won't have any shapes on construction)."}, {"default": null, "optional": false, "type": ["object"], "name": "options", "help": "An object containing the build options:"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "options.optimalDecomp", "help": "Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "options.skipSimpleCheck", "help": "Set to true if you already know that the path is not intersecting itself."}, {"default": "false", "optional": true, "type": ["boolean", "number"], "name": "options.removeCollinearPoints", "help": "Set to a number (angle threshold value) to remove collinear points, or false to keep all points."}, {"default": null, "optional": false, "type": ["array number", "number"], "name": "points", "help": "An array of 2d vectors that form the convex or concave polygon."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1438, "public": true, "help": "Creates a new Particle and adds it to the World.\\n\\nEither [[0,0], [0,1],...] or a flat array of numbers that will be interpreted as [x,y, x,y, ...],\\nor the arguments passed can be flat x,y values e.g. `setPolygon(options, x,y, x,y, x,y, ...)` where `x` and `y` are numbers."}, {"name": "createPrismaticConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "lockRotation", "help": "If set to false, bodyB will be free to rotate around its anchor point."}, {"default": null, "optional": true, "type": ["array"], "name": "anchorA", "help": "Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "anchorB", "help": "Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "axis", "help": "An axis, defined in body A frame, that body B's anchor point may slide along. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}], "inheritedFrom": "", "private": false, "returns": {"help": "The constraint", "types": ["Phaser.Physics.P2.PrismaticConstraint"]}, "protected": false, "static": false, "inherited": false, "line": 943, "public": true, "help": "Constraint that only allows bodies to move along a line, relative to each other.\\nSee http://www.iforce2d.net/b2dtut/joints-prismatic"}, {"name": "createRevoluteConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["array"], "name": "pivotA", "help": "The point relative to the center of mass of bodyA which bodyA is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": false, "type": ["array"], "name": "pivotB", "help": "The point relative to the center of mass of bodyB which bodyB is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": "0", "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}, {"default": "null", "optional": true, "type": ["Float32Array"], "name": "worldPivot", "help": "A pivot point given in world coordinates. If specified, localPivotA and localPivotB are automatically computed from this value."}], "inheritedFrom": "", "private": false, "returns": {"help": "The constraint", "types": ["Phaser.Physics.P2.RevoluteConstraint"]}, "protected": false, "static": false, "inherited": false, "line": 886, "public": true, "help": "Connects two bodies at given offset points, letting them rotate relative to each other around this point.\\nThe pivot points are given in world (pixel) coordinates."}, {"name": "createRotationalSpring", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": true, "type": ["number"], "name": "restAngle", "help": "The relative angle of bodies at which the spring is at rest. If not given, it's set to the current relative angle between the bodies."}, {"default": "100", "optional": true, "type": ["number"], "name": "stiffness", "help": "Stiffness of the spring. A number >= 0."}, {"default": "1", "optional": true, "type": ["number"], "name": "damping", "help": "Damping of the spring. A number >= 0."}], "inheritedFrom": "", "private": false, "returns": {"help": "The spring", "types": ["Phaser.Physics.P2.RotationalSpring"]}, "protected": false, "static": false, "inherited": false, "line": 1364, "public": true, "help": "Creates a rotational spring, connecting two bodies. A spring can have a resting length, a stiffness and damping."}, {"name": "createSpring", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Physics.P2.Body", "p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": "1", "optional": true, "type": ["number"], "name": "restLength", "help": "Rest length of the spring. A number > 0."}, {"default": "100", "optional": true, "type": ["number"], "name": "stiffness", "help": "Stiffness of the spring. A number >= 0."}, {"default": "1", "optional": true, "type": ["number"], "name": "damping", "help": "Damping of the spring. A number >= 0."}, {"default": null, "optional": true, "type": ["array"], "name": "worldA", "help": "Where to hook the spring to body A in world coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "worldB", "help": "Where to hook the spring to body B in world coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "localA", "help": "Where to hook the spring to body A in local body coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "localB", "help": "Where to hook the spring to body B in local body coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32]."}], "inheritedFrom": "", "private": false, "returns": {"help": "The spring", "types": ["Phaser.Physics.P2.Spring"]}, "protected": false, "static": false, "inherited": false, "line": 1337, "public": true, "help": "Creates a linear spring, connecting two bodies. A spring can have a resting length, a stiffness and damping."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 719, "public": true, "help": "Clears all bodies from the simulation and unlinks World from Game. Should only be called on game shutdown. Call `clear` on a State change."}, {"name": "enable", "parameters": [{"default": null, "optional": false, "type": ["object", "array", "Phaser.Group"], "name": "object", "help": "The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "debug", "help": "Create a debug object to go with this body?"}, {"default": "true", "optional": true, "type": ["boolean"], "name": "children", "help": "Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 235, "public": true, "help": "This will create a P2 Physics body on the given game object or array of game objects.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.\\nNote: When the game object is enabled for P2 physics it has its anchor x/y set to 0.5 so it becomes centered."}, {"name": "enableBody", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "The game object to create the physics body on. A body will only be created if this object has a null `body` property."}, {"default": null, "optional": false, "type": ["boolean"], "name": "debug", "help": "Create a debug object to go with this body?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 292, "public": true, "help": "Creates a P2 Physics body on the given game object.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the body is nulled."}, {"name": "endContactHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The event data."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 440, "public": true, "help": "Handles a p2 end contact event."}, {"name": "getBodies", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "An array containing all current Bodies in the world.", "types": ["array Phaser.Physics.P2.Body"]}, "protected": false, "static": false, "inherited": false, "line": 1112, "public": true, "help": "Populates and returns an array with references to of all current Bodies in the world."}, {"name": "getBody", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "The object to check for a p2.Body on."}], "inheritedFrom": "", "private": false, "returns": {"help": "The p2.Body, or null if not found.", "types": ["p2.Body"]}, "protected": false, "static": false, "inherited": false, "line": 1133, "public": true, "help": "Checks the given object to see if it has a p2.Body and if so returns it."}, {"name": "getConstraints", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "An array containing all current Constraints in the world.", "types": ["array Phaser.Physics.P2.Constraint"]}, "protected": false, "static": false, "inherited": false, "line": 1181, "public": true, "help": "Populates and returns an array of all current Constraints in the world."}, {"name": "getContactMaterial", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "materialA", "help": "The first Material to search for."}, {"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "materialB", "help": "The second Material to search for."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Contact Material or false if none was found matching the Materials given.", "types": ["Phaser.Physics.P2.ContactMaterial", "boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1035, "public": true, "help": "Gets a Contact Material based on the two given Materials."}, {"name": "getSprings", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "An array containing all current Springs in the world.", "types": ["array Phaser.Physics.P2.Spring"]}, "protected": false, "static": false, "inherited": false, "line": 1161, "public": true, "help": "Populates and returns an array of all current Springs in the world."}, {"name": "hitTest", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "worldPoint", "help": "Point to use for intersection tests. The points values must be in world (pixel) coordinates."}, {"default": null, "optional": true, "type": ["array Phaser.Physics.P2.Bod", "Phaser.Sprite", "p2.Body>"], "name": "bodies", "help": "A list of objects to check for intersection. If not given it will check Phaser.Physics.P2.world.bodies (i.e. all world bodies)"}, {"default": "5", "optional": true, "type": ["number"], "name": "precision", "help": "Used for matching against particles and lines. Adds some margin to these infinitesimal objects."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "filterStatic", "help": "If true all Static objects will be removed from the results array."}], "inheritedFrom": "", "private": false, "returns": {"help": "Array of bodies that overlap the point.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1206, "public": true, "help": "Test if a world point overlaps bodies. You will get an array of actual P2 bodies back. You can find out which Sprite a Body belongs to\\n(if any) by checking the Body.parent.sprite property. Body.parent is a Phaser.Physics.P2.Body property."}, {"name": "mpx", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "v", "help": "The value to convert."}], "inheritedFrom": "", "private": false, "returns": {"help": "The scaled value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1624, "public": true, "help": "Convert p2 physics value (meters) to pixel scale.\\nBy default Phaser uses a scale of 20px per meter.\\nIf you need to modify this you can over-ride these functions via the Physics Configuration object."}, {"name": "mpxi", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "v", "help": "The value to convert."}], "inheritedFrom": "", "private": false, "returns": {"help": "The scaled value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1654, "public": true, "help": "Convert p2 physics value (meters) to pixel scale and inverses it.\\nBy default Phaser uses a scale of 20px per meter.\\nIf you need to modify this you can over-ride these functions via the Physics Configuration object."}, {"name": "pause", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 650, "public": true, "help": "Pauses the P2 World independent of the game pause state."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 212, "public": true, "help": "Called at the start of the core update loop. Purges flagged bodies from the world."}, {"name": "pxm", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "v", "help": "The value to convert."}], "inheritedFrom": "", "private": false, "returns": {"help": "The scaled value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1639, "public": true, "help": "Convert pixel value to p2 physics scale (meters).\\nBy default Phaser uses a scale of 20px per meter.\\nIf you need to modify this you can over-ride these functions via the Physics Configuration object."}, {"name": "pxmi", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "v", "help": "The value to convert."}], "inheritedFrom": "", "private": false, "returns": {"help": "The scaled value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1669, "public": true, "help": "Convert pixel value to p2 physics scale (meters) and inverses it.\\nBy default Phaser uses a scale of 20px per meter.\\nIf you need to modify this you can over-ride these functions via the Physics Configuration object."}, {"name": "removeBody", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Body"], "name": "body", "help": "The Body to remove from the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Body that was removed.", "types": ["Phaser.Physics.P2.Body"]}, "protected": false, "static": false, "inherited": false, "line": 758, "public": true, "help": "Removes a body from the world. This will silently fail if the body wasn't part of the world to begin with."}, {"name": "removeBodyNextStep", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Body"], "name": "body", "help": "The body to remove at the start of the next step."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 201, "public": true, "help": "This will add a P2 Physics body into the removal list for the next step."}, {"name": "removeConstraint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Constraint"], "name": "constraint", "help": "The Constraint to be removed from the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Constraint that was removed.", "types": ["Phaser.Physics.P2.Constraint"]}, "protected": false, "static": false, "inherited": false, "line": 983, "public": true, "help": "Removes a Constraint from the world."}, {"name": "removeContactMaterial", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.ContactMaterial"], "name": "material", "help": "The Contact Material to be removed from the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Contact Material that was removed.", "types": ["Phaser.Physics.P2.ContactMaterial"]}, "protected": false, "static": false, "inherited": false, "line": 1017, "public": true, "help": "Removes a Contact Material from the world."}, {"name": "removeSpring", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Spring"], "name": "spring", "help": "The Spring to remove from the World."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Spring that was removed.", "types": ["Phaser.Physics.P2.Spring"]}, "protected": false, "static": false, "inherited": false, "line": 802, "public": true, "help": "Removes a Spring from the world."}, {"name": "resume", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 661, "public": true, "help": "Resumes a paused P2 World."}, {"name": "setBounds", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left corner of the bounds."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left corner of the bounds."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the bounds."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the bounds."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "left", "help": "If true will create the left bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "right", "help": "If true will create the right bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "top", "help": "If true will create the top bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "bottom", "help": "If true will create the bottom bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "setCollisionGroup", "help": "If true the Bounds will be set to use its own Collision Group."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 563, "public": true, "help": "Sets the bounds of the Physics world to match the given world pixel dimensions.\\nYou can optionally set which 'walls' to create: left, right, top or bottom."}, {"name": "setBoundsToWorld", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "left", "help": "If true will create the left bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "right", "help": "If true will create the right bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "top", "help": "If true will create the top bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "bottom", "help": "If true will create the bottom bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "setCollisionGroup", "help": "If true the Bounds will be set to use its own Collision Group."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 467, "public": true, "help": "Sets the bounds of the Physics world to match the Game.World dimensions.\\nYou can optionally set which 'walls' to create: left, right, top or bottom."}, {"name": "setCollisionGroup", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Group", "Phaser.Sprite"], "name": "object", "help": "A Sprite or Group to apply the Collision Group to. If a Group is given it will be applied to all top-level children."}, {"default": null, "optional": false, "type": ["Phaser.Physics.CollisionGroup"], "name": "group", "help": "The Collision Group that this Bodies shapes will use."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1303, "public": true, "help": "Sets the given CollisionGroup to be the collision group for all shapes in this Body, unless a shape is specified.\\nNote that this resets the collisionMask and any previously set groups. See Body.collides() for appending them."}, {"name": "setImpactEvents", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "Set to true to enable impact events, or false to disable."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 310, "public": true, "help": "Impact event handling is disabled by default. Enable it before any impact events will be dispatched.\\nIn a busy world hundreds of impact events can be generated every step, so only enable this if you cannot do what you need via beginContact or collision masks."}, {"name": "setMaterial", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "material", "help": "The Material to be applied to the given Bodies."}, {"default": null, "optional": false, "type": ["array Phaser.Physics.P2.Body"], "name": "bodies", "help": "An Array of Body objects that the given Material will be set on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1048, "public": true, "help": "Sets the given Material against all Shapes owned by all the Bodies in the given array."}, {"name": "setPostBroadphaseCallback", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will receive the postBroadphase event data. It must return a boolean. Set to null to disable an existing callback."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context under which the callback will be fired."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 333, "public": true, "help": "Sets a callback to be fired after the Broadphase has collected collision pairs in the world.\\nJust because a pair exists it doesn't mean they *will* collide, just that they potentially could do.\\nIf your calback returns `false` the pair will be removed from the narrowphase. This will stop them testing for collision this step.\\nReturning `true` from the callback will ensure they are checked in the narrowphase."}, {"name": "setWorldMaterial", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2.Material"], "name": "material", "help": "The material to set."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "left", "help": "If true will set the material on the left bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "right", "help": "If true will set the material on the right bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "top", "help": "If true will set the material on the top bounds wall."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "bottom", "help": "If true will set the material on the bottom bounds wall."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 483, "public": true, "help": "Sets the given material against the 4 bounds of this World."}, {"name": "toJSON", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A JSON representation of the world.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1243, "public": true, "help": "Converts the current world into a JSON object."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 672, "public": true, "help": "Internal P2 update loop."}, {"name": "updateBoundsCollisionGroup", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "setCollisionGroup", "help": "If true the Bounds will be set to use its own Collision Group."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 520, "public": true, "help": "By default the World will be set to collide everything with everything. The bounds of the world is a Body with 4 shapes, one for each face.\\nIf you start to use your own collision groups then your objects will no longer collide with the bounds.\\nTo fix this you need to adjust the bounds to use its own collision group first BEFORE changing your Sprites collision group."}], "private": [{"name": "impactHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The event data."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 380, "public": false, "help": "Handles a p2 impact event."}, {"name": "postBroadphaseHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The event data."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 356, "public": false, "help": "Internal handler for the postBroadphase event."}]}}, {"properties": {"protected": [], "public": [{"name": "data", "default": null, "type": ["p2.LinearSpring"], "private": false, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "The actual p2 spring object.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "Creates a linear spring, connecting two bodies. A spring can have a resting length, a stiffness and damping.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": "1", "optional": true, "type": ["number"], "name": "restLength", "help": "Rest length of the spring. A number > 0."}, {"default": "100", "optional": true, "type": ["number"], "name": "stiffness", "help": "Stiffness of the spring. A number >= 0."}, {"default": "1", "optional": true, "type": ["number"], "name": "damping", "help": "Damping of the spring. A number >= 0."}, {"default": null, "optional": true, "type": ["array"], "name": "worldA", "help": "Where to hook the spring to body A in world coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "worldB", "help": "Where to hook the spring to body B in world coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "localA", "help": "Where to hook the spring to body A in local body coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": true, "type": ["array"], "name": "localB", "help": "Where to hook the spring to body B in local body coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32]."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.Spring"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "buttonCode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "The buttoncode of this button.", "public": true, "help": ""}, {"name": "duration", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "The number of milliseconds this button has been held down for.", "public": true, "help": "If the button is down this value holds the duration of that button press and is constantly updated.\\nIf the button is up it holds the duration of the previous down session."}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "isDown", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "The \"down\" state of the button.", "public": true, "help": ""}, {"name": "isUp", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "The \"up\" state of the button.", "public": true, "help": ""}, {"name": "onDown", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "This Signal is dispatched every time this GamepadButton is pressed down. It is only dispatched once (until the button is released again).", "public": true, "help": ""}, {"name": "onFloat", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "This Signal is dispatched every time this GamepadButton changes floating value (between (but not exactly) 0 and 1)", "public": true, "help": ""}, {"name": "onUp", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "This Signal is dispatched every time this GamepadButton is pressed down. It is only dispatched once (until the button is released again).", "public": true, "help": ""}, {"name": "pad", "default": null, "type": ["Phaser.SinglePad"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the gamepad that owns this button.", "public": true, "help": ""}, {"name": "repeats", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "If a button is held down this holds down the number of times the button has 'repeated'.", "public": true, "help": ""}, {"name": "timeDown", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The timestamp when the button was last pressed down.", "public": true, "help": ""}, {"name": "timeUp", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The timestamp when the button was last released.", "public": true, "help": ""}, {"name": "value", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "Button value. Mainly useful for checking analog buttons (like shoulder triggers)", "public": true, "help": ""}], "private": []}, "class": {"help": "If you need more fine-grained control over the handling of specific buttons you can create and use Phaser.GamepadButton objects.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.SinglePad"], "name": "pad", "help": "A reference to the gamepad that owns this button."}, {"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The button code this GamepadButton is responsible for."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.GamepadButton"}, "consts": [], "methods": {"protected": [{"name": "processButtonDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "Button value"}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 103, "public": false, "help": "Called automatically by Phaser.SinglePad."}, {"name": "processButtonFloat", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "Button value"}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 141, "public": false, "help": "Called automatically by Phaser.SinglePad."}, {"name": "processButtonUp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "Button value"}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 123, "public": false, "help": "Called automatically by Phaser.SinglePad."}], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 199, "public": true, "help": "Destroys this GamepadButton, this disposes of the onDown, onUp and onFloat signals and clears the pad and game references."}, {"name": "justPressed", "parameters": [{"default": "250", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the button is considered as being just released."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the button is just pressed otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 171, "public": true, "help": "Returns the \"just released\" state of this button. Just released is considered as being true if the button was released within the duration given (default 250ms)."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 184, "public": true, "help": "Resets this GamepadButton, changing it to an isUp state and resetting the duration and repeats counters."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "active", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "A Plugin with active=true has its preUpdate and update methods called by the parent, otherwise they are skipped.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "hasPostRender", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "A flag to indicate if this plugin has a postRender method.", "public": true, "help": ""}, {"name": "hasPostUpdate", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "A flag to indicate if this plugin has a postUpdate method.", "public": true, "help": ""}, {"name": "hasPreUpdate", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "A flag to indicate if this plugin has a preUpdate method.", "public": true, "help": ""}, {"name": "hasRender", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "A flag to indicate if this plugin has a render method.", "public": true, "help": ""}, {"name": "hasUpdate", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "A flag to indicate if this plugin has an update method.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "The parent of this plugin. If added to the PluginManager the parent will be set to that, otherwise it will be null.", "public": true, "help": ""}, {"name": "visible", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "A Plugin with visible=true has its render and postRender methods called by the parent, otherwise they are skipped.", "public": true, "help": ""}], "private": []}, "class": {"help": "This is a base Plugin template to use for any Phaser plugin development.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["any"], "name": "parent", "help": "The object that owns this plugin, usually Phaser.PluginManager."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Plugin"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 111, "public": true, "help": "Clear down this Plugin and null out references"}, {"name": "postRender", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 104, "public": true, "help": "Post-render is called after the Game Renderer and State.render have run.\\nIt is only called if visible is set to true."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 80, "public": true, "help": "Pre-update is called at the very start of the update cycle, before any other subsystems have been updated (including Physics).\\nIt is only called if active is set to true."}, {"name": "render", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 96, "public": true, "help": "Render is called right after the Game Renderer completes, but before the State.render.\\nIt is only called if visible is set to true."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 88, "public": true, "help": "Update is called after all the core subsystems (Input, Tweens, Sound, etc) and the State have updated, but before the render.\\nIt is only called if active is set to true."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "cacheStepsPerColorChannel", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 209, "inlineHelp": "", "public": true, "help": "Number of steps which will be used as a cap when rounding colors."}, {"name": "canUseMultiply", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 225, "inlineHelp": "", "public": true, "help": "Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method."}, {"name": "convertTintToImage", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 217, "inlineHelp": "", "public": true, "help": "Tint cache boolean flag."}], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.CanvasTinter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "getTintedTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Sprite"], "name": "sprite", "help": "the sprite to tint"}, {"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color to use to tint the sprite with"}], "inheritedFrom": "", "private": false, "returns": {"help": "The tinted canvas", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 22, "public": true, "help": "Basically this method just needs a sprite and a color and tints the sprite with the given color."}, {"name": "roundColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color to round, should be a hex color"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 190, "public": true, "help": "Rounds the specified color according to the PIXI.CanvasTinter.cacheStepsPerColorChannel."}, {"name": "tintMethod", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 232, "public": true, "help": "The tinting method that will be used."}, {"name": "tintPerPixel", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "the texture to tint"}, {"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color to use to tint the sprite with"}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "the current canvas"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 147, "public": true, "help": "Tint a texture pixel per pixel."}, {"name": "tintWithMultiply", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "the texture to tint"}, {"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color to use to tint the sprite with"}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "the current canvas"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 66, "public": true, "help": "Tint a texture using the \"multiply\" operation."}, {"name": "tintWithOverlay", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "the texture to tint"}, {"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color to use to tint the sprite with"}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "the current canvas"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 112, "public": true, "help": "Tint a texture using the \"overlay\" operation."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "add", "default": null, "type": ["Phaser.GameObjectFactory"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "Reference to the Phaser.GameObjectFactory.", "public": true, "help": ""}, {"name": "antialias", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "Anti-alias graphics. By default scaled images are smoothed in Canvas and WebGL, set anti-alias to false to disable this globally.", "public": true, "help": ""}, {"name": "cache", "default": null, "type": ["Phaser.Cache"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "Reference to the assets cache.", "public": true, "help": ""}, {"name": "camera", "default": null, "type": ["Phaser.Camera"], "private": false, "readOnly": false, "protected": false, "line": 192, "inlineHelp": "A handy reference to world.camera.", "public": true, "help": ""}, {"name": "canvas", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 197, "inlineHelp": "A handy reference to renderer.view, the canvas that the game is being rendered in to.", "public": true, "help": ""}, {"name": "config", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "The Phaser.Game configuration object.", "public": true, "help": ""}, {"name": "context", "default": null, "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 202, "inlineHelp": "A handy reference to renderer.context (only set for CANVAS games, not WebGL)", "public": true, "help": ""}, {"name": "debug", "default": null, "type": ["Phaser.Utils.Debug"], "private": false, "readOnly": false, "protected": false, "line": 207, "inlineHelp": "A set of useful debug utilitie.", "public": true, "help": ""}, {"name": "device", "default": null, "type": ["Phaser.Device"], "private": false, "readOnly": false, "protected": false, "line": 187, "inlineHelp": "Contains device information and capabilities.", "public": true, "help": ""}, {"name": "height", "default": "600", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "The calculated game height in pixels.", "public": true, "help": ""}, {"name": "id", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "Is game running or paused?", "public": true, "help": ""}, {"name": "input", "default": null, "type": ["Phaser.Input"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "Reference to the input manager", "public": true, "help": ""}, {"name": "isBooted", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "Whether the game engine is booted, aka available.", "public": true, "help": ""}, {"name": "load", "default": null, "type": ["Phaser.Loader"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "Reference to the assets loader.", "public": true, "help": ""}, {"name": "make", "default": null, "type": ["Phaser.GameObjectCreator"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "Reference to the GameObject Creator.", "public": true, "help": ""}, {"name": "math", "default": null, "type": ["Phaser.Math"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "Reference to the math helper.", "public": true, "help": ""}, {"name": "net", "default": null, "type": ["Phaser.Net"], "private": false, "readOnly": false, "protected": false, "line": 142, "inlineHelp": "Reference to the network class.", "public": true, "help": ""}, {"name": "onBlur", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 248, "inlineHelp": "This event is fired when the game no longer has focus (typically on page hide).", "public": true, "help": ""}, {"name": "onFocus", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 253, "inlineHelp": "This event is fired when the game has focus (typically on page show).", "public": true, "help": ""}, {"name": "onPause", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 238, "inlineHelp": "This event is fired when the game pauses.", "public": true, "help": ""}, {"name": "onResume", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 243, "inlineHelp": "This event is fired when the game resumes from a paused state.", "public": true, "help": ""}, {"name": "parent", "default": "''", "type": ["string", "HTMLElement"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "The Games DOM parent.", "public": true, "help": ""}, {"name": "particles", "default": null, "type": ["Phaser.Particles"], "private": false, "readOnly": false, "protected": false, "line": 212, "inlineHelp": "The Particle Manager.", "public": true, "help": ""}, {"name": "paused", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 865, "inlineHelp": "Gets and sets the paused state of the Game.", "public": true, "help": "The paused state of the Game. A paused game doesn't update any of its subsystems.\\nWhen a game is paused the onPause event is dispatched. When it is resumed the onResume event is dispatched."}, {"name": "pendingStep", "default": "false", "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 226, "inlineHelp": "An internal property used by enableStep, but also useful to query from your own game objects.", "public": true, "help": ""}, {"name": "physics", "default": null, "type": ["Phaser.Physics"], "private": false, "readOnly": false, "protected": false, "line": 177, "inlineHelp": "Reference to the physics manager.", "public": true, "help": ""}, {"name": "physicsConfig", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "The Phaser.Physics.World configuration object.", "public": true, "help": ""}, {"name": "preserveDrawingBuffer", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "The value of the preserveDrawingBuffer flag affects whether or not the contents of the stencil buffer is retained after rendering.", "public": true, "help": ""}, {"name": "raf", "default": null, "type": ["Phaser.RequestAnimationFrame"], "private": false, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "Automatically handles the core game loop via requestAnimationFrame or setTimeout", "public": true, "help": ""}, {"name": "renderType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "The Renderer this game will use. Either Phaser.AUTO, Phaser.CANVAS or Phaser.WEBGL.", "public": true, "help": ""}, {"name": "renderer", "default": null, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "The Pixi Renderer.", "public": true, "help": ""}, {"name": "rnd", "default": null, "type": ["Phaser.RandomDataGenerator"], "private": false, "readOnly": false, "protected": false, "line": 182, "inlineHelp": "Instance of repeatable random data generator helper.", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.ScaleManager"], "private": false, "readOnly": false, "protected": false, "line": 147, "inlineHelp": "The game scale manager.", "public": true, "help": ""}, {"name": "sound", "default": null, "type": ["Phaser.SoundManager"], "private": false, "readOnly": false, "protected": false, "line": 152, "inlineHelp": "Reference to the sound manager.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["Phaser.Stage"], "private": false, "readOnly": false, "protected": false, "line": 157, "inlineHelp": "Reference to the stage.", "public": true, "help": ""}, {"name": "state", "default": null, "type": ["Phaser.StateManager"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "The StateManager.", "public": true, "help": ""}, {"name": "stepCount", "default": "0", "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 233, "inlineHelp": "When stepping is enabled this contains the current step cycle.", "public": true, "help": ""}, {"name": "stepping", "default": "false", "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 219, "inlineHelp": "Enable core loop stepping with Game.enableStep().", "public": true, "help": ""}, {"name": "time", "default": null, "type": ["Phaser.Time"], "private": false, "readOnly": false, "protected": false, "line": 162, "inlineHelp": "Reference to the core game clock.", "public": true, "help": ""}, {"name": "transparent", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "Use a transparent canvas background or not.", "public": true, "help": ""}, {"name": "tweens", "default": null, "type": ["Phaser.TweenManager"], "private": false, "readOnly": false, "protected": false, "line": 167, "inlineHelp": "Reference to the tween manager.", "public": true, "help": ""}, {"name": "width", "default": "800", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "The calculated game width in pixels.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.World"], "private": false, "readOnly": false, "protected": false, "line": 172, "inlineHelp": "Reference to the world.", "public": true, "help": ""}], "private": [{"name": "_codePaused", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 265, "inlineHelp": "Was the game paused via code or a visibility change?", "public": false, "help": ""}, {"name": "_paused", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 259, "inlineHelp": "Is game paused?", "public": false, "help": ""}]}, "class": {"help": "This is where the magic happens. The Game object is the heart of your game,\\nproviding quick access to common functions and handling the boot process.\\n\"Hell, there are no rules here - we're trying to accomplish something.\"\\nThomas A. Edison", "parameters": [{"default": "800", "optional": true, "type": ["number", "string"], "name": "width", "help": "The width of your game in game pixels. If given as a string the value must be between 0 and 100 and will be used as the percentage width of the parent container, or the browser window if no parent is given."}, {"default": "600", "optional": true, "type": ["number", "string"], "name": "height", "help": "The height of your game in game pixels. If given as a string the value must be between 0 and 100 and will be used as the percentage height of the parent container, or the browser window if no parent is given."}, {"default": "Phaser.AUTO", "optional": true, "type": ["number"], "name": "renderer", "help": "Which renderer to use: Phaser.AUTO will auto-detect, Phaser.WEBGL, Phaser.CANVAS or Phaser.HEADLESS (no rendering at all)."}, {"default": "''", "optional": true, "type": ["string", "HTMLElement"], "name": "parent", "help": "The DOM element into which this games canvas will be injected. Either a DOM ID (string) or the element itself."}, {"default": "null", "optional": true, "type": ["object"], "name": "state", "help": "The default state object. A object consisting of Phaser.State functions (preload, create, update, render) or null."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "transparent", "help": "Use a transparent canvas background or not."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "antialias", "help": "Draw all image textures anti-aliased or not. The default is for smooth textures, but disable if your game features pixel art."}, {"default": "null", "optional": true, "type": ["object"], "name": "physicsConfig", "help": "A physics configuration object to pass to the Physics world on creation."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Game"}, "consts": [], "methods": {"protected": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 421, "public": false, "help": "Initialize engine sub modules and start the game."}, {"name": "focusGain", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The DOM event that caused the game to pause, if any."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 844, "public": false, "help": "Called by the Stage visibility handler."}, {"name": "focusLoss", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The DOM event that caused the game to pause, if any."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 826, "public": false, "help": "Called by the Stage visibility handler."}, {"name": "gamePaused", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The DOM event that caused the game to pause, if any."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 785, "public": false, "help": "Called by the Stage visibility handler."}, {"name": "gameResumed", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "event", "help": "The DOM event that caused the game to pause, if any."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 805, "public": false, "help": "Called by the Stage visibility handler."}, {"name": "parseConfig", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 346, "public": false, "help": "Parses a Game configuration object."}, {"name": "setUpRenderer", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 569, "public": false, "help": "Checks if the device is capable of using the requested renderer and sets it up or an alternative if not."}, {"name": "showDebugHeader", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 507, "public": false, "help": "Displays a Phaser version debug header in the console."}, {"name": "update", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "time", "help": "The current time as provided by RequestAnimationFrame."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 645, "public": false, "help": "The core game loop."}], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 752, "public": true, "help": "Nukes the entire game from orbit."}, {"name": "disableStep", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 727, "public": true, "help": "Disables core game loop stepping."}, {"name": "enableStep", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 714, "public": true, "help": "Enable core game loop stepping. When enabled you must call game.step() directly (perhaps via a DOM button?)\\nCalling step will advance the game loop by one frame. This is extremely useful for hard to track down errors!"}, {"name": "step", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 740, "public": true, "help": "When stepping is enabled you must call this function directly (perhaps via a DOM button?) to advance the game loop by one frame.\\nThis is extremely useful to hard to track down errors! Use the internal stepCount property to monitor progress."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "canvas", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": "The canvas element that everything is drawn to"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "context", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "", "public": true, "help": "The canvas 2d context that everything is drawn with"}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "", "public": true, "help": "The height of the Text, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "The resolution of the canvas."}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "The width of the Text, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": []}, "class": {"help": "A Text Object will create a line or multiple lines of text. To split a line you can use '\\n' in your text string,\\nor add a wordWrap property set to true and and wordWrapWidth property with a value in the style object.", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The copy that you would like the text to display"}, {"default": null, "optional": false, "type": ["object"], "name": "[style]", "help": "The style parameters"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.font]", "help": "default 'bold 20px Arial' The style and size of the font"}, {"default": null, "optional": false, "type": ["string", "number"], "name": "[style.fill='black']", "help": "A canvas fillstyle that will be used on the text e.g 'red', '#00FF00'"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.align='left']", "help": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text"}, {"default": null, "optional": false, "type": ["string", "number"], "name": "[style.stroke]", "help": "A canvas fillstyle that will be used on the text stroke e.g 'blue', '#FCFF00'"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.strokeThickness=0]", "help": "A number that represents the thickness of the stroke. Default is 0 (no stroke)"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[style.wordWrap=false]", "help": "Indicates if word wrap should be used"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.wordWrapWidth=100]", "help": "The width at which text will wrap, it needs wordWrap to be set to true"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[style.dropShadow=false]", "help": "Set a drop shadow for the text"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.dropShadowColor='#000000']", "help": "A fill style to be used on the dropshadow e.g 'red', '#00FF00'"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.dropShadowAngle=Math.PI/4]", "help": "Set a angle of the drop shadow"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.dropShadowDistance=5]", "help": "Set a distance of the drop shadow"}], "static": false, "constructor": true, "extends": "PIXI.Sprite", "name": "PIXI.Text"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroy", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "destroyBaseTexture", "help": "whether to destroy the base texture as well"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 497, "public": true, "help": "Destroys this text object."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setStyle", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "[style]", "help": "The style parameters"}, {"default": null, "optional": false, "type": [], "name": null, "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "[style.fill='black']", "help": "A canvas fillstyle that will be used on the text eg 'red', '#00FF00'"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.align='left']", "help": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.stroke='black']", "help": "A canvas fillstyle that will be used on the text stroke eg 'blue', '#FCFF00'"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.strokeThickness=0]", "help": "A number that represents the thickness of the stroke. Default is 0 (no stroke)"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[style.wordWrap=false]", "help": "Indicates if word wrap should be used"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.wordWrapWidth=100]", "help": "The width at which text will wrap"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[style.dropShadow=false]", "help": "Set a drop shadow for the text"}, {"default": null, "optional": false, "type": ["string"], "name": "[style.dropShadowColor='#000000']", "help": "A fill style to be used on the dropshadow e.g 'red', '#00FF00'"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.dropShadowAngle=Math.PI/4]", "help": "Set a angle of the drop shadow"}, {"default": null, "optional": false, "type": ["number"], "name": "[style.dropShadowDistance=5]", "help": "Set a distance of the drop shadow"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 127, "public": true, "help": "Set the style of the text"}, {"name": "setText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The copy that you would like the text to display"}], "inheritedFrom": "PIXI.Text", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 153, "public": true, "help": "Set the copy for the text object. To split a line you can use '\\n'."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 327, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 307, "public": false, "help": "Renders the object using the WebGL renderer"}, {"name": "determineFontProperties", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "fontStyle", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 347, "public": false, "help": "Calculates the ascent, descent and fontSize of a given fontStyle"}, {"name": "updateText", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 165, "public": false, "help": "Renders text and updates it when needed"}, {"name": "updateTexture", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 286, "public": false, "help": "Updates texture size based on canvas size"}, {"name": "wordWrap", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 451, "public": false, "help": "Applies newlines to a string to have it optimally fit into the horizontal\\nbounds set by the Text object's wordWrapWidth property."}]}}, {"properties": {"protected": [], "public": [{"name": "align", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 269, "inlineHelp": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 316, "inlineHelp": "Gets or sets the angle of rotation in degrees.", "public": true, "help": "Indicates the rotation of the Text, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 475, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The dirty state of this object."}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "If exists = false then the Sprite isn't updated by the core game loop or physics subsystem at all.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 448, "inlineHelp": "Set to true to fix this BitmapText to the Camera at its current world coordinates.", "public": true, "help": "An BitmapText that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in BitmapText.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this BitmapText was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "font", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 332, "inlineHelp": "The font the text will be rendered in, i.e. 'Arial'. Must be loaded in the browser before use.", "public": true, "help": ""}, {"name": "fontSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 355, "inlineHelp": "The size of the font in pixels.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 406, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default a Text object won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "The user defined name given to this BitmapText.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "text", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 381, "inlineHelp": "The text string to be displayed by this Text object, taking into account the style settings.", "public": true, "help": "The text string to be displayed by this Text object, taking into account the style settings."}, {"name": "textHeight", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "[read-only] The height of the overall text, different from fontSize,\\nwhich is defined in the style object"}, {"name": "textWidth", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "[read-only] The width of the overall text, different from fontSize,\\nwhich is defined in the style object"}, {"name": "tint", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 291, "inlineHelp": "The tint applied to the BitmapText. This is a hex value. Set to white to disable (0xFFFFFF)", "public": true, "help": ""}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 53, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_align", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 128, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}, {"name": "_font", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_fontSize", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_text", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_tint", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "BitmapText objects work by taking a texture file and an XML file that describes the font layout.\\n\\nOn Windows you can use the free app BMFont: http://www.angelcode.com/products/bmfont/\\nOn OS X we recommend Glyph Designer: http://www.71squared.com/en/glyphdesigner\\nFor Web there is the great Littera: http://kvazars.com/littera/", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new bitmapText object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new bitmapText object."}, {"default": null, "optional": false, "type": ["string"], "name": "font", "help": "The key of the BitmapFont as stored in Game.Cache."}, {"default": "''", "optional": true, "type": ["string"], "name": "text", "help": "The actual text that will be rendered. Can be set later via BitmapText.text."}, {"default": "32", "optional": true, "type": ["number"], "name": "size", "help": "The size the font will be rendered in, in pixels."}], "static": false, "constructor": true, "extends": "PIXI.BitmapText", "name": "Phaser.BitmapText"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 210, "public": true, "help": "Destroy this BitmapText instance. This will remove any filters and un-parent any children."}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 194, "public": true, "help": "Automatically called by World.postUpdate."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 152, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setStyle", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "style", "help": "The style parameters, contained as properties of an object"}], "inheritedFrom": "PIXI.BitmapText", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 86, "public": true, "help": "Set the style of the text\\nstyle.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\\n[style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single lines of text"}, {"name": "setText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The text that you would like displayed"}], "inheritedFrom": "PIXI.BitmapText", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 72, "public": true, "help": "Set the text string to be rendered."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 186, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "setStyle", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 139, "public": false, "help": ""}]}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "", "public": true, "help": "The strength of the blur."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "end", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "", "public": true, "help": "The Y value to end the effect at."}, {"name": "gradientBlur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "The strength of the gradient blur."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "start", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The Y value to start the effect at."}], "private": []}, "class": {"help": "A TiltShiftYFilter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.TiltShiftYFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}, {"name": "updateDelta", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 143, "public": true, "help": "Updates the filter delta values."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "map", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "", "public": true, "help": "The texture used for the displacement map. Must be power of 2 texture."}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "", "public": true, "help": "The offset used to move the displacement map."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "The multiplier used to scale the displacement result from the map calculation."}], "private": []}, "class": {"help": "The DisplacementFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\\nYou can use this filter to apply all manor of crazy warping effects\\nCurrently the r property of the texture is used offset the x and the g property of the texture is used to offset the y.", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The texture used for the displacement map * must be power of 2 texture at the moment"}], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.DisplacementFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "onTextureLoaded", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 83, "public": true, "help": "Sets the map dimensions uniforms when the texture becomes available."}, {"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "frameBuffer", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": ""}, {"name": "gl", "default": null, "type": ["PIXI.WebGLContext"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "", "public": true, "help": ""}, {"name": "scaleMode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": ""}, {"name": "texture", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the horizontal range of the filter"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the vertical range of the filter"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.FilterTexture"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clear", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 66, "public": true, "help": "Clears the filter texture."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 102, "public": true, "help": "Destroys the filter texture."}, {"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the new width of the texture"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the new height of the texture"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 81, "public": true, "help": "Resizes the texture to the specified width and height"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A useful boolean to control if the Image is alive or dead (in terms of your gameplay, it doesn't effect rendering).", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 638, "inlineHelp": "The angle of this Image in degrees.", "public": true, "help": "Indicates the rotation of the Image, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Image.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle."}, {"name": "animations", "default": null, "type": ["Phaser.AnimationManager"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)", "public": true, "help": ""}, {"name": "autoCull", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "A flag indicating if the Image should be automatically camera culled or not.", "public": true, "help": "Should this Image be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "cropRect", "default": "null", "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "The Rectangle used to crop the texture. Set this via Sprite.crop. Any time you modify this property directly you must call Sprite.updateCrop.", "public": true, "help": ""}, {"name": "debug", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Handy flag to use with Game.enableStep", "public": true, "help": ""}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "deltaX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 661, "inlineHelp": "The delta value. Positive if the motion was to the right, negative if to the left.", "public": true, "help": "Returns the delta x value. The difference between world.x now and in the previous step."}, {"name": "deltaY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 678, "inlineHelp": "The delta value. Positive if the motion was downwards, negative if upwards.", "public": true, "help": "Returns the delta y value. The difference between world.y now and in the previous step."}, {"name": "deltaZ", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 695, "inlineHelp": "The delta value.", "public": true, "help": "Returns the delta z value. The difference between rotation now and in the previous step."}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 921, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Image or its components.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "If exists = false then the Image isn't updated by the core game loop.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 860, "inlineHelp": "Set to true to fix this Image to the Camera at its current world coordinates.", "public": true, "help": "An Image that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Image.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Image was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "forceOut", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 186, "inlineHelp": "", "public": true, "help": "When the Button is touched / clicked and then released you can force it to enter a state of \"out\" instead of \"up\"."}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 743, "inlineHelp": "Gets or sets the current frame index and updates the Texture for display.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 772, "inlineHelp": "Gets or sets the current frame by name and updates the Texture for display.", "public": true, "help": ""}, {"name": "freezeFrames", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 179, "inlineHelp": "When true the Button will cease to change texture frame on all events (over, out, up, down).", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": "The height of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "inCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 729, "inlineHelp": "True if the Image bounds is within the game camera, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Image bounds are within the game camera, otherwise false if fully outside of it."}, {"name": "inWorld", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 712, "inlineHelp": "True if the Image bounds is within the game world, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Image bounds are within the game world, otherwise false if fully outside of it."}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 819, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default an Image won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "key", "default": null, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "This is the image or texture used by the Image during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "The user defined name given to this Image.", "public": true, "help": ""}, {"name": "onDownSound", "default": "null", "type": ["Phaser.Sound"], "private": false, "readOnly": false, "protected": false, "line": 124, "inlineHelp": "The Sound to be played when this Buttons Down state is activated.", "public": true, "help": ""}, {"name": "onDownSoundMarker", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 148, "inlineHelp": "The Sound Marker used in conjunction with the onDownSound.", "public": true, "help": ""}, {"name": "onInputDown", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 169, "inlineHelp": "The Signal (or event) dispatched when this Button is in an Down state.", "public": true, "help": ""}, {"name": "onInputOut", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 164, "inlineHelp": "The Signal (or event) dispatched when this Button is in an Out state.", "public": true, "help": ""}, {"name": "onInputOver", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 159, "inlineHelp": "The Signal (or event) dispatched when this Button is in an Over state.", "public": true, "help": ""}, {"name": "onInputUp", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 174, "inlineHelp": "The Signal (or event) dispatched when this Button is in an Up state.", "public": true, "help": ""}, {"name": "onOutSound", "default": "null", "type": ["Phaser.Sound"], "private": false, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "The Sound to be played when this Buttons Out state is activated.", "public": true, "help": ""}, {"name": "onOutSoundMarker", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 142, "inlineHelp": "The Sound Marker used in conjunction with the onOutSound.", "public": true, "help": ""}, {"name": "onOverMouseOnly", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "If true then onOver events (such as onOverSound) will only be triggered if the Pointer object causing them was the Mouse Pointer.", "public": true, "help": ""}, {"name": "onOverSound", "default": "null", "type": ["Phaser.Sound"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "The Sound to be played when this Buttons Over state is activated.", "public": true, "help": ""}, {"name": "onOverSoundMarker", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "The Sound Marker used in conjunction with the onOverSound.", "public": true, "help": ""}, {"name": "onUpSound", "default": "null", "type": ["Phaser.Sound"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "The Sound to be played when this Buttons Up state is activated.", "public": true, "help": ""}, {"name": "onUpSoundMarker", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 154, "inlineHelp": "The Sound Marker used in conjunction with the onUpSound.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderOrderID", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 802, "inlineHelp": "The render order ID, reset every frame.", "public": true, "help": ""}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "smoothed", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 889, "inlineHelp": "Set to true to smooth the texture of this Image, or false to disable smoothing (great for pixel art)", "public": true, "help": "Enable or disable texture smoothing for this Image. Only works for bitmap/image textures. Smoothing is enabled by default."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The Phaser Object Type.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "The world coordinates of this Image. This differs from the x/y coordinates which are relative to the Images container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_onDownFrameID", "default": "null", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onDownFrameName", "default": "null", "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onOutFrameID", "default": "null", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onOutFrameName", "default": "null", "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onOverFrameID", "default": "null", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onOverFrameName", "default": "null", "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onUpFrameID", "default": "null", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_onUpFrameName", "default": "null", "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "Internal variable.", "public": false, "help": ""}]}, "class": {"help": "Create a new `Button` object. A Button is a special type of Sprite that is set-up to handle Pointer events automatically. The four states a Button responds to are:\\n\\n* 'Over' - when the Pointer moves over the Button. This is also commonly known as 'hover'.\\n* 'Out' - when the Pointer that was previously over the Button moves out of it.\\n* 'Down' - when the Pointer is pressed down on the Button. I.e. touched on a touch enabled device or clicked with the mouse.\\n* 'Up' - when the Pointer that was pressed down on the Button is released again.\\n\\nYou can set a unique texture frame and Sound for any of these states.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": " Current game instance."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "X position of the Button."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "Y position of the Button."}, {"default": null, "optional": true, "type": ["string"], "name": "key", "help": "The image key as defined in the Game.Cache to use as the texture for this Button."}, {"default": null, "optional": true, "type": ["function"], "name": "callback", "help": "The function to call when this Button is pressed."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the callback will be called (usually 'this')."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "overFrame", "help": "This is the frame or frameName that will be set when this button is in an over state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "outFrame", "help": "This is the frame or frameName that will be set when this button is in an out state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "downFrame", "help": "This is the frame or frameName that will be set when this button is in a down state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "upFrame", "help": "This is the frame or frameName that will be set when this button is in an up state. Give either a number to use a frame ID or a string for a frame name."}], "static": false, "constructor": true, "extends": "Phaser.Image", "name": "Phaser.Button"}, "consts": [], "methods": {"protected": [{"name": "onInputDownHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Button"], "name": "sprite", "help": "The Button that the event occured on."}, {"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer that activated the Button."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 526, "public": false, "help": "Internal function that handles input events."}, {"name": "onInputOutHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Button"], "name": "sprite", "help": "The Button that the event occured on."}, {"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer that activated the Button."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 500, "public": false, "help": "Internal function that handles input events."}, {"name": "onInputOverHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Button"], "name": "sprite", "help": "The Button that the event occured on."}, {"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer that activated the Button."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 462, "public": false, "help": "Internal function that handles input events."}, {"name": "onInputUpHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Button"], "name": "sprite", "help": "The Button that the event occured on."}, {"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer that activated the Button."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 552, "public": false, "help": "Internal function that handles input events."}, {"name": "setState", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "newState", "help": "The new State of the Button."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 602, "public": false, "help": "Internal function that handles Button state changes."}], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "bringToTop", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 619, "public": true, "help": "Brings the Image to the top of the display list it is a child of. Images that are members of a Phaser.Group are only\\nbought to the top of that Group, not the entire display list."}, {"name": "clearFrames", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 215, "public": true, "help": "Clears all of the frames set on this Button."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "crop", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "rect", "help": "The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "copy", "help": "If false Sprite.cropRect will be a reference to the given rect. If true it will copy the rect values into a local Sprite.cropRect object."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 393, "public": true, "help": "Crop allows you to crop the texture used to display this Image.\\nCropping takes place from the top-left of the Image and can be modified in real-time by providing an updated rectangle object.\\nThe rectangle object given to this method can be either a Phaser.Rectangle or any object so long as it has public x, y, width and height properties.\\nPlease note that the rectangle object given is not duplicated by this method, but rather the Image uses a reference to the rectangle.\\nKeep this in mind if assigning a rectangle in a for-loop, or when cleaning up for garbage collection."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 519, "public": true, "help": "Destroys the Image. This removes it from its parent group, destroys the input, event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "kill", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 496, "public": true, "help": "Kills a Image. A killed Image has its alive, exists and visible properties all set to false.\\nIt will dispatch the onKilled event, you can listen to Image.events.onKilled for the signal.\\nNote that killing a Image is a way for you to quickly recycle it in a Image pool, it doesn't free it up from memory.\\nIf you don't need this Image any more you should call Image.destroy instead."}, {"name": "loadTexture", "parameters": [{"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Image during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Image is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 248, "public": true, "help": "Changes the Texture the Image is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 217, "public": true, "help": "Internal function called by the World postUpdate cycle."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 164, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Image at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Image at."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 597, "public": true, "help": "Resets the Image. This places the Image at the given x/y world coordinates and then sets alive, exists, visible and renderable all to true."}, {"name": "resetFrame", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 372, "public": true, "help": "Resets the Texture frame dimensions that the Image uses for rendering."}, {"name": "revive", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 471, "public": true, "help": "Brings a 'dead' Image back to life, optionally giving it the health value specified.\\nA resurrected Image has its alive, exists and visible properties all set to true.\\nIt will dispatch the onRevived event, you can listen to Image.events.onRevived for the signal."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setDownSound", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "sound", "help": "The Sound that will be played."}, {"default": null, "optional": true, "type": ["string"], "name": "marker", "help": "A Sound Marker that will be used in the playback."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 413, "public": true, "help": "The Sound to be played when a Pointer presses down on this Button."}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The Frame to be used by the Image texture."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 319, "public": true, "help": "Sets the Texture frame the Image uses for rendering.\\nThis is primarily an internal method used by Image.loadTexture, although you may call it directly."}, {"name": "setFrames", "parameters": [{"default": null, "optional": true, "type": ["string", "number"], "name": "overFrame", "help": "This is the frame or frameName that will be set when this button is in an over state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "outFrame", "help": "This is the frame or frameName that will be set when this button is in an out state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "downFrame", "help": "This is the frame or frameName that will be set when this button is in a down state. Give either a number to use a frame ID or a string for a frame name."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "upFrame", "help": "This is the frame or frameName that will be set when this button is in an up state. Give either a number to use a frame ID or a string for a frame name."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 240, "public": true, "help": "Used to manually set the frames that will be used for the different states of the Button."}, {"name": "setOutSound", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "sound", "help": "The Sound that will be played."}, {"default": null, "optional": true, "type": ["string"], "name": "marker", "help": "A Sound Marker that will be used in the playback."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 389, "public": true, "help": "The Sound to be played when a Pointer moves out of this Button."}, {"name": "setOverSound", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "sound", "help": "The Sound that will be played."}, {"default": null, "optional": true, "type": ["string"], "name": "marker", "help": "A Sound Marker that will be used in the playback."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 365, "public": true, "help": "The Sound to be played when a Pointer moves over this Button."}, {"name": "setSounds", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "overSound", "help": "Over Button Sound."}, {"default": null, "optional": true, "type": ["string"], "name": "overMarker", "help": "Over Button Sound Marker."}, {"default": null, "optional": true, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "downSound", "help": "Down Button Sound."}, {"default": null, "optional": true, "type": ["string"], "name": "downMarker", "help": "Down Button Sound Marker."}, {"default": null, "optional": true, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "outSound", "help": "Out Button Sound."}, {"default": null, "optional": true, "type": ["string"], "name": "outMarker", "help": "Out Button Sound Marker."}, {"default": null, "optional": true, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "upSound", "help": "Up Button Sound."}, {"default": null, "optional": true, "type": ["string"], "name": "upMarker", "help": "Up Button Sound Marker."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 349, "public": true, "help": "Sets the sounds to be played whenever this Button is interacted with. Sounds can be either full Sound objects, or markers pointing to a section of a Sound object.\\nThe most common forms of sounds are 'hover' effects and 'click' effects, which is why the order of the parameters is overSound then downSound.\\nCall this function with no parameters at all to reset all sounds on this Button."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "setUpSound", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sound", "Phaser.AudioSprite"], "name": "sound", "help": "The Sound that will be played."}, {"default": null, "optional": true, "type": ["string"], "name": "marker", "help": "A Sound Marker that will be used in the playback."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 437, "public": true, "help": "The Sound to be played when a Pointer has pressed down and is released from this Button."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 207, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "updateCrop", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 431, "public": true, "help": "If you have set a crop rectangle on this Image via Image.crop and since modified the Image.cropRect property (or the rectangle it references)\\nthen you need to update the crop frame by calling this method."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "Internal PIXI var.", "public": true, "help": ""}, {"name": "fragmentSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "The fragment shader code.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 180, "inlineHelp": "The height (resolution uniform)", "public": true, "help": ""}, {"name": "padding", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "Internal PIXI var.", "public": true, "help": ""}, {"name": "prevPoint", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The previous position of the pointer (we don't update the uniform if the same)", "public": true, "help": ""}, {"name": "type", "default": "Phaser.WEBGL_FILTER", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "The const type of this object, either Phaser.WEBGL_FILTER or Phaser.CANVAS_FILTER.", "public": true, "help": ""}, {"name": "uniforms", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "Default uniform mappings. Compatible with ShaderToy and GLSLSandbox.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 164, "inlineHelp": "The width (resolution uniform)", "public": true, "help": ""}], "private": [{"name": "passes", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "An array of filter objects.", "public": false, "help": "An array of passes - some filters contain a few steps this array simply stores the steps in a linear fashion.\\nFor example the blur filter has two passes blurX and blurY."}, {"name": "shaders", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Array an array of shaders.", "public": false, "help": ""}]}, "class": {"help": "This is a base Filter class to use for any Phaser filter development.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["object"], "name": "uniforms", "help": "Uniform mappings object"}, {"default": null, "optional": false, "type": ["array"], "name": "fragmentSrc", "help": "The fragment shader code."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Filter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 150, "public": true, "help": "Clear down this Filter and null out references"}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 105, "public": true, "help": "Should be over-ridden."}, {"name": "setResolution", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the display."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the display."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 115, "public": true, "help": "Set the resolution uniforms on the filter."}, {"name": "update", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Pointer"], "name": "pointer", "help": "A Pointer object to use for the filter. The coordinates are mapped to the mouse uniform."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 127, "public": true, "help": "Updates the filter."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "Phaser.TilemapParser parses data objects from Phaser.Loader that need more preparation before they can be inserted into a Tilemap.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.TilemapParser"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "getEmptyData", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Generated map data.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 126, "public": true, "help": "Returns an empty map data object."}, {"name": "parse", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key of the tilemap in the Cache."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileWidth", "help": "The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileHeight", "help": "The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "10", "optional": true, "type": ["number"], "name": "width", "help": "The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}, {"default": "10", "optional": true, "type": ["number"], "name": "height", "help": "The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}], "inheritedFrom": "", "private": false, "returns": {"help": "The parsed map object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 26, "public": true, "help": "Parse tilemap data from the cache and creates a Tilemap object."}, {"name": "parseCSV", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "data", "help": "The CSV file data."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileWidth", "help": "The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileHeight", "help": "The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}], "inheritedFrom": "", "private": false, "returns": {"help": "Generated map data.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 72, "public": true, "help": "Parses a CSV file into valid map data."}, {"name": "parseJSON", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "json", "help": "The JSON map data."}], "inheritedFrom": "", "private": false, "returns": {"help": "Generated and parsed map data.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 188, "public": true, "help": "Parses a Tiled JSON file into valid map data."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "backgroundColor", "default": null, "type": ["number", "string"], "private": false, "readOnly": false, "protected": false, "line": 336, "inlineHelp": "Gets and sets the background color of the stage. The color can be given as a number: 0xff0000 or a hex string: '#ff0000'", "public": true, "help": ""}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "currentRenderOrderID", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "Reset each frame, keeps a count of the total number of objects updated.", "public": true, "help": ""}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "disableVisibilityChange", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "By default if the browser tab loses focus the game will pause. You can stop that behaviour by setting this property to true.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "If exists is true the Stage and all children are updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactionManager", "default": null, "type": ["PIXI.InteractionManager"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "The interaction manage for this stage, manages all interactive activity on the stage"}, {"name": "interactive", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "Whether or not the stage is interactive"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "'_stage_root'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "The name of this object.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "smoothed", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 361, "inlineHelp": "Set to true to smooth all sprites rendered on this Stage, or false to disable smoothing (great for pixel art)", "public": true, "help": "Enable or disable texture smoothing for all objects on this Stage. Only works for bitmap/image textures. Smoothing is enabled by default."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": [{"name": "_backgroundColor", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "Stage background color.", "public": false, "help": ""}, {"name": "hiddenVar", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The page visibility API event name.", "public": false, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "Pixi level var, ignored by Phaser.", "public": false, "help": ""}]}, "class": {"help": "The Stage controls root level display objects upon which everything is displayed.\\nIt also handles browser visibility handling and the pausing due to loss of focus.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}], "static": false, "constructor": true, "extends": "PIXI.Stage", "name": "Phaser.Stage"}, "consts": [], "methods": {"protected": [{"name": "parseConfig", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "config", "help": "The configuration object to parse."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 84, "public": false, "help": "Parses a Game configuration object."}], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "checkVisibility", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 200, "public": true, "help": "Starts a page visibility event listener running, or window.blur/focus if not supported by the browser."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getMousePosition", "parameters": [], "inheritedFrom": "PIXI.Stage", "private": false, "returns": {"help": "A point containing the coordinates of the global InteractionData position.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 132, "public": true, "help": "This will return the point containing global coordinates of the mouse."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 164, "public": true, "help": "This is called automatically before the renderer runs and after the plugins have updated.\\nIn postUpdate this is where all the final physics calculatations and object positioning happens.\\nThe objects are processed in the order of the display list.\\nThe only exception to this is if the camera is following an object, in which case that is updated first."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 126, "public": true, "help": "This is called automatically after the plugins preUpdate and before the State.update.\\nMost objects have preUpdate methods and it's where initial movement and positioning is done."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setBackgroundColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "backgroundColor", "help": "the color of the background, easiest way to pass this in is in hex format"}], "inheritedFrom": "PIXI.Stage", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 117, "public": true, "help": "Sets the background color for the stage\\n\\nlike: 0xFFFFFF for white"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setInteractionDelegate", "parameters": [{"default": null, "optional": false, "type": ["DOMElement"], "name": "domElement", "help": "This new domElement which will receive mouse/touch events"}], "inheritedFrom": "PIXI.Stage", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 80, "public": true, "help": "Sets another DOM element which can receive mouse/touch interactions instead of the default Canvas element.\\nThis is useful for when you have other DOM elements on top of the Canvas element."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 145, "public": true, "help": "This is called automatically after the State.update, but before particles or plugins update."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "visibilityChange", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "Its type will be used to decide whether the game should be paused or not."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 256, "public": true, "help": "This method is called when the document visibility is changed."}], "private": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 103, "public": false, "help": "Initialises the stage and adds the event listeners."}]}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "A constraint that tries to keep the distance between two bodies constant.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": false, "type": ["number"], "name": "distance", "help": "The distance to keep between the bodies."}, {"default": null, "optional": true, "type": ["array"], "name": "localAnchorA", "help": "The anchor point for bodyA, defined locally in bodyA frame. Defaults to [0,0]."}, {"default": null, "optional": true, "type": ["array"], "name": "localAnchorB", "help": "The anchor point for bodyB, defined locally in bodyB frame. Defaults to [0,0]."}, {"default": "Number.MAX_VALUE", "optional": true, "type": ["object"], "name": "maxForce", "help": "Maximum force to apply."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.DistanceConstraint"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "A useful boolean to control if the Sprite is alive or dead (in terms of your gameplay, it doesn't effect rendering). Also linked to Sprite.health and Sprite.damage.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 853, "inlineHelp": "The angle of this Sprite in degrees.", "public": true, "help": "Indicates the rotation of the Sprite, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle."}, {"name": "animations", "default": null, "type": ["Phaser.AnimationManager"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)", "public": true, "help": ""}, {"name": "autoCull", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "A flag indicating if the Sprite should be automatically camera culled or not.", "public": true, "help": "Should this Sprite be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "body", "default": "null", "type": ["Phaser.Physics.Arcade.Body", "Phaser.Physics.P2.Body", "Phaser.Physics.Ninja.Body", "null"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "", "public": true, "help": "By default Sprites won't add themselves to any physics system and their physics body will be `null`.\\nTo enable them for physics you need to call `game.physics.enable(sprite, system)` where `sprite` is this object\\nand `system` is the Physics system you want to use to manage this body. Once enabled you can access all physics related properties via `Sprite.body`.\\n\\nImportant: Enabling a Sprite for P2 or Ninja physics will automatically set `Sprite.anchor` to 0.5 so the physics body is centered on the Sprite.\\nIf you need a different result then adjust or re-create the Body shape offsets manually, and/or reset the anchor after enabling physics."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 147, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "checkWorldBounds", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "", "public": true, "help": "If true the Sprite checks if it is still within the world each frame, when it leaves the world it dispatches Sprite.events.onOutOfBounds\\nand optionally kills the sprite (if Sprite.outOfBoundsKill is true). By default this is disabled because the Sprite has to calculate its\\nbounds every frame to support it, and not all games need it. Enable it by setting the value to true."}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "cropRect", "default": "null", "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 153, "inlineHelp": "The Rectangle used to crop the texture. Set this via Sprite.crop. Any time you modify this property directly you must call Sprite.updateCrop.", "public": true, "help": ""}, {"name": "debug", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 142, "inlineHelp": "Handy flag to use with Game.enableStep", "public": true, "help": ""}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "deltaX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 876, "inlineHelp": "The delta value. Positive if the motion was to the right, negative if to the left.", "public": true, "help": "Returns the delta x value. The difference between world.x now and in the previous step."}, {"name": "deltaY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 893, "inlineHelp": "The delta value. Positive if the motion was downwards, negative if upwards.", "public": true, "help": "Returns the delta y value. The difference between world.y now and in the previous step."}, {"name": "deltaZ", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 910, "inlineHelp": "The delta value.", "public": true, "help": "Returns the delta z value. The difference between rotation now and in the previous step."}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1212, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.", "public": true, "help": ""}, {"name": "exists", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1050, "inlineHelp": "If the Sprite is processed by the core game update and physics.", "public": true, "help": "Sprite.exists controls if the core game loop and physics update this Sprite or not.\\nWhen you set Sprite.exists to false it will remove its Body from the physics world (if it has one) and also set Sprite.visible to false.\\nSetting Sprite.exists to true will re-add the Body to the physics world (if it has a body) and set Sprite.visible to true."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1097, "inlineHelp": "Set to true to fix this Sprite to the Camera at its current world coordinates.", "public": true, "help": "An Sprite that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Sprite.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Sprite was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 958, "inlineHelp": "Gets or sets the current frame index and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 974, "inlineHelp": "Gets or sets the current frame name and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "health", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "Health value. Used in combination with damage() to allow for quick killing of Sprites.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": "The height of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "inCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 944, "inlineHelp": "True if the Sprite bounds is within the game camera, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Sprite bounds are within the game camera, otherwise false if fully outside of it."}, {"name": "inWorld", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 927, "inlineHelp": "True if the Sprite bounds is within the game world, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Sprite bounds are within the game world, otherwise false if fully outside of it."}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1008, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default a Sprite won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "key", "default": null, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.", "public": true, "help": ""}, {"name": "lifespan", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "The lifespan of the Sprite (in ms) before it will be killed.", "public": true, "help": "If you would like the Sprite to have a lifespan once 'born' you can set this to a positive value. Handy for particles, bullets, etc.\\nThe lifespan is decremented by game.time.elapsed each update, once it reaches zero the kill() function is called."}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "The user defined name given to this Sprite.", "public": true, "help": ""}, {"name": "outOfBoundsKill", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "If true Sprite.kill is called as soon as Sprite.inWorld returns false, as long as Sprite.checkWorldBounds is true.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderOrderID", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 991, "inlineHelp": "The render order ID, reset every frame.", "public": true, "help": ""}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "smoothed", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1126, "inlineHelp": "Set to true to smooth the texture of this Sprite, or false to disable smoothing (great for pixel art)", "public": true, "help": "Enable or disable texture smoothing for this Sprite. Only works for bitmap/image textures. Smoothing is enabled by default."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 45, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1160, "inlineHelp": "The position of the Sprite on the x axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the Sprite on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1187, "inlineHelp": "The position of the Sprite on the y axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the Sprite on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_bounds", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 188, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 170, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}, {"name": "_crop", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 176, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_frame", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 182, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "Sprites are the lifeblood of your game, used for nearly everything visual.\\n\\nAt its most basic a Sprite consists of a set of coordinates and a texture that is rendered to the canvas.\\nThey also contain additional properties allowing for physics motion (via Sprite.body), input handling (via Sprite.input),\\nevents (via Sprite.events), animation (via Sprite.animations), camera culling and more. Please see the Examples for use cases.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Sprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Sprite at."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "static": false, "constructor": true, "extends": "PIXI.Sprite", "name": "Phaser.Sprite"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "bringToTop", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 797, "public": true, "help": "Brings the Sprite to the top of the display list it is a child of. Sprites that are members of a Phaser.Group are only\\nbought to the top of that Group, not the entire display list."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "crop", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "rect", "help": "The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "copy", "help": "If false Sprite.cropRect will be a reference to the given rect. If true it will copy the rect values into a local Sprite.cropRect object."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 512, "public": true, "help": "Crop allows you to crop the texture used to display this Sprite.\\nThis modifies the core Sprite texture frame, so the Sprite width/height properties will adjust accordingly.\\n\\nCropping takes place from the top-left of the Sprite and can be modified in real-time by either providing an updated rectangle object to Sprite.crop,\\nor by modifying Sprite.cropRect (or a reference to it) and then calling Sprite.updateCrop.\\n\\nThe rectangle object given to this method can be either a Phaser.Rectangle or any object so long as it has public x, y, width and height properties.\\nA reference to the rectangle is stored in Sprite.cropRect unless the `copy` parameter is `true` in which case the values are duplicated to a local object."}, {"name": "damage", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the Sprite.health value."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 735, "public": true, "help": "Damages the Sprite, this removes the given amount from the Sprites health property.\\nIf health is then taken below or is equal to zero `Sprite.kill` is called."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 642, "public": true, "help": "Destroys the Sprite. This removes it from its parent group, destroys the input, event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "kill", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 619, "public": true, "help": "Kills a Sprite. A killed Sprite has its alive, exists and visible properties all set to false.\\nIt will dispatch the onKilled event, you can listen to Sprite.events.onKilled for the signal.\\nNote that killing a Sprite is a way for you to quickly recycle it in a Sprite pool, it doesn't free it up from memory.\\nIf you don't need this Sprite any more you should call Sprite.destroy instead."}, {"name": "loadTexture", "parameters": [{"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "frame", "help": "If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "stopAnimation", "help": "If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Changes the Texture the Sprite is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "overlap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.TileSprite", "Phaser.Button", "PIXI.DisplayObject"], "name": "displayObject", "help": "The display object to check against."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": "True if the bounds of this Sprite intersects at any point with the bounds of the given display object.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 839, "public": true, "help": "Checks to see if the bounds of this Sprite overlaps with the bounds of the given Display Object, which can be a Sprite, Image, TileSprite or anything that extends those such as a Button.\\nThis check ignores the Sprites hitArea property and runs a Sprite.getBounds comparison on both objects to determine the result.\\nTherefore it's relatively expensive to use in large quantities (i.e. with lots of Sprites at a high frequency), but should be fine for low-volume testing where physics isn't required."}, {"name": "play", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\"."}, {"default": "null", "optional": true, "type": ["number"], "name": "frameRate", "help": "The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "killOnComplete", "help": "If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": "A reference to playing Animation instance.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": true, "line": 820, "public": true, "help": "Play an animation based on the given key. The animation should previously have been added via sprite.animations.add()\\nIf the requested animation is already playing this request will be ignored. If you need to reset an already running animation do so directly on the Animation object itself."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 322, "public": true, "help": "Internal function called by the World postUpdate cycle."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": "True if the Sprite was rendered, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 204, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Sprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Sprite at."}, {"default": "1", "optional": true, "type": ["number"], "name": "health", "help": "The health to give the Sprite."}], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": false, "line": 763, "public": true, "help": "Resets the Sprite. This places the Sprite at the given x/y world coordinates and then\\nsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state and health values.\\nIf the Sprite has a physics body that too is reset."}, {"name": "resetFrame", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 488, "public": true, "help": "Resets the Texture frame dimensions that the Sprite uses for rendering."}, {"name": "revive", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "health", "help": "The health to give the Sprite."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 591, "public": true, "help": "Brings a 'dead' Sprite back to life, optionally giving it the health value specified.\\nA resurrected Sprite has its alive, exists and visible properties all set to true.\\nIt will dispatch the onRevived event, you can listen to Sprite.events.onRevived for the signal."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The Frame to be used by the Sprite texture."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 435, "public": true, "help": "Sets the Texture frame the Sprite uses for rendering.\\nThis is primarily an internal method used by Sprite.loadTexture, although you may call it directly."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 312, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have.\\nRemember if this Sprite has any children you should call update on them too."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "updateCrop", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 550, "public": true, "help": "If you have set a crop rectangle on this Sprite via Sprite.crop and since modified the Sprite.cropRect property (or the rectangle it references)\\nthen you need to update the crop frame by calling this method."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "x", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": ""}, {"name": "y", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "position of the point on the x axis"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "position of the point on the y axis"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.Point"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "a copy of the point", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 36, "public": true, "help": "Creates a clone of this point"}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "[x=0]", "help": "position of the point on the x axis"}, {"default": null, "optional": false, "type": ["number"], "name": "[y=0]", "help": "position of the point on the y axis"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 49, "public": true, "help": "Sets the point to a new x and y position.\\nIf y is omitted, both x and y will be set to x."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "Required Pixi var.", "public": true, "help": ""}, {"name": "canvas", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "The canvas to which this BitmapData draws.", "public": true, "help": ""}, {"name": "columnWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "The spacing between columns.", "public": true, "help": ""}, {"name": "context", "default": null, "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "The 2d context of the canvas.", "public": true, "help": ""}, {"name": "currentAlpha", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "The current alpha the debug information will be rendered at.", "public": true, "help": ""}, {"name": "currentX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "The current X position the debug information will be rendered at.", "public": true, "help": ""}, {"name": "currentY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "The current Y position the debug information will be rendered at.", "public": true, "help": ""}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "Does the canvas need re-rendering?", "public": true, "help": ""}, {"name": "font", "default": "'14px Courier'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The font that the debug information is rendered in.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "lineHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "The line height between the debug text.", "public": true, "help": ""}, {"name": "renderShadow", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "Should the text be rendered with a slight shadow? Makes it easier to read on different types of background.", "public": true, "help": ""}, {"name": "sprite", "default": null, "type": ["PIXI.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "If debugging in WebGL mode we need this.", "public": true, "help": ""}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "Required Pixi var.", "public": true, "help": ""}, {"name": "textureFrame", "default": null, "type": ["Phaser.Frame"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "Dimensions of the renderable area.", "public": true, "help": ""}], "private": []}, "class": {"help": "A collection of methods for displaying debug information about game objects.\\nIf your game is running in WebGL then Debug will create a Sprite that is placed at the top of the Stage display list and bind a canvas texture\\nto it, which must be uploaded every frame. Be advised: this is expenive.\\nIf your game is using a Canvas renderer then the debug information is literally drawn on the top of the active game canvas and no Sprite is used.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Utils.Debug"}, "consts": [], "methods": {"protected": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 108, "public": false, "help": "Internal method that boots the debug displayer."}, {"name": "line", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 222, "public": false, "help": "Internal method that outputs a single line of text split over as many columns as needed, one per parameter."}, {"name": "start", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The X value the debug info will start from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The Y value the debug info will start from."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "The color the debug text will drawn in."}, {"default": "0", "optional": true, "type": ["number"], "name": "columnWidth", "help": "The spacing between columns."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 171, "public": false, "help": "Internal method that resets and starts the debug output values."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 204, "public": false, "help": "Internal method that stops the debug output."}], "static": [], "public": [{"name": "body", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The sprite whos body will be rendered."}, {"default": "'rgba(0,255,0,0.4)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "filled", "help": "Render the objected as a filled (default, true) or a stroked (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 739, "public": true, "help": "Render a Sprites Physics body if it has one set. Note this only works for Arcade and\\nNinja (AABB, circle only) Physics.\\nTo display a P2 body you should enable debug mode on the body when creating it."}, {"name": "bodyInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The sprite to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 772, "public": true, "help": "Render a Sprites Physic Body information."}, {"name": "box2dBody", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The sprite whos body will be rendered."}, {"default": "'rgb(0,255,0)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 818, "public": true, "help": "Renders 'debug draw' data for the given Box2D body.\\nThis uses the standard debug drawing feature of Box2D, so colors will be decided by the Box2D engine."}, {"name": "box2dWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 799, "public": true, "help": "Renders 'debug draw' data for the Box2D world if it exists.\\nThis uses the standard debug drawing feature of Box2D, so colors will be decided by\\nthe Box2D engine."}, {"name": "cameraInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Camera"], "name": "camera", "help": "The Phaser.Camera to show the debug information for."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 284, "public": true, "help": "Render camera information including dimensions and location."}, {"name": "geom", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle", "object"], "name": "object", "help": "The geometry object to render."}, {"default": null, "optional": true, "type": ["string"], "name": "color", "help": "Color of the debug info to be rendered (format is css color string)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "filled", "help": "Render the objected as a filled (default, true) or a stroked (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 635, "public": true, "help": "Renders a Rectangle."}, {"name": "inputInfo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 429, "public": true, "help": "Render debug information about the Input object."}, {"name": "key", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Key"], "name": "key", "help": "The Key to render the information for."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 409, "public": true, "help": "Renders Phaser.Key object information."}, {"name": "lineInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Line"], "name": "line", "help": "The Line to display the data for."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 532, "public": true, "help": "Renders Line information in the given color."}, {"name": "pixel", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the pixel to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the pixel to be rendered."}, {"default": null, "optional": true, "type": ["string"], "name": "color", "help": "Color of the pixel (format is css color string)."}, {"default": "2", "optional": true, "type": ["number"], "name": "size", "help": "The 'size' to render the pixel at."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 551, "public": true, "help": "Renders a single pixel at the given size."}, {"name": "pointer", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The Pointer you wish to display."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "hideIfUp", "help": "Doesn't render the circle if the pointer is up."}, {"default": "'rgba(0,255,0,0.5)'", "optional": true, "type": ["string"], "name": "downColor", "help": "The color the circle is rendered in if down."}, {"default": "'rgba(255,0,0,0.5)'", "optional": true, "type": ["string"], "name": "upColor", "help": "The color the circle is rendered in if up (and hideIfUp is false)."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 329, "public": true, "help": "Renders the Pointer.circle object onto the stage in green if down or red if up along with debug text."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 132, "public": true, "help": "Internal method that clears the canvas (if a Sprite) ready for a new debug session."}, {"name": "quadTree", "parameters": [{"default": null, "optional": false, "type": ["Phaser.QuadTree"], "name": "quadtree", "help": "The quadtree to render."}, {"default": null, "optional": false, "type": ["string"], "name": "color", "help": "The color of the lines in the quadtree."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 696, "public": true, "help": "Visually renders a QuadTree to the display."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 147, "public": true, "help": "Clears the Debug canvas."}, {"name": "ropeSegments", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rope"], "name": "rope", "help": "The rope to display the segments of."}, {"default": null, "optional": true, "type": ["string"], "name": "color", "help": "Color of the debug info to be rendered (format is css color string)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "filled", "help": "Render the rectangle as a fillRect (default, true) or a strokeRect (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 467, "public": true, "help": "Renders the Rope's segments. Note: This is really expensive as it has to calculate new segments everytime you call it"}, {"name": "soundInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sound"], "name": "sound", "help": "The sound object to debug."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 253, "public": true, "help": "Render Sound information, including decoded state, duration, volume and more."}, {"name": "spriteBounds", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image"], "name": "sprite", "help": "The sprite to display the bounds of."}, {"default": null, "optional": true, "type": ["string"], "name": "color", "help": "Color of the debug info to be rendered (format is css color string)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "filled", "help": "Render the rectangle as a fillRect (default, true) or a strokeRect (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 449, "public": true, "help": "Renders the Sprites bounds. Note: This is really expensive as it has to calculate the bounds every time you call it!"}, {"name": "spriteCoords", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image"], "name": "sprite", "help": "The sprite to display the coordinates for."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 506, "public": true, "help": "Renders the sprite coordinates in local, positional and world space."}, {"name": "spriteInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The Sprite to display the information of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 484, "public": true, "help": "Render debug infos (including name, bounds info, position and some other properties) about the Sprite."}, {"name": "spriteInputInfo", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image"], "name": "sprite", "help": "The sprite to display the input data for."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 388, "public": true, "help": "Render Sprite Input Debug information."}, {"name": "text", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The line of text to draw."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": null, "optional": true, "type": ["string"], "name": "color", "help": "Color of the debug info to be rendered (format is css color string)."}, {"default": null, "optional": true, "type": ["string"], "name": "font", "help": "The font of text to draw."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 668, "public": true, "help": "Render a string of text."}, {"name": "timer", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Timer"], "name": "timer", "help": "The Phaser.Timer to show the debug information for."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the debug info to be rendered."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the debug info to be rendered."}, {"default": "'rgb(255,255,255)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug info to be rendered. (format is css color string)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 309, "public": true, "help": "Render Timer information."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "The bottom of the frame (y + height).", "public": true, "help": ""}, {"name": "centerX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "Center X position within the image to cut from.", "public": true, "help": ""}, {"name": "centerY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "Center Y position within the image to cut from.", "public": true, "help": ""}, {"name": "distance", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "The distance from the top left to the bottom-right of this Frame.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "Height of the frame.", "public": true, "help": ""}, {"name": "index", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "The index of this Frame within the FrameData set it is being added to.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Useful for Texture Atlas files (is set to the filename value).", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "The right of the Frame (x + width).", "public": true, "help": ""}, {"name": "rotated", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "Rotated? (not yet implemented)", "public": true, "help": ""}, {"name": "rotationDirection", "default": "'cw'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 82, "inlineHelp": "Either 'cw' or 'ccw', rotation is always 90 degrees.", "public": true, "help": ""}, {"name": "sourceSizeH", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "Height of the original sprite.", "public": true, "help": ""}, {"name": "sourceSizeW", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "Width of the original sprite.", "public": true, "help": ""}, {"name": "spriteSourceSizeH", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "Height of the trimmed sprite.", "public": true, "help": ""}, {"name": "spriteSourceSizeW", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "Width of the trimmed sprite.", "public": true, "help": ""}, {"name": "spriteSourceSizeX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "X position of the trimmed sprite inside original sprite.", "public": true, "help": ""}, {"name": "spriteSourceSizeY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "Y position of the trimmed sprite inside original sprite.", "public": true, "help": ""}, {"name": "trimmed", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "Was it trimmed when packed?", "public": true, "help": ""}, {"name": "uuid", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "DEPRECATED: A link to the PIXI.TextureCache entry.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "Width of the frame.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "X position within the image to cut from.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "Y position within the image to cut from.", "public": true, "help": ""}], "private": []}, "class": {"help": "A Frame is a single frame of an animation and is part of a FrameData collection.", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of this Frame within the FrameData set it is being added to."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the frame within the texture image."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the frame within the texture image."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width of the frame within the texture image."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "Height of the frame within the texture image."}, {"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the frame. In Texture Atlas data this is usually set to the filename."}, {"default": null, "optional": false, "type": ["string"], "name": "uuid", "help": "Internal UUID key."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Frame"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "An exact copy of this Frame object.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 175, "public": true, "help": "Clones this Frame into a new Phaser.Frame object and returns it.\\nNote that all properties are cloned, including the name, index and UUID."}, {"name": "getRect", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "out", "help": "A rectangle to copy the frame dimensions to."}], "inheritedFrom": "", "private": false, "returns": {"help": "A rectangle.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 198, "public": true, "help": "Returns a Rectangle set to the dimensions of this Frame."}, {"name": "setTrim", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "trimmed", "help": "If this frame was trimmed or not."}, {"default": null, "optional": false, "type": ["number"], "name": "actualWidth", "help": "The width of the frame before being trimmed."}, {"default": null, "optional": false, "type": ["number"], "name": "actualHeight", "help": "The height of the frame before being trimmed."}, {"default": null, "optional": false, "type": ["number"], "name": "destX", "help": "The destination X position of the trimmed frame for display."}, {"default": null, "optional": false, "type": ["number"], "name": "destY", "help": "The destination Y position of the trimmed frame for display."}, {"default": null, "optional": false, "type": ["number"], "name": "destWidth", "help": "The destination width of the trimmed frame for display."}, {"default": null, "optional": false, "type": ["number"], "name": "destHeight", "help": "The destination height of the trimmed frame for display."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 150, "public": true, "help": "If the frame was trimmed when added to the Texture Atlas this records the trim and source data."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "", "public": true, "help": "The strength of the blur."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "end", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "", "public": true, "help": "The X value to end the effect at."}, {"name": "gradientBlur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "The strength of the gradient blur."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "start", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The X value to start the effect at."}], "private": []}, "class": {"help": "A TiltShiftXFilter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.TiltShiftXFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}, {"name": "updateDelta", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 143, "public": true, "help": "Updates the filter delta values."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "A set of functions used by the canvas renderer to draw the primitive graphics data.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "PIXI.CanvasGraphics"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "android", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Is running on android?", "public": true, "help": ""}, {"name": "arora", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 204, "inlineHelp": "Set to true if running in Arora.", "public": true, "help": ""}, {"name": "audioData", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 290, "inlineHelp": "Are Audio tags available?", "public": true, "help": ""}, {"name": "cancelFullscreen", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 389, "inlineHelp": "If the browser supports the Full Screen API this holds the call you need to use to cancel it.", "public": true, "help": ""}, {"name": "canvas", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "Is canvas available?", "public": true, "help": ""}, {"name": "chrome", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 210, "inlineHelp": "Set to true if running in Chrome.", "public": true, "help": ""}, {"name": "chromeOS", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "Is running on chromeOS?", "public": true, "help": ""}, {"name": "cocoonJS", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "Is the game running under CocoonJS?", "public": true, "help": ""}, {"name": "cocoonJSApp", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Is this game running with CocoonJS.App?", "public": true, "help": ""}, {"name": "cordova", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Is the game running under Apache Cordova?", "public": true, "help": ""}, {"name": "crosswalk", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Is the game running under the Intel Crosswalk XDK?", "public": true, "help": ""}, {"name": "css3D", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 166, "inlineHelp": "Is css3D available?", "public": true, "help": ""}, {"name": "desktop", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "Is running desktop?", "public": true, "help": ""}, {"name": "ejecta", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "Is the game running under Ejecta?", "public": true, "help": ""}, {"name": "epiphany", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 216, "inlineHelp": "Set to true if running in Epiphany.", "public": true, "help": ""}, {"name": "file", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 124, "inlineHelp": "Is file available?", "public": true, "help": ""}, {"name": "fileSystem", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "Is fileSystem available?", "public": true, "help": ""}, {"name": "firefox", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 222, "inlineHelp": "Set to true if running in Firefox.", "public": true, "help": ""}, {"name": "fullscreen", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 377, "inlineHelp": "Does the browser support the Full Screen API?", "public": true, "help": ""}, {"name": "fullscreenKeyboard", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 395, "inlineHelp": "Does the browser support access to the Keyboard during Full Screen mode?", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 18, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "getUserMedia", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 190, "inlineHelp": "Does the device support the getUserMedia API?", "public": true, "help": ""}, {"name": "iOS", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "Is running on iOS?", "public": true, "help": ""}, {"name": "iPad", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 353, "inlineHelp": "Is running on iPad?", "public": true, "help": ""}, {"name": "iPhone", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 341, "inlineHelp": "Is running on iPhone?", "public": true, "help": ""}, {"name": "iPhone4", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 347, "inlineHelp": "Is running on iPhone4?", "public": true, "help": ""}, {"name": "ie", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 228, "inlineHelp": "Set to true if running in Internet Explorer.", "public": true, "help": ""}, {"name": "ieVersion", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 234, "inlineHelp": "If running in Internet Explorer this will contain the major version number. Beyond IE10 you should use Device.trident and Device.tridentVersion.", "public": true, "help": ""}, {"name": "linux", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "Is running on linux?", "public": true, "help": ""}, {"name": "littleEndian", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 365, "inlineHelp": "Is the device big or little endian? (only detected if the browser supports TypedArrays)", "public": true, "help": ""}, {"name": "localStorage", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "Is localStorage available?", "public": true, "help": ""}, {"name": "m4a", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "True if this device can play m4a files.", "public": true, "help": "Can this device play m4a files?"}, {"name": "macOS", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "Is running on macOS?", "public": true, "help": ""}, {"name": "midori", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 258, "inlineHelp": "Set to true if running in Midori.", "public": true, "help": ""}, {"name": "mobileSafari", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 252, "inlineHelp": "Set to true if running in Mobile Safari.", "public": true, "help": ""}, {"name": "mp3", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 314, "inlineHelp": "Can this device play mp3 files?", "public": true, "help": ""}, {"name": "mspointer", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 160, "inlineHelp": "Is mspointer available?", "public": true, "help": ""}, {"name": "node", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "Is the game running under Node.js?", "public": true, "help": ""}, {"name": "nodeWebkit", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "Is the game running under Node-Webkit?", "public": true, "help": ""}, {"name": "ogg", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 302, "inlineHelp": "Can this device play ogg files?", "public": true, "help": ""}, {"name": "opera", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 264, "inlineHelp": "Set to true if running in Opera.", "public": true, "help": ""}, {"name": "opus", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 308, "inlineHelp": "Can this device play opus files?", "public": true, "help": ""}, {"name": "pixelRatio", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 359, "inlineHelp": "PixelRatio of the host device?", "public": true, "help": ""}, {"name": "pointerLock", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 172, "inlineHelp": "Is Pointer Lock available?", "public": true, "help": ""}, {"name": "quirksMode", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 196, "inlineHelp": "Is the browser running in strict mode (false) or quirks mode? (true)", "public": true, "help": ""}, {"name": "requestFullscreen", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 383, "inlineHelp": "If the browser supports the Full Screen API this holds the call you need to use to activate it.", "public": true, "help": ""}, {"name": "safari", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 270, "inlineHelp": "Set to true if running in Safari.", "public": true, "help": ""}, {"name": "silk", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 282, "inlineHelp": "Set to true if running in the Silk browser (as used on the Amazon Kindle)", "public": true, "help": ""}, {"name": "support32bit", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 371, "inlineHelp": "Does the device context support 32bit pixel manipulation using array buffer views?", "public": true, "help": ""}, {"name": "touch", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 154, "inlineHelp": "Is touch available?", "public": true, "help": ""}, {"name": "trident", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 240, "inlineHelp": "Set to true if running a Trident version of Internet Explorer (IE11+)", "public": true, "help": ""}, {"name": "tridentVersion", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 246, "inlineHelp": "If running in Internet Explorer 11 this will contain the major version number. See http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx", "public": true, "help": ""}, {"name": "typedArray", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 178, "inlineHelp": "Does the browser support TypedArrays?", "public": true, "help": ""}, {"name": "vibration", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 184, "inlineHelp": "Does the device support the Vibration API?", "public": true, "help": ""}, {"name": "wav", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 320, "inlineHelp": "Can this device play wav files?", "public": true, "help": ""}, {"name": "webApp", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 276, "inlineHelp": "Set to true if running as a WebApp, i.e. within a WebView", "public": true, "help": ""}, {"name": "webAudio", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 296, "inlineHelp": "Is the WebAudio API available?", "public": true, "help": ""}, {"name": "webGL", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 142, "inlineHelp": "Is webGL available?", "public": true, "help": ""}, {"name": "webm", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 333, "inlineHelp": "Can this device play webm files?", "public": true, "help": ""}, {"name": "windows", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Is running on windows?", "public": true, "help": ""}, {"name": "windowsPhone", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "Is running on a Windows Phone?", "public": true, "help": ""}, {"name": "worker", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 148, "inlineHelp": "Is worker available?", "public": true, "help": ""}], "private": []}, "class": {"help": "Detects device support capabilities. Using some elements from System.js by MrDoob and Modernizr", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "Phaser.Device"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "canPlayAudio", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "type", "help": "One of 'mp3, 'ogg', 'm4a', 'wav', 'webm' or 'opus'."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the given file type is supported by the browser, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 882, "public": true, "help": "Check whether the host environment can play audio."}, {"name": "checkFullScreenSupport", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 526, "public": true, "help": "Checks for support of the Full Screen API."}, {"name": "isConsoleOpen", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if the browser dev console is open.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 921, "public": true, "help": "Check whether the console is open.\\nNote that this only works in Firefox with Firebug and earlier versions of Chrome.\\nIt used to work in Chrome, but then they removed the ability: http://src.chromium.org/viewvc/blink?view=revision&revision=151136"}], "private": [{"name": "_checkAudio", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 701, "public": false, "help": "Check audio support."}, {"name": "_checkBrowser", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 586, "public": false, "help": "Check what browser is game running in."}, {"name": "_checkCSS3D", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 847, "public": false, "help": "Check whether the host environment support 3D CSS."}, {"name": "_checkDevice", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 748, "public": false, "help": "Check PixelRatio, iOS device, Vibration API, ArrayBuffers and endianess."}, {"name": "_checkFeatures", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 478, "public": false, "help": "Check HTML5 features of the host environment."}, {"name": "_checkIsLittleEndian", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 787, "public": false, "help": "Check Little or Big Endian system."}, {"name": "_checkIsUint8ClampedImageData", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 821, "public": false, "help": "Test to see if ImageData uses CanvasPixelArray or Uint8ClampedArray."}, {"name": "_checkOS", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 416, "public": false, "help": "Check which OS is game running on."}]}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 331, "inlineHelp": "Gets or sets the angle of rotation in degrees.", "public": true, "help": "Indicates the rotation of the Graphics, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the graphic shape. Apply a value of PIXI.blendModes.NORMAL to reset the blend mode."}, {"name": "boundsPadding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "", "public": true, "help": "The bounds' padding used for bounds calculation."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 378, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "If exists = false then the Text isn't updated by the core game loop.", "public": true, "help": ""}, {"name": "fillAlpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "The alpha value used when filling the Graphics object."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 351, "inlineHelp": "Set to true to fix this Graphics to the Camera at its current world coordinates.", "public": true, "help": "An Graphics that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Graphics.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Graphics was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "isMask", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "Whether this shape is being used as a mask."}, {"name": "lineColor", "default": "0", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "The color of any lines drawn."}, {"name": "lineWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "", "public": true, "help": "The width (thickness) of any lines drawn."}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "The user defined name given to this object.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to reset the tint."}, {"name": "type", "default": "Phaser.GRAPHICS", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}]}, "class": {"help": "Creates a new `Graphics` object.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": " Current game instance."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new graphics object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new graphics object."}], "static": false, "constructor": true, "extends": "PIXI.Graphics", "name": "Phaser.Graphics"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "arc", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "cx", "help": "The x-coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "cy", "help": "The y-coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "startAngle", "help": "The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)"}, {"default": null, "optional": false, "type": ["number"], "name": "endAngle", "help": "The ending angle, in radians"}, {"default": null, "optional": false, "type": ["boolean"], "name": "anticlockwise", "help": "Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise."}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 419, "public": true, "help": "The arc method creates an arc/curve (used to create circles, or parts of circles)."}, {"name": "beginFill", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color of the fill"}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "the alpha of the fill"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 486, "public": true, "help": "Specifies a simple one-color fill that subsequent calls to other Graphics methods\\n(such as lineTo() or drawCircle()) use when drawing."}, {"name": "bezierCurveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "cpX", "help": "Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY", "help": "Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "cpX2", "help": "Second Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY2", "help": "Second Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "toX", "help": "Destination point x"}, {"default": null, "optional": false, "type": ["number"], "name": "toY", "help": "Destination point y"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 297, "public": true, "help": "Calculate the points for a bezier curve and then draws it."}, {"name": "clear", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 604, "public": true, "help": "Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 149, "public": true, "help": "Destroy this Graphics instance."}, {"name": "destroyCachedSprite", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1039, "public": true, "help": "Destroys a previous cached sprite."}, {"name": "drawCircle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the circle"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 560, "public": true, "help": "Draws a circle."}, {"name": "drawEllipse", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the center of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the center of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The half width of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The half height of the ellipse"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 577, "public": true, "help": "Draws an ellipse."}, {"name": "drawPolygon", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "path", "help": "The path data used to construct the polygon."}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 591, "public": true, "help": "Draws a polygon using the given path."}, {"name": "drawRect", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the rectangle"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": ""}, {"name": "drawRoundedRect", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "Radius of the rectangle corners"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 544, "public": true, "help": ""}, {"name": "drawShape", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle", "Phaser.Rectangle", "Phaser.Ellipse", "Phaser.Line", "Phaser.Polygon"], "name": "shape", "help": " The Shape object to draw."}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "The generated GraphicsData object.", "types": ["PIXI.GraphicsData"]}, "protected": false, "static": false, "inherited": true, "line": 1055, "public": true, "help": "Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon."}, {"name": "endFill", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 510, "public": true, "help": "Applies a fill to the lines and shapes that were added since the last call to the beginFill() method."}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 625, "public": true, "help": "Useful function that returns a texture of the graphics object that can then be used to create sprites\\nThis can be quite useful if your geometry is complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "the rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 800, "public": true, "help": "Retrieves the bounds of the graphic shape as a rectangle object"}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "lineStyle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "lineWidth", "help": "width of the line to draw, will update the objects stored style"}, {"default": null, "optional": false, "type": ["number"], "name": "color", "help": "color of the line to draw, will update the objects stored style"}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "alpha of the line to draw, will update the objects stored style"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Specifies the line style used for subsequent calls to Graphics methods such as the lineTo() method or the drawCircle() method."}, {"name": "lineTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "the X coordinate to draw to"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "the Y coordinate to draw to"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 227, "public": true, "help": "Draws a line using the current line style from the current drawing position to (x, y);\\nThe current drawing position is then set to (x, y)."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "the X coordinate to move to"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "the Y coordinate to move to"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 211, "public": true, "help": "Moves the current drawing position to x, y."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 132, "public": true, "help": "Automatically called by World.postUpdate."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 89, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "quadraticCurveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "cpX", "help": "Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY", "help": "Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "toX", "help": "Destination point x"}, {"default": null, "optional": false, "type": ["number"], "name": "toY", "help": "Destination point y"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Calculate the points for a quadratic bezier curve and then draws it.\\nBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 124, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateBounds", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 875, "public": true, "help": "Update the bounds of the object"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "The base texture that this texture uses."}, {"name": "crop", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "", "public": true, "help": "This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\\nirrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)"}, {"name": "frame", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": true, "help": "The frame specifies the region of the base texture that this texture uses"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "", "public": true, "help": "The height of the Texture in pixels."}, {"name": "noFrame", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "Does this Texture have any frame data assigned to it?"}, {"name": "requiresUpdate", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "", "public": true, "help": "This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)"}, {"name": "trim", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The texture trim data."}, {"name": "valid", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "", "public": true, "help": "This will let the renderer know if the texture is valid. If it's not then it cannot be rendered."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "", "public": true, "help": "The width of the Texture in pixels."}], "private": [{"name": "_uvs", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "", "public": false, "help": "The WebGL UV data cache."}]}, "class": {"help": "A texture stores the information that represents an image or part of an image. It cannot be added\\nto the display list directly. Instead use it as the texture for a PIXI.Sprite. If no frame is provided then the whole image is used.", "parameters": [{"default": null, "optional": false, "type": ["PIXI.BaseTexture"], "name": "baseTexture", "help": "The base texture source to create the texture from"}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "frame", "help": "The rectangle frame of the texture to show"}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "[crop]", "help": "The area of original texture"}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "[trim]", "help": "Trimmed texture rectangle"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.Texture"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addTextureToCache", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The Texture to add to the cache."}, {"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id that the texture will be stored against."}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": true, "inherited": true, "line": 292, "public": true, "help": "Adds a texture to the global PIXI.TextureCache. This cache is shared across the whole PIXI object."}, {"name": "destroy", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "destroyBase", "help": "Whether to destroy the base texture as well"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 155, "public": true, "help": "Destroys this texture"}, {"name": "fromCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Canvas"], "name": "canvas", "help": "The canvas element source of the texture"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 276, "public": true, "help": "Helper function that creates a new a Texture based on the given canvas element."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame id of the texture"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 260, "public": true, "help": "Helper function that returns a Texture objected based on the given frame id.\\nIf the frame id is not in the texture cache an error will be thrown."}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageUrl", "help": "The image url of the texture"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 238, "public": true, "help": "Helper function that creates a Texture object from the given image url.\\nIf the image is not in the texture cache it will be  created and loaded."}, {"name": "removeTextureFromCache", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id of the texture to be removed"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": "The texture that was removed", "types": ["PIXI.Texture"]}, "protected": false, "static": true, "inherited": true, "line": 305, "public": true, "help": "Remove a texture from the global PIXI.TextureCache."}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "frame", "help": "The frame of the texture to set it to"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 168, "public": true, "help": "Specifies the region of the baseTexture that this texture will use."}], "private": [{"name": "_updateUvs", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 206, "public": false, "help": "Updates the internal WebGL UV cache."}, {"name": "onBaseTextureLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 137, "public": false, "help": "Called when the base texture is loaded"}]}}, {"properties": {"protected": [], "public": [{"name": "autoplay", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": true, "help": "Is a sound set to autoplay or not?"}, {"name": "autoplayKey", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "If a sound is set to auto play, this holds the marker key of it."}, {"name": "config", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": "JSON audio atlas object."}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": "A reference to the currently running Game."}, {"name": "key", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": true, "help": "Asset key for the Audio Sprite."}, {"name": "sounds", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "", "public": true, "help": "An object containing the Phaser.Sound objects for the Audio Sprite."}], "private": []}, "class": {"help": "Audio Sprites are a combination of audio files and a JSON configuration.\\nThe JSON follows the format of that created by https://github.com/tonistiigi/audiosprite", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Reference to the current game instance."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Asset key for the sound."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.AudioSprite"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "get", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "marker", "help": "The name of sound to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The sound instance.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 129, "public": true, "help": "Get a sound with the given name."}, {"name": "play", "parameters": [{"default": null, "optional": true, "type": ["string"], "name": "marker", "help": "The name of sound to play"}, {"default": "1", "optional": true, "type": ["number"], "name": "volume", "help": "Volume of the sound you want to play. If none is given it will use the volume given to the Sound when it was created (which defaults to 1 if none was specified)."}], "inheritedFrom": "", "private": false, "returns": {"help": "This sound instance.", "types": ["Phaser.Sound"]}, "protected": false, "static": false, "inherited": false, "line": 92, "public": true, "help": "Play a sound with the given name."}, {"name": "stop", "parameters": [{"default": "''", "optional": true, "type": ["string"], "name": "marker", "help": "The name of sound to stop. If none is given it will stop all sounds in the audio sprite."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 106, "public": true, "help": "Stop a sound with the given name."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "active", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "", "public": true, "help": "If binding is active and should be executed."}, {"name": "context", "default": null, "type": ["object", "undefined", "null"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "Context on which listener will be executed (object that should represent the `this` variable inside listener function).", "public": true, "help": ""}, {"name": "params", "default": null, "type": ["array", "null"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute` (curried parameters)."}], "private": [{"name": "_isOnce", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "If binding should be executed just once.", "public": false, "help": ""}, {"name": "_listener", "default": null, "type": ["Phaser.Game"], "private": true, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "Handler function bound to the signal.", "public": false, "help": ""}, {"name": "_priority", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Listener priority.", "public": false, "help": ""}, {"name": "_signal", "default": null, "type": ["Phaser.Signal"], "private": true, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Reference to Signal object that listener is currently bound to.", "public": false, "help": ""}]}, "class": {"help": "Object that represents a binding between a Signal and a listener function.\\nThis is an internal constructor and shouldn't be created directly.\\nInspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Signal"], "name": "signal", "help": "Reference to Signal object that listener is currently bound to."}, {"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "Handler function bound to the signal."}, {"default": null, "optional": false, "type": ["boolean"], "name": "isOnce", "help": "If binding should be executed just once."}, {"default": null, "optional": true, "type": ["object"], "name": "listenerContext", "help": "Context on which listener will be executed (object that should represent the `this` variable inside listener function)."}, {"default": null, "optional": true, "type": ["number"], "name": "priority", "help": "The priority level of the event listener. (default = 0)."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.SignalBinding"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "detach", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Handler function bound to the signal or `null` if binding was previously detached.", "types": ["function", "null"]}, "protected": false, "static": false, "inherited": false, "line": 102, "public": true, "help": "Detach binding from signal.\\nalias to: @see mySignal.remove(myBinding.getListener());"}, {"name": "execute", "parameters": [{"default": null, "optional": true, "type": ["array"], "name": "paramsArr", "help": "Array of parameters that should be passed to the listener."}], "inheritedFrom": "", "private": false, "returns": {"help": "Value returned by the listener.", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 77, "public": true, "help": "Call listener passing arbitrary parameters.\\nIf binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch."}, {"name": "getListener", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Handler function bound to the signal.", "types": ["function"]}, "protected": false, "static": false, "inherited": false, "line": 126, "public": true, "help": ""}, {"name": "getSignal", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Signal that listener is currently bound to.", "types": ["Phaser.Signal"]}, "protected": false, "static": false, "inherited": false, "line": 134, "public": true, "help": ""}, {"name": "isBound", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if binding is still bound to the signal and has a listener.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 110, "public": true, "help": ""}, {"name": "isOnce", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "If SignalBinding will only be executed once.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 118, "public": true, "help": ""}, {"name": "toString", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "String representation of the object.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 153, "public": true, "help": ""}], "private": [{"name": "_destroy", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 143, "public": false, "help": "Delete instance properties"}]}}, {"properties": {"protected": [], "public": [{"name": "forceSetTimeOut", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "Tell Phaser to use setTimeOut even if raf is available.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "The currently running game.", "public": true, "help": ""}, {"name": "isRunning", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "true if RequestAnimationFrame is running, otherwise false.", "public": true, "help": ""}], "private": [{"name": "_isSetTimeOut", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "  - true if the browser is using setTimeout instead of raf.", "public": false, "help": ""}, {"name": "_onLoop", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The function called by the update.", "public": false, "help": ""}, {"name": "_timeOutID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "The callback ID used when calling cancel.", "public": false, "help": ""}]}, "class": {"help": "Abstracts away the use of RAF or setTimeOut for the core game update loop.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "forceSetTimeOut", "help": "Tell Phaser to use setTimeOut even if raf is available."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.RequestAnimationFrame"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "isRAF", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 160, "public": true, "help": "Is the browser using requestAnimationFrame?"}, {"name": "isSetTimeOut", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 151, "public": true, "help": "Is the browser using setTimeout?"}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 74, "public": true, "help": "Starts the requestAnimationFrame running or setTimeout if unavailable in browser"}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 131, "public": true, "help": "Stops the requestAnimationFrame from running."}, {"name": "updateRAF", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 107, "public": true, "help": "The update method for the requestAnimationFrame"}, {"name": "updateSetTimeout", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 119, "public": true, "help": "The update method for the setTimeout."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "The Phaser.Color class is a set of static methods that assist in color manipulation and conversion.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.Color"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "HSLColorWheel", "parameters": [{"default": "0.5", "optional": true, "type": ["number"], "name": "s", "help": "The saturation, in the range 0 - 1."}, {"default": "0.5", "optional": true, "type": ["number"], "name": "l", "help": "The lightness, in the range 0 - 1."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array containing 360 elements corresponding to the HSL color wheel.", "types": ["array"]}, "protected": false, "static": true, "inherited": false, "line": 667, "public": true, "help": "Get HSL color wheel values in an array which will be 360 elements in size."}, {"name": "HSLtoRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "h", "help": "The hue, in the range 0 - 1."}, {"default": null, "optional": false, "type": ["number"], "name": "s", "help": "The saturation, in the range 0 - 1."}, {"default": null, "optional": false, "type": ["number"], "name": "l", "help": "The lightness, in the range 0 - 1."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created: r, g and b. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green and blue values set in the r, g and b properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 217, "public": true, "help": "Converts an HSL (hue, saturation and lightness) color value to RGB.\\nConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\\nAssumes HSL values are contained in the set [0, 1] and returns r, g and b values in the set [0, 255].\\nBased on code by Michael Jackson (https://github.com/mjijackson)"}, {"name": "HSVColorWheel", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "s", "help": "The saturation, in the range 0 - 1."}, {"default": "1", "optional": true, "type": ["number"], "name": "v", "help": "The value, in the range 0 - 1."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array containing 360 elements corresponding to the HSV color wheel.", "types": ["array"]}, "protected": false, "static": true, "inherited": false, "line": 642, "public": true, "help": "Get HSV color wheel values in an array which will be 360 elements in size."}, {"name": "HSVtoRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "h", "help": "The hue, in the range 0 - 1."}, {"default": null, "optional": false, "type": ["number"], "name": "s", "help": "The saturation, in the range 0 - 1."}, {"default": null, "optional": false, "type": ["number"], "name": "v", "help": "The value, in the range 0 - 1."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created: r, g and b. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green and blue values set in the r, g and b properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 324, "public": true, "help": "Converts an HSV (hue, saturation and value) color value to RGB.\\nConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\\nAssumes HSV values are contained in the set [0, 1] and returns r, g and b values in the set [0, 255].\\nBased on code by Michael Jackson (https://github.com/mjijackson)"}, {"name": "RGBtoHSL", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created, h, s and l. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the hue, saturation and lightness values set in the h, s and l properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 158, "public": true, "help": "Converts an RGB color value to HSL (hue, saturation and lightness).\\nConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\\nAssumes RGB values are contained in the set [0, 255] and returns h, s and l in the set [0, 1].\\nBased on code by Michael Jackson (https://github.com/mjijackson)"}, {"name": "RGBtoHSV", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created, h, s and v. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the hue, saturation and value set in the h, s and v properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 268, "public": true, "help": "Converts an RGB color value to HSV (hue, saturation and value).\\nConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\\nAssumes RGB values are contained in the set [0, 255] and returns h, s and v in the set [0, 1].\\nBased on code by Michael Jackson (https://github.com/mjijackson)"}, {"name": "RGBtoString", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": "255", "optional": true, "type": ["number"], "name": "a", "help": "The alpha color component, in the range 0 - 255."}, {"default": "'#'", "optional": true, "type": ["string"], "name": "prefix", "help": "The prefix used in the return string. If '#' it will return `#RRGGBB`, else `0xAARRGGBB`."}], "inheritedFrom": "", "private": false, "returns": {"help": "A string containing the color values. If prefix was '#' it will be in the format `#RRGGBB` otherwise `0xAARRGGBB`.", "types": ["string"]}, "protected": false, "static": true, "inherited": false, "line": 513, "public": true, "help": "Converts the given color values into a string.\\nIf prefix was '#' it will be in the format `#RRGGBB` otherwise `0xAARRGGBB`."}, {"name": "componentToHex", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "The color channel to get the hex value for, must be a value between 0 and 255."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 626, "public": true, "help": "Return a string containing a hex representation of the given color component."}, {"name": "createColor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": "0", "optional": true, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": "0", "optional": true, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": "1", "optional": true, "type": ["number"], "name": "a", "help": "The alpha color component, in the range 0 - 1."}, {"default": "0", "optional": true, "type": ["number"], "name": "h", "help": "The hue, in the range 0 - 1."}, {"default": "0", "optional": true, "type": ["number"], "name": "s", "help": "The saturation, in the range 0 - 1."}, {"default": "0", "optional": true, "type": ["number"], "name": "l", "help": "The lightness, in the range 0 - 1."}, {"default": "0", "optional": true, "type": ["number"], "name": "v", "help": "The value, in the range 0 - 1."}], "inheritedFrom": "", "private": false, "returns": {"help": "The resulting object with r, g, b, a properties and h, s, l and v.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 440, "public": true, "help": "A utility function to create a lightweight 'color' object with the default components.\\nAny components that are not specified will default to zero.\\n\\nThis is useful when you want to use a shared color object for the getPixel and getPixelAt methods."}, {"name": "fromRGBA", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "rgba", "help": "An RGBA hex"}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "The object to use, optional."}], "inheritedFrom": "", "private": false, "returns": {"help": "A color object.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 108, "public": true, "help": "A utility to convert an integer in 0xRRGGBBAA format to a color object.\\nThis does not rely on endianness."}, {"name": "getAlpha", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "In the format 0xAARRGGBB."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 861, "public": true, "help": "Given a native color value (in the format 0xAARRGGBB) this will return the Alpha component, as a value between 0 and 255."}, {"name": "getAlphaFloat", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "In the format 0xAARRGGBB."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 873, "public": true, "help": "Given a native color value (in the format 0xAARRGGBB) this will return the Alpha component as a value between 0 and 1."}, {"name": "getBlue", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "In the format 0xAARRGGBB."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 909, "public": true, "help": "Given a native color value (in the format 0xAARRGGBB) this will return the Blue component, as a value between 0 and 255."}, {"name": "getColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 494, "public": true, "help": "Given 3 color values this will return an integer representation of it."}, {"name": "getColor32", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": "The alpha color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 478, "public": true, "help": "Given an alpha and 3 color values this will return an integer representation of it."}, {"name": "getGreen", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "In the format 0xAARRGGBB."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 897, "public": true, "help": "Given a native color value (in the format 0xAARRGGBB) this will return the Green component, as a value between 0 and 255."}, {"name": "getRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "Color in RGB (0xRRGGBB) or ARGB format (0xAARRGGBB)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 799, "public": true, "help": "Return the component parts of a color as an Object with the properties alpha, red, green, blue.\\n\\nAlpha will only be set if it exist in the given color (0xAARRGGBB)"}, {"name": "getRandomColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The lowest value to use for the color."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The highest value to use for the color."}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "The alpha value of the returning color (default 255 = fully opaque)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 769, "public": true, "help": "Returns a random color value between black and white\\nSet the min value to start each channel from the given offset.\\nSet the max value to restrict the maximum color used per channel."}, {"name": "getRed", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": " In the format 0xAARRGGBB."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 885, "public": true, "help": "Given a native color value (in the format 0xAARRGGBB) this will return the Red component, as a value between 0 and 255."}, {"name": "getWebRGB", "parameters": [{"default": null, "optional": false, "type": ["number", "object"], "name": "color", "help": "Color in RGB (0xRRGGBB), ARGB format (0xAARRGGBB) or an Object with r, g, b, a properties."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 839, "public": true, "help": "Returns a CSS friendly string value from the given color."}, {"name": "hexToColor", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "hex", "help": "The hex string to convert. Can be in the short-hand format `#03f` or `#0033ff`."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created or set: r, g and b. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green and blue values set in the r, g and b properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 557, "public": true, "help": "Converts a hex string into a Phaser Color object."}, {"name": "hexToRGB", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "hex", "help": "The hex string to convert. Can be in the short-hand format `#03f` or `#0033ff`."}], "inheritedFrom": "", "private": false, "returns": {"help": "The rgb color value in the format 0xAARRGGBB.", "types": ["number"]}, "protected": false, "static": true, "inherited": false, "line": 537, "public": true, "help": "Converts a hex string into an integer color value."}, {"name": "hueToColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "p", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "q", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "t", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "The color component value.", "types": ["number"]}, "protected": false, "static": true, "inherited": false, "line": 390, "public": true, "help": "Converts a hue to an RGB color.\\nBased on code by Michael Jackson (https://github.com/mjijackson)"}, {"name": "interpolateColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color1", "help": "The first color value."}, {"default": null, "optional": false, "type": ["number"], "name": "color2", "help": "The second color value."}, {"default": null, "optional": false, "type": ["number"], "name": "steps", "help": "The number of steps to run the interpolation over."}, {"default": null, "optional": false, "type": ["number"], "name": "currentStep", "help": "The currentStep value. If the interpolation will take 100 steps, a currentStep value of 50 would be half-way between the two."}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "The alpha of the returned color."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 695, "public": true, "help": "Interpolates the two given colours based on the supplied step and currentStep properties."}, {"name": "interpolateColorWithRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "The first color value."}, {"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "steps", "help": "The number of steps to run the interpolation over."}, {"default": null, "optional": false, "type": ["number"], "name": "currentStep", "help": "The currentStep value. If the interpolation will take 100 steps, a currentStep value of 50 would be half-way between the two."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 722, "public": true, "help": "Interpolates the two given colours based on the supplied step and currentStep properties."}, {"name": "interpolateRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r1", "help": "The red color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "g1", "help": "The green color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "b1", "help": "The blue color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "r2", "help": "The red color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "g2", "help": "The green color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "b2", "help": "The blue color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "steps", "help": "The number of steps to run the interpolation over."}, {"default": null, "optional": false, "type": ["number"], "name": "currentStep", "help": "The currentStep value. If the interpolation will take 100 steps, a currentStep value of 50 would be half-way between the two."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 747, "public": true, "help": "Interpolates the two given colours based on the supplied step and currentStep properties."}, {"name": "packPixel", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "a", "help": "The alpha color component, in the range 0 - 255."}], "inheritedFrom": "", "private": false, "returns": {"help": "The packed color as uint32", "types": ["number"]}, "protected": false, "static": true, "inherited": false, "line": 27, "public": true, "help": "Packs the r, g, b, a components into a single integer, for use with Int32Array.\\nIf device is little endian then ABGR order is used. Otherwise RGBA order is used."}, {"name": "toRGBA", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "a", "help": "The alpha color component, in the range 0 - 255."}], "inheritedFrom": "", "private": false, "returns": {"help": "A RGBA-packed 32 bit integer", "types": ["number"]}, "protected": false, "static": true, "inherited": false, "line": 138, "public": true, "help": "A utility to convert RGBA components to a 32 bit integer in RRGGBBAA format."}, {"name": "unpackPixel", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "rgba", "help": "The integer, packed in endian order by packPixel."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created: r, g and b. If not provided a new object will be created."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "hsl", "help": "Also convert the rgb values into hsl?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "hsv", "help": "Also convert the rgb values into hsv?"}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green and blue values set in the r, g and b properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 59, "public": true, "help": "Unpacks the r, g, b, a components into the specified color object, or a new\\nobject, for use with Int32Array. If little endian, then ABGR order is used when\\nunpacking, otherwise, RGBA order is used. The resulting color object has the\\n`r, g, b, a` properties which are unrelated to endianness.\\n\\nNote that the integer is assumed to be packed in the correct endianness. On little-endian\\nthe format is 0xAABBGGRR and on big-endian the format is 0xRRGGBBAA. If you want a\\nendian-independent method, use fromRGBA(rgba) and toRGBA(r, g, b, a)."}, {"name": "updateColor", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "out", "help": "The color object to update."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 459, "public": true, "help": "Takes a color object and updates the rgba property."}, {"name": "webToColor", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "web", "help": "The web string in the format: 'rgba(r,g,b,a)'"}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created: r, g and b. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green and blue values set in the r, g and b properties.", "types": ["object"]}, "protected": false, "static": true, "inherited": false, "line": 597, "public": true, "help": "Converts a CSS 'web' string into a Phaser Color object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "radius", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "x", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "", "public": true, "help": ""}, {"name": "y", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The Circle object can be used to specify a hit area for displayObjects", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the center of this circle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the center of this circle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the circle"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.Circle"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "a copy of the Circle", "types": ["Phaser.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 44, "public": true, "help": "Creates a clone of this Circle instance"}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the point to test"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the point to test"}], "inheritedFrom": "", "private": false, "returns": {"help": "Whether the x/y coordinates are within this Circle", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 57, "public": true, "help": "Checks whether the x and y coordinates given are contained within this circle"}, {"name": "getBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 78, "public": true, "help": "Returns the framing rectangle of the circle as a PIXI.Rectangle object"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "", "public": true, "help": "Sets the strength of both the blur."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The BlurYFilter applies a vertical Gaussian blur to an object.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.BlurYFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "currentAnim", "default": "null", "type": ["Phaser.Animation"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "The currently displayed animation, if any.", "public": true, "help": ""}, {"name": "currentFrame", "default": "null", "type": ["Phaser.Frame"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "The currently displayed Frame of animation, if any.", "public": true, "help": ""}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 526, "inlineHelp": "Gets or sets the current frame index and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameData", "default": null, "type": ["Phaser.FrameData"], "private": false, "readOnly": true, "protected": false, "line": 463, "inlineHelp": "The current animations FrameData.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 565, "inlineHelp": "Gets or sets the current frame name and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameTotal", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 476, "inlineHelp": "The total number of frames in the currently loaded FrameData, or -1 if no FrameData is loaded.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "isLoaded", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "Set to true once animation data has been loaded.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 509, "inlineHelp": "Gets the current animation name, if set.", "public": true, "help": ""}, {"name": "paused", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 489, "inlineHelp": "Gets and sets the paused state of the current animation.", "public": true, "help": ""}, {"name": "sprite", "default": null, "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "A reference to the parent Sprite that owns this AnimationManager.", "public": true, "help": ""}, {"name": "updateIfVisible", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "Should the animation data continue to update even if the Sprite.visible is set to false.", "public": true, "help": ""}], "private": [{"name": "_anims", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "An internal object that stores all of the Animation instances.", "public": false, "help": ""}, {"name": "_frameData", "default": "null", "type": ["Phaser.FrameData"], "private": true, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "A temp. var for holding the currently playing Animations FrameData.", "public": false, "help": ""}, {"name": "_outputFrames", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "An internal object to help avoid gc.", "public": false, "help": ""}]}, "class": {"help": "The Animation Manager is used to add, play and update Phaser Animations.\\nAny Game Object such as Phaser.Sprite that supports animation contains a single AnimationManager instance.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "A reference to the Game Object that owns this AnimationManager."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.AnimationManager"}, "consts": [], "methods": {"protected": [{"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if a new animation frame has been set, otherwise false.", "types": ["boolean"]}, "protected": true, "static": false, "inherited": false, "line": 341, "public": false, "help": "The main update function is called by the Sprites update loop. It's responsible for updating animation frames and firing related events."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The unique (within this Sprite) name for the animation, i.e. \"run\", \"fire\", \"walk\"."}, {"default": "null", "optional": true, "type": ["array"], "name": "frames", "help": "An array of numbers/strings that correspond to the frames to add to this animation and in which order. e.g. [1, 2, 3] or ['run0', 'run1', run2]). If null then all frames will be used."}, {"default": "60", "optional": true, "type": ["number"], "name": "frameRate", "help": "The speed at which the animation should play. The speed is given in frames per second."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Whether or not the animation is looped or just plays once."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "useNumericIndex", "help": "Are the given frames using numeric indexes (default) or strings?"}], "inheritedFrom": "", "private": false, "returns": {"help": "The Animation object that was created.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": false, "line": 179, "public": true, "help": "Adds a new animation under the given key. Optionally set the frames, frame rate and loop.\\nAnimations added in this way are played back with the play function."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 434, "public": true, "help": "Destroys all references this AnimationManager contains.\\nIterates through the list of animations stored in this manager and calls destroy on each of them."}, {"name": "getAnimation", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the animation to be returned, e.g. \"fire\"."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Animation instance, if found, otherwise null.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": false, "line": 397, "public": true, "help": "Returns an animation that was previously added by name."}, {"name": "next", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "quantity", "help": "The number of frames to advance."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 364, "public": true, "help": "Advances by the given number of frames in the current animation, taking the loop value into consideration."}, {"name": "play", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\"."}, {"default": "null", "optional": true, "type": ["number"], "name": "frameRate", "help": "The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "killOnComplete", "help": "If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed."}], "inheritedFrom": "", "private": false, "returns": {"help": "A reference to playing Animation instance.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": false, "line": 275, "public": true, "help": "Play an animation based on the given key. The animation should previously have been added via sprite.animations.add()\\nIf the requested animation is already playing this request will be ignored. If you need to reset an already running animation do so directly on the Animation object itself."}, {"name": "previous", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "quantity", "help": "The number of frames to move back."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 380, "public": true, "help": "Moves backwards the given number of frames in the current animation, taking the loop value into consideration."}, {"name": "refreshFrame", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 416, "public": true, "help": "Refreshes the current frame data back to the parent Sprite and also resets the texture data."}, {"name": "stop", "parameters": [{"default": "null", "optional": true, "type": ["string"], "name": "name", "help": "The name of the animation to be stopped, e.g. \"fire\". If none is given the currently running animation is stopped."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "resetFrame", "help": "When the animation is stopped should the currentFrame be set to the first frame of the animation (true) or paused on the last frame displayed (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 312, "public": true, "help": "Stop playback of an animation. If a name is given that specific animation is stopped, otherwise the current animation is stopped.\\nThe currentAnim property of the AnimationManager is automatically set to the animation given."}, {"name": "validateFrames", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "frames", "help": "An array of frames to be validated."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "useNumericIndex", "help": "Validate the frames based on their numeric index (true) or string index (false)"}], "inheritedFrom": "", "private": false, "returns": {"help": "True if all given Frames are valid, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 238, "public": true, "help": "Check whether the frames in the given array are valid and exist."}], "private": [{"name": "copyFrameData", "parameters": [{"default": null, "optional": false, "type": ["Phaser.FrameData"], "name": "frameData", "help": "The FrameData set to load."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "The frame to default to."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns `true` if the frame data was loaded successfully, otherwise `false`", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 133, "public": false, "help": "Loads FrameData into the internal temporary vars and resets the frame index to zero.\\nThis is called automatically when a new Sprite is created."}, {"name": "loadFrameData", "parameters": [{"default": null, "optional": false, "type": ["Phaser.FrameData"], "name": "frameData", "help": "The FrameData set to load."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "The frame to default to."}], "inheritedFrom": "", "private": true, "returns": {"help": "Returns `true` if the frame data was loaded successfully, otherwise `false`", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 84, "public": false, "help": "Loads FrameData into the internal temporary vars and resets the frame index to zero.\\nThis is called automatically when a new Sprite is created."}]}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "noise", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "", "public": true, "help": "The amount of noise to apply."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "A Noise effect filter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.NoiseFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "Phaser.LoaderParser parses data objects from Phaser.Loader that need more preparation before they can be inserted into the Cache.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.LoaderParser"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "bitmapFont", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the current game."}, {"default": null, "optional": false, "type": ["object"], "name": "xml", "help": "XML data you want to parse."}, {"default": null, "optional": false, "type": ["string"], "name": "cacheKey", "help": "The key of the texture this font uses in the cache."}, {"default": "0", "optional": true, "type": ["number"], "name": "xSpacing", "help": "Additional horizontal spacing between the characters."}, {"default": "0", "optional": true, "type": ["number"], "name": "ySpacing", "help": "Additional vertical spacing between the characters."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 24, "public": true, "help": "Parse a Bitmap Font from an XML file."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "Sets the strength of both the blurX and blurY properties simultaneously"}, {"name": "blurX", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "", "public": true, "help": "Sets the strength of the blurX property"}, {"name": "blurY", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "", "public": true, "help": "Sets the strength of the blurY property"}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The BlurFilter applies a Gaussian blur to an object.\\nThe strength of the blur can be set for x- and y-axis separately (always relative to the stage).", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.BlurFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "step", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "", "public": true, "help": "The number of steps to reduce the palette by."}], "private": []}, "class": {"help": "This lowers the color depth of your image by the given amount, producing an image with a smaller palette.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.ColorStepFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "filterStack", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 15, "inlineHelp": "", "public": true, "help": ""}, {"name": "offsetX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "", "public": true, "help": ""}, {"name": "offsetY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLFilterManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "applyFilterPass", "parameters": [{"default": null, "optional": false, "type": ["PIXI.AbstractFilter"], "name": "filter", "help": "the filter that needs to be applied"}, {"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "filterArea", "help": "TODO - might need an update"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the horizontal range of the filter"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the vertical range of the filter"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 324, "public": true, "help": "Applies the filter to the specified area."}, {"name": "begin", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}, {"default": null, "optional": false, "type": ["array"], "name": "buffer", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 51, "public": true, "help": ""}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 429, "public": true, "help": "Destroys the filter and removes it from the filter stack."}, {"name": "initShaderBuffers", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 381, "public": true, "help": "Initialises the shader buffers."}, {"name": "popFilter", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 143, "public": true, "help": "Removes the last filter from the filter stack and doesn't return it."}, {"name": "pushFilter", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "filterBlock", "help": "the filter that will be pushed to the current filter stack"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 68, "public": true, "help": "Applies the filter and adds it to the current filter stack."}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 38, "public": true, "help": "Initialises the context and the properties."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLStencilManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "bindGraphics", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphics", "help": ""}, {"default": null, "optional": false, "type": ["array"], "name": "webGLData", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 128, "public": true, "help": "TODO this does not belong here!"}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 290, "public": true, "help": "Destroys the mask stack."}, {"name": "popStencil", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphics", "help": ""}, {"default": null, "optional": false, "type": ["array"], "name": "webGLData", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 196, "public": true, "help": ""}, {"name": "pushMask", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Graphics"], "name": "graphics", "help": ""}, {"default": null, "optional": false, "type": ["array"], "name": "webGLData", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 36, "public": true, "help": "Applies the Mask and adds it to the current filter stack."}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 23, "public": true, "help": "Sets the drawing context to the one given in parameter."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "canvas", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The Canvas object that belongs to this CanvasBuffer."}, {"name": "context", "default": null, "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "A CanvasRenderingContext2D object representing a two-dimensional rendering context."}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": true, "help": "The height of the Canvas in pixels."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "", "public": true, "help": "The width of the Canvas in pixels."}], "private": []}, "class": {"help": "Creates a Canvas element of the given size.", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the width for the newly created canvas"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the height for the newly created canvas"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.CanvasBuffer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the new width of the canvas"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the new height of the canvas"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 71, "public": true, "help": "Resizes the canvas to the specified width and height."}], "private": [{"name": "clear", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 59, "public": false, "help": "Clears the canvas that was created by the CanvasBuffer class."}]}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "map", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 159, "inlineHelp": "", "public": true, "help": "The texture used for the displacement map. Must be power of 2 texture."}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 189, "inlineHelp": "", "public": true, "help": "The offset used to move the displacement map."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 174, "inlineHelp": "", "public": true, "help": "The multiplier used to scale the displacement result from the map calculation."}], "private": []}, "class": {"help": "The NormalMapFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\\nYou can use this filter to apply all manor of crazy warping effects\\nCurrently the r property of the texture is used offset the x and the g property of the texture is used to offset the y.", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The texture used for the displacement map * must be power of 2 texture at the moment"}], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.NormalMapFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "onTextureLoaded", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 145, "public": true, "help": "Sets the map dimensions uniforms when the texture becomes available."}, {"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "first", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 166, "inlineHelp": "The first item in the list.", "public": true, "help": "Resets the cursor to the first item in the list and returns it."}, {"name": "list", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "The list.", "public": true, "help": ""}, {"name": "next", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 191, "inlineHelp": "Advanced the cursor and return.", "public": true, "help": "Gets the next item in the list and returns it, advancing the cursor."}, {"name": "position", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "Current cursor position.", "public": true, "help": ""}, {"name": "total", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "Number of objects in the list.", "public": true, "help": ""}], "private": []}, "class": {"help": "A set data structure. Allows items to add themselves to and remove themselves from the set. Items can only exist once in the set.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "Phaser.ArrayList"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The element to add to this list. Can be a Phaser.Sprite or any other object you need to quickly iterate through."}], "inheritedFrom": "", "private": false, "returns": {"help": "The child that was added.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 43, "public": true, "help": "Adds a new element to this list. The item can only exist in the list once."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function to call."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 142, "public": true, "help": "Calls a function on all members of this list, using the member as the context for the callback.\\nThe function must exist on the member."}, {"name": "exists", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The element to get the list index for."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the child is found in the list, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 75, "public": true, "help": "Checks for the child within this list."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The element to get the list index for."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the child or -1 if not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 62, "public": true, "help": "Gets the index of the child in the list, or -1 if it isn't in the list."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The child to be removed from the list."}], "inheritedFrom": "", "private": false, "returns": {"help": "child - The child that was removed.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 100, "public": true, "help": "Removes the given element from this list if it exists."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 86, "public": true, "help": "Resets the list length and drops all items in the list."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "key", "help": "The object on the child to set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value to set the property to."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 120, "public": true, "help": "Sets the property `key` to the given value on all members of this list."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "height", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": ""}, {"name": "width", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": ""}, {"name": "x", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "", "public": true, "help": ""}, {"name": "y", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "the Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the upper-left corner of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the upper-left corner of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The overall width of this rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The overall height of this rectangle"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.Rectangle"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "a copy of the rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 52, "public": true, "help": "Creates a clone of this Rectangle"}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the point to test"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the point to test"}], "inheritedFrom": "", "private": false, "returns": {"help": "Whether the x/y coordinates are within this Rectangle", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 65, "public": true, "help": "Checks whether the x and y coordinates given are contained within this Rectangle"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 363, "inlineHelp": "The sum of the y and height properties.", "public": true, "help": "The sum of the y and height properties. Changing the bottom property of a Rectangle object has no effect on the x, y and width properties, but does change the height property."}, {"name": "bottomRight", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 384, "inlineHelp": "Gets or sets the location of the Rectangles bottom right corner as a Point object.", "public": true, "help": "The location of the Rectangles bottom right corner as a Point object."}, {"name": "centerX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 473, "inlineHelp": "The x coordinate of the center of the Rectangle.", "public": true, "help": "The x coordinate of the center of the Rectangle."}, {"name": "centerY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 490, "inlineHelp": "The y coordinate of the center of the Rectangle.", "public": true, "help": "The y coordinate of the center of the Rectangle."}, {"name": "empty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 599, "inlineHelp": "Gets or sets the Rectangles empty state.", "public": true, "help": "Determines whether or not this Rectangle object is empty. A Rectangle object is empty if its width or height is less than or equal to 0.\\nIf set to true then all of the Rectangle properties are set to 0."}, {"name": "halfHeight", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 350, "inlineHelp": "Half of the height of the Rectangle.", "public": true, "help": ""}, {"name": "halfWidth", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 337, "inlineHelp": "Half of the width of the Rectangle.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "The height of the Rectangle. This value should never be set to a negative.", "public": true, "help": ""}, {"name": "left", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 402, "inlineHelp": "The x coordinate of the left of the Rectangle.", "public": true, "help": "The x coordinate of the left of the Rectangle. Changing the left property of a Rectangle object has no effect on the y and height properties. However it does affect the width property, whereas changing the x value does not affect the width property."}, {"name": "perimeter", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 460, "inlineHelp": "The perimeter size of the Rectangle. This is the sum of all 4 sides.", "public": true, "help": "The perimeter size of the Rectangle. This is the sum of all 4 sides."}, {"name": "randomX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 508, "inlineHelp": "A random value between the left and right values (inclusive) of the Rectangle.", "public": true, "help": "A random value between the left and right values (inclusive) of the Rectangle."}, {"name": "randomY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 524, "inlineHelp": "A random value between the top and bottom values (inclusive) of the Rectangle.", "public": true, "help": "A random value between the top and bottom values (inclusive) of the Rectangle."}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "The sum of the x and width properties.", "public": true, "help": "The sum of the x and width properties. Changing the right property of a Rectangle object has no effect on the x, y and height properties, however it does affect the width property."}, {"name": "top", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 540, "inlineHelp": "The y coordinate of the top of the Rectangle.", "public": true, "help": "The y coordinate of the top of the Rectangle. Changing the top property of a Rectangle object has no effect on the x and width properties.\\nHowever it does affect the height property, whereas changing the y value does not affect the height property."}, {"name": "topLeft", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 562, "inlineHelp": "The location of the Rectangles top left corner as a Point object.", "public": true, "help": "The location of the Rectangles top left corner as a Point object."}, {"name": "topRight", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 580, "inlineHelp": "The location of the Rectangles top left corner as a Point object.", "public": true, "help": "The location of the Rectangles top right corner as a Point object."}, {"name": "volume", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 446, "inlineHelp": "The volume of the Rectangle derived from width * height.", "public": true, "help": "The volume of the Rectangle derived from width * height."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "The width of the Rectangle. This value should never be set to a negative.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "The x coordinate of the top-left corner of the Rectangle.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "The y coordinate of the top-left corner of the Rectangle.", "public": true, "help": ""}], "private": []}, "class": {"help": "Creates a new Rectangle object with the top-left corner specified by the x and y parameters and with the specified width and height parameters.\\nIf you call this function without parameters, a Rectangle with x, y, width, and height properties set to 0 is created.", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left corner of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left corner of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the Rectangle. Should always be either zero or a positive value."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the Rectangle. Should always be either zero or a positive value."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Rectangle"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "aabb", "parameters": [{"default": null, "optional": false, "type": ["array Phaser.Point"], "name": "points", "help": "The array of one or more points."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "out", "help": "Optional Rectangle to store the value in, if not supplied a new Rectangle object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Rectangle object.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": true, "inherited": false, "line": 869, "public": true, "help": "Calculates the Axis Aligned Bounding Box (or aabb) from an array of points."}, {"name": "centerOn", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to place the center of the Rectangle at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to place the center of the Rectangle at."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 124, "public": true, "help": "Centers this Rectangle so that the center coordinates match the given x and y values."}, {"name": "clone", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The Rectangle object."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "output", "help": "Optional Rectangle object. If given the values will be set into the object, otherwise a brand new Rectangle object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 679, "public": true, "help": "Returns a new Rectangle object with the same values for the x, y, width, and height properties as the original Rectangle object."}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The Rectangle object."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the point to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the point to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the Rectangle object contains the specified point; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 702, "public": true, "help": "Determines whether the specified coordinates are contained within the region defined by this Rectangle object."}, {"name": "containsPoint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point", "help": "The point object being checked. Can be Point or any object with .x and .y values."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the Rectangle object contains the specified point; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 737, "public": true, "help": "Determines whether the specified point is contained within the rectangular region defined by this Rectangle object. This method is similar to the Rectangle.contains() method, except that it takes a Point object as a parameter."}, {"name": "containsRaw", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "rx", "help": "The x coordinate of the top left of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "ry", "help": "The y coordinate of the top left of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "rw", "help": "The width of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "rh", "help": "The height of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the point to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the point to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the Rectangle object contains the specified point; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 724, "public": true, "help": "Determines whether the specified coordinates are contained within the region defined by the given raw values."}, {"name": "containsRect", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The first Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "b", "help": "The second Rectangle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the Rectangle object contains the specified point; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 751, "public": true, "help": "Determines whether the first Rectangle object is fully contained within the second Rectangle object.\\nA Rectangle object is said to contain another if the second Rectangle object falls entirely within the boundaries of the first."}, {"name": "copyFrom", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The object to copy from."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 163, "public": true, "help": "Copies the x, y, width and height properties from any given object to this Rectangle."}, {"name": "copyTo", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The object to copy to."}], "inheritedFrom": "", "private": false, "returns": {"help": "This object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 175, "public": true, "help": "Copies the x, y, width and height properties from this Rectangle to any given object."}, {"name": "equals", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The first Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "b", "help": "The second Rectangle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the two Rectangles have exactly the same values for the x, y, width and height properties; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 771, "public": true, "help": "Determines whether the two Rectangles are equal.\\nThis method compares the x, y, width and height properties of each Rectangle."}, {"name": "floor", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 137, "public": true, "help": "Runs Math.floor() on both the x and y values of this Rectangle."}, {"name": "floorAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 148, "public": true, "help": "Runs Math.floor() on the x, y, width and height values of this Rectangle."}, {"name": "inflate", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The Rectangle object."}, {"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "The amount to be added to the left side of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "The amount to be added to the bottom side of the Rectangle."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 626, "public": true, "help": "Increases the size of the Rectangle object by the specified amounts. The center point of the Rectangle object stays the same, and its size increases to the left and right by the dx value, and to the top and the bottom by the dy value."}, {"name": "inflatePoint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point", "help": "The x property of this Point object is used to increase the horizontal dimension of the Rectangle object. The y property is used to increase the vertical dimension of the Rectangle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Rectangle object.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 644, "public": true, "help": "Increases the size of the Rectangle object. This method is similar to the Rectangle.inflate() method except it takes a Point object as a parameter."}, {"name": "intersection", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The first Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "b", "help": "The second Rectangle object."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "output", "help": "Optional Rectangle object. If given the intersection values will be set into this object, otherwise a brand new Rectangle object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Rectangle object that equals the area of intersection. If the Rectangles do not intersect, this method returns an empty Rectangle object; that is, a Rectangle with its x, y, width, and height properties set to 0.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 785, "public": true, "help": "If the Rectangle object specified in the toIntersect parameter intersects with this Rectangle object, returns the area of intersection as a Rectangle object. If the Rectangles do not intersect, this method returns an empty Rectangle object with its properties set to 0."}, {"name": "intersects", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The first Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "b", "help": "The second Rectangle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the specified object intersects with this Rectangle object; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 812, "public": true, "help": "Determines whether the two Rectangles intersect with each other.\\nThis method checks the x, y, width, and height properties of the Rectangles."}, {"name": "intersectsRaw", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "left", "help": "The x coordinate of the left of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "right", "help": "The right coordinate of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "top", "help": "The y coordinate of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "bottom", "help": "The bottom coordinate of the area."}, {"default": null, "optional": false, "type": ["number"], "name": "tolerance", "help": "A tolerance value to allow for an intersection test with padding, default to 0"}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the specified object intersects with the Rectangle; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 833, "public": true, "help": "Determines whether the object specified intersects (overlaps) with the given values."}, {"name": "offset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "Moves the x value of the Rectangle object by this amount."}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "Moves the y value of the Rectangle object by this amount."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 56, "public": true, "help": "Adjusts the location of the Rectangle object, as determined by its top-left corner, by the specified amounts."}, {"name": "offsetPoint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point", "help": "A Point object to use to offset this Rectangle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 71, "public": true, "help": "Adjusts the location of the Rectangle object using a Point object as a parameter. This method is similar to the Rectangle.offset() method, except that it takes a Point object as a parameter."}, {"name": "scale", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The amount to scale the width of the Rectangle by. A value of 0.5 would reduce by half, a value of 2 would double the width, etc."}, {"default": null, "optional": true, "type": ["number"], "name": "y", "help": "The amount to scale the height of the Rectangle by. A value of 0.5 would reduce by half, a value of 2 would double the height, etc."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 105, "public": true, "help": "Scales the width and height of this Rectangle by the given amounts."}, {"name": "setTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left corner of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left corner of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the Rectangle. Should always be either zero or a positive value."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the Rectangle. Should always be either zero or a positive value."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Rectangle object", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 86, "public": true, "help": "Sets the members of Rectangle to the specified values."}, {"name": "size", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The Rectangle object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "output", "help": "Optional Point object. If given the values will be set into the object, otherwise a brand new Point object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "The size of the Rectangle object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 657, "public": true, "help": "The size of the Rectangle object, expressed as a Point object with the values of the width and height properties."}, {"name": "toString", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A string representation of the instance.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 324, "public": true, "help": "Returns a string representation of this object."}, {"name": "union", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "a", "help": "The first Rectangle object."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "b", "help": "The second Rectangle object."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "output", "help": "Optional Rectangle object. If given the new values will be set into this object, otherwise a brand new Rectangle object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Rectangle object that is the union of the two Rectangles.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 849, "public": true, "help": "Adds two Rectangles together to create a new Rectangle object, by filling in the horizontal and vertical space between the two Rectangles."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "The Canvas class handles everything related to creating the `canvas` DOM tag that Phaser will use, including styles, offset and aspect ratio.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.Canvas"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addToDOM", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to be added to the DOM."}, {"default": null, "optional": false, "type": ["string", "HTMLElement"], "name": "parent", "help": "The DOM element to add the canvas to."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "overflowHidden", "help": "If set to true it will add the overflow='hidden' style to the parent DOM element."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the source canvas.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 166, "public": true, "help": "Adds the given canvas element to the DOM. The canvas will be added as a child of the given parent.\\nIf no parent is given it will be added as a child of the document.body."}, {"name": "create", "parameters": [{"default": "256", "optional": true, "type": ["number"], "name": "width", "help": "The width of the canvas element."}, {"default": "256", "optional": true, "type": ["number"], "name": "height", "help": "The height of the canvas element.."}, {"default": "''", "optional": true, "type": ["string"], "name": "id", "help": "If given this will be set as the ID of the canvas element, otherwise no ID will be set."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly created canvas element.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 24, "public": true, "help": "Creates a `canvas` DOM element. The element is not automatically added to the document."}, {"name": "getAspectRatio", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to get the aspect ratio from."}], "inheritedFrom": "", "private": false, "returns": {"help": "The ratio between canvas' width and height.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 90, "public": true, "help": "Returns the aspect ratio of the given canvas."}, {"name": "getOffset", "parameters": [{"default": null, "optional": false, "type": ["HTMLElement"], "name": "element", "help": "The targeted element that we want to retrieve the offset."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "point", "help": "The point we want to take the x/y values of the offset."}], "inheritedFrom": "", "private": false, "returns": {"help": "- A point objet with the offsetX and Y as its properties.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 52, "public": true, "help": "Get the DOM offset values of any given element"}, {"name": "getSmoothingEnabled", "parameters": [{"default": null, "optional": false, "type": ["CanvasRenderingContext2D"], "name": "context", "help": "The context to check for smoothing on."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the given context has image smoothing enabled, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 270, "public": true, "help": "Returns `true` if the given context has image smoothing enabled, otherwise returns `false`."}, {"name": "removeFromDOM", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to be removed from the DOM."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 209, "public": true, "help": "Removes the given canvas element from the DOM."}, {"name": "setBackgroundColor", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to set the background color on."}, {"default": null, "optional": true, "type": ["string"], "name": "color", "help": "The color to set. Can be in the format 'rgb(r,g,b)', or '#RRGGBB' or any valid CSS color."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the source canvas.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 102, "public": true, "help": "Sets the background color behind the canvas. This changes the canvas style property."}, {"name": "setImageRenderingBicubic", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": " The canvas to set image-rendering bicubic on."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the source canvas.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 306, "public": true, "help": "Sets the CSS image-rendering property on the given canvas to be 'bicubic' (aka 'auto').\\nNote that if this doesn't given the desired result then see the CanvasUtils.setSmoothingEnabled method."}, {"name": "setImageRenderingCrisp", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to set image-rendering crisp on."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the source canvas.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 284, "public": true, "help": "Sets the CSS image-rendering property on the given canvas to be 'crisp' (aka 'optimize contrast' on webkit).\\nNote that if this doesn't given the desired result then see the setSmoothingEnabled."}, {"name": "setSmoothingEnabled", "parameters": [{"default": null, "optional": false, "type": ["CanvasRenderingContext2D"], "name": "context", "help": "The context to enable or disable the image smoothing on."}, {"default": null, "optional": false, "type": ["boolean"], "name": "value", "help": "If set to true it will enable image smoothing, false will disable it."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the source context.", "types": ["CanvasRenderingContext2D"]}, "protected": false, "static": false, "inherited": false, "line": 251, "public": true, "help": "Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\\nBy default browsers have image smoothing enabled, which isn't always what you visually want, especially\\nwhen using pixel art in a game. Note that this sets the property on the context itself, so that any image\\ndrawn to the context will be affected. This sets the property across all current browsers but support is\\npatchy on earlier browsers, especially on mobile."}, {"name": "setTouchAction", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to set the touch action on."}, {"default": null, "optional": true, "type": ["string"], "name": "value", "help": "The touch action to set. Defaults to 'none'."}], "inheritedFrom": "", "private": false, "returns": {"help": "The source canvas.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 120, "public": true, "help": "Sets the touch-action property on the canvas style. Can be used to disable default browser touch actions."}, {"name": "setTransform", "parameters": [{"default": null, "optional": false, "type": ["CanvasRenderingContext2D"], "name": "context", "help": "The context to set the transform on."}, {"default": null, "optional": false, "type": ["number"], "name": "translateX", "help": "The value to translate horizontally by."}, {"default": null, "optional": false, "type": ["number"], "name": "translateY", "help": "The value to translate vertically by."}, {"default": null, "optional": false, "type": ["number"], "name": "scaleX", "help": "The value to scale horizontally by."}, {"default": null, "optional": false, "type": ["number"], "name": "scaleY", "help": "The value to scale vertically by."}, {"default": null, "optional": false, "type": ["number"], "name": "skewX", "help": "The value to skew horizontaly by."}, {"default": null, "optional": false, "type": ["number"], "name": "skewY", "help": "The value to skew vertically by."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the source context.", "types": ["CanvasRenderingContext2D"]}, "protected": false, "static": false, "inherited": false, "line": 231, "public": true, "help": "Sets the transform of the given canvas to the matrix values provided."}, {"name": "setUserSelect", "parameters": [{"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "canvas", "help": "The canvas to set the touch action on."}, {"default": null, "optional": true, "type": ["string"], "name": "value", "help": "The touch action to set. Defaults to 'none'."}], "inheritedFrom": "", "private": false, "returns": {"help": "The source canvas.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": false, "line": 140, "public": true, "help": "Sets the user-select property on the canvas style. Can be used to disable default browser selection actions."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "Connects two bodies at given offset points, letting them rotate relative to each other around this point.\\nThe pivot points are given in world (pixel) coordinates.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["Float32Array"], "name": "pivotA", "help": "The point relative to the center of mass of bodyA which bodyA is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": false, "type": ["Float32Array"], "name": "pivotB", "help": "The point relative to the center of mass of bodyB which bodyB is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32]."}, {"default": "0", "optional": true, "type": ["number"], "name": "maxForce", "help": "The maximum force that should be applied to constrain the bodies."}, {"default": "null", "optional": true, "type": ["Float32Array"], "name": "worldPivot", "help": "A pivot point given in world coordinates. If specified, localPivotA and localPivotB are automatically computed from this value."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.RevoluteConstraint"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "fragmentSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The fragment shader."}, {"name": "gl", "default": null, "type": ["PIXI.WebGLContext"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": ""}, {"name": "program", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The WebGL program."}, {"name": "vertexSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "The vertex shader."}], "private": [{"name": "_UID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 17, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.ComplexPrimitiveShader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 114, "public": true, "help": "Destroys the shader."}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 84, "public": true, "help": "Initialises the shader."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The base texture object that this texture uses"}, {"name": "crop", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "", "public": true, "help": "This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\\nirrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)"}, {"name": "frame", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "", "public": true, "help": "The framing rectangle of the render texture"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "", "public": true, "help": "The height of the render texture"}, {"name": "key", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "The key of the RenderTexture in the Cache, if stored there.", "public": true, "help": ""}, {"name": "matrix", "default": null, "type": ["PIXI.Matrix"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "The matrix that is applied when display objects are rendered to this RenderTexture.", "public": true, "help": ""}, {"name": "noFrame", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "Does this Texture have any frame data assigned to it?"}, {"name": "renderer", "default": null, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "", "public": true, "help": "The renderer this RenderTexture uses. A RenderTexture can only belong to one renderer at the moment if its webGL."}, {"name": "requiresUpdate", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "", "public": true, "help": "This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The Resolution of the texture."}, {"name": "trim", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The texture trim data."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "Base Phaser object type.", "public": true, "help": ""}, {"name": "valid", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": "The with of the render texture"}], "private": []}, "class": {"help": "A RenderTexture is a special texture that allows any displayObject to be rendered to it. It allows you to take many complex objects and\\nrender them down into a single quad (on WebGL) which can then be used to texture other display objects with. A way of generating textures at run-time.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Internal Phaser reference key for the render texture."}, {"default": "100", "optional": true, "type": ["number"], "name": "width", "help": "The width of the render texture."}, {"default": "100", "optional": true, "type": ["number"], "name": "height", "help": "The height of the render texture."}, {"default": "''", "optional": true, "type": ["string"], "name": "key", "help": "The key of the RenderTexture in the Cache, if stored there."}, {"default": "Phaser.scaleModes.DEFAULT", "optional": true, "type": ["number"], "name": "scaleMode", "help": "One of the Phaser.scaleModes consts."}, {"default": "1", "optional": true, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated."}], "static": false, "constructor": true, "extends": "PIXI.RenderTexture", "name": "Phaser.RenderTexture"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addTextureToCache", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The Texture to add to the cache."}, {"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id that the texture will be stored against."}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": true, "inherited": true, "line": 292, "public": true, "help": "Adds a texture to the global PIXI.TextureCache. This cache is shared across the whole PIXI object."}, {"name": "clear", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 176, "public": true, "help": "Clears the RenderTexture."}, {"name": "destroy", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "destroyBase", "help": "Whether to destroy the base texture as well"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 155, "public": true, "help": "Destroys this texture"}, {"name": "fromCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Canvas"], "name": "canvas", "help": "The canvas element source of the texture"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 276, "public": true, "help": "Helper function that creates a new a Texture based on the given canvas element."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame id of the texture"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 260, "public": true, "help": "Helper function that returns a Texture objected based on the given frame id.\\nIf the frame id is not in the texture cache an error will be thrown."}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageUrl", "help": "The image url of the texture"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": true, "line": 238, "public": true, "help": "Helper function that creates a Texture object from the given image url.\\nIf the image is not in the texture cache it will be  created and loaded."}, {"name": "getBase64", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "A base64 encoded string of the texture.", "types": ["string"]}, "protected": false, "static": false, "inherited": true, "line": 294, "public": true, "help": "Will return a a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that."}, {"name": "getCanvas", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "A Canvas element with the texture rendered on.", "types": ["HTMLCanvasElement"]}, "protected": false, "static": false, "inherited": true, "line": 305, "public": true, "help": "Creates a Canvas element, renders this RenderTexture to it and then returns it."}, {"name": "getImage", "parameters": [], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": {"help": "", "types": ["Image"]}, "protected": false, "static": false, "inherited": true, "line": 281, "public": true, "help": "Will return a HTML Image of the texture"}, {"name": "removeTextureFromCache", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "id", "help": "The id of the texture to be removed"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": {"help": "The texture that was removed", "types": ["PIXI.Texture"]}, "protected": false, "static": true, "inherited": true, "line": 305, "public": true, "help": "Remove a texture from the global PIXI.TextureCache."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapText", "Phaser.Group"], "name": "displayObject", "help": "  The display object to render to this texture."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "A Point object containing the position to render the display object at."}, {"default": null, "optional": false, "type": ["boolean"], "name": "clear", "help": "If true the texture will be cleared before the display object is drawn."}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 90, "public": true, "help": "This function will draw the display object to the texture."}, {"name": "renderXY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapText", "Phaser.Group"], "name": "displayObject", "help": "  The display object to render to this texture."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x position to render the object at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y position to render the object at."}, {"default": null, "optional": false, "type": ["boolean"], "name": "clear", "help": "If true the texture will be cleared before the display object is drawn."}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 66, "public": true, "help": "This function will draw the display object to the texture."}, {"name": "resize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width to resize to."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height to resize to."}, {"default": null, "optional": false, "type": ["boolean"], "name": "updateBase", "help": "Should the baseTexture.width and height values be resized as well?"}], "inheritedFrom": "Phaser.RenderTexture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 145, "public": true, "help": "Resizes the RenderTexture."}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "frame", "help": "The frame of the texture to set it to"}], "inheritedFrom": "PIXI.Texture", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 168, "public": true, "help": "Specifies the region of the baseTexture that this texture will use."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "The SpriteBatch class is a really fast version of the DisplayObjectContainer\\nbuilt solely for speed, so use when you need a lot of sprites or particles.\\nAnd it's extremely easy to use :\\n\\nvar container = new PIXI.SpriteBatch();\\n\\nstage.addChild(container);\\n\\nfor(var i  = 0; i < 100; i++)\\n{\\nvar sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\\ncontainer.addChild(sprite);\\n}\\nAnd here you have a hundred sprites that will be renderer at the speed of light", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": ""}], "static": false, "constructor": true, "extends": "", "name": "PIXI.SpriteBatch"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": [{"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 97, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 73, "public": false, "help": "Renders the object using the WebGL renderer"}]}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.Utils"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "extend", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "deep", "help": "Perform a deep copy?"}, {"default": null, "optional": false, "type": ["object"], "name": "target", "help": "The target object to copy to."}], "inheritedFrom": "", "private": false, "returns": {"help": "The extended object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 292, "public": true, "help": "This is a slightly modified version of http://api.jquery.com/jQuery.extend/"}, {"name": "getProperty", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "obj", "help": "The object to traverse."}, {"default": null, "optional": false, "type": ["string"], "name": "prop", "help": "The property whose value will be returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "the value of the property or null if property isn't found .", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 23, "public": true, "help": "Gets an objects property by string."}, {"name": "isPlainObject", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "obj", "help": "The object to inspect."}], "inheritedFrom": "", "private": false, "returns": {"help": "- true if the object is plain, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 256, "public": true, "help": "This is a slightly modified version of jQuery.isPlainObject. A plain object is an object whose internal class property is [object Object]."}, {"name": "mixin", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "from", "help": "The object to copy (the source object)."}, {"default": null, "optional": false, "type": ["object"], "name": "to", "help": "The object to copy to (the destination object)."}], "inheritedFrom": "", "private": false, "returns": {"help": "The modified destination object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 373, "public": true, "help": "Mixes the source object into the destination object, returning the newly modified destination object.\\nBased on original code by @mudcube"}, {"name": "pad", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "str", "help": "The target string."}, {"default": null, "optional": false, "type": ["number"], "name": "len", "help": "The number of characters to be added."}, {"default": null, "optional": false, "type": ["number"], "name": "pad", "help": "The string to pad it out with (defaults to a space)."}, {"default": "3", "optional": true, "type": ["number"], "name": "dir", "help": " The direction dir = 1 (left), 2 (right), 3 (both)."}], "inheritedFrom": "", "private": false, "returns": {"help": "The padded string", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 218, "public": true, "help": "Javascript string pad http://www.webtoolkit.info/.\\npad = the string to pad it out with (defaults to a space)\\ndir = 1 (left), 2 (right), 3 (both)"}, {"name": "parseDimension", "parameters": [{"default": null, "optional": false, "type": ["string", "number"], "name": "size", "help": "The size to parse."}, {"default": null, "optional": false, "type": ["number"], "name": "dimension", "help": "The window dimension to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "The parsed dimension.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 152, "public": true, "help": "Get a unit dimension from a string."}, {"name": "rotateArray", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "matrix", "help": "The array to rotate."}, {"default": null, "optional": false, "type": ["number", "string"], "name": "direction", "help": "The amount to rotate. Either a number: 90, -90, 270, -270, 180 or a string: 'rotateLeft', 'rotateRight' or 'rotate180'"}], "inheritedFrom": "", "private": false, "returns": {"help": "The rotated array", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 113, "public": true, "help": "Rotates the given array.\\nBased on the routine from http://jsfiddle.net/MrPolywhirl/NH42z/"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "obj", "help": "The object to traverse"}, {"default": null, "optional": false, "type": ["string"], "name": "prop", "help": "The property whose value will be changed"}], "inheritedFrom": "", "private": false, "returns": {"help": "The object on which the property was set.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 56, "public": true, "help": "Sets an objects property by string."}, {"name": "shuffle", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "array", "help": "The array to shuffle."}], "inheritedFrom": "", "private": false, "returns": {"help": "The shuffled array.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 193, "public": true, "help": "A standard Fisher-Yates Array shuffle implementation."}, {"name": "transposeArray", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "array", "help": "The array to transpose."}], "inheritedFrom": "", "private": false, "returns": {"help": "The transposed array.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 86, "public": true, "help": "Transposes the elements of the given Array."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "crossorigin", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "", "public": true, "help": "Whether the requests should be treated as cross origin"}, {"name": "loaded", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "[read-only] Whether the data has loaded yet"}, {"name": "url", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "", "public": true, "help": "The url of the bitmap font data"}], "private": []}, "class": {"help": "The Spine loader is used to load in JSON spine data\\nTo generate the data you need to use http://esotericsoftware.com/ and export in the \"JSON\" format\\nDue to a clash of names  You will need to change the extension of the spine file from *.json to *.anim for it to load\\nSee example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\\nYou will need to generate a sprite sheet to accompany the spine data\\nWhen loaded this class will dispatch a \"loaded\" event", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url of the JSON file"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.SpineLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 61, "public": true, "help": "Loads the JSON data"}], "private": [{"name": "onLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 78, "public": false, "help": "Invoked when JSON file is loaded."}]}}, {"properties": {"protected": [], "public": [{"name": "mx", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "The x property of this InversePointProxy get and set in meters.", "public": true, "help": ""}, {"name": "my", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "The y property of this InversePointProxy get and set in meters.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "The x property of this InversePointProxy get and set in pixels.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The y property of this InversePointProxy get and set in pixels.", "public": true, "help": ""}], "private": []}, "class": {"help": "A InversePointProxy is an internal class that allows for direct getter/setter style property access to Arrays and TypedArrays but inverses the values on set.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["any"], "name": "destination", "help": "The object to bind to."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.InversePointProxy"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "", "public": true, "help": "Height of the object you are transforming"}, {"name": "matrix", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "An array of values used for matrix transformation. Specified as a 9 point Array."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "Width of the object you are transforming"}], "private": []}, "class": {"help": "The ConvolutionFilter class applies a matrix convolution filter effect.\\nA convolution combines pixels in the input image with neighboring pixels to produce a new image.\\nA wide variety of image effects can be achieved through convolutions, including blurring, edge detection, sharpening, embossing, and beveling.\\nThe matrix should be specified as a 9 point Array. See http://docs.gimp.org/en/plug-in-convmatrix.html for more info.", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "matrix", "help": "An array of values used for matrix transformation. Specified as a 9 point Array."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width of the object you are transforming"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "Height of the object you are transforming"}], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.ConvolutionFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "", "public": true, "help": "Sets the strength of both the blur."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "A Cross Hatch effect filter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.CrossHatchFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [{"name": "alphaData", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": true, "line": 51, "inlineHelp": "A reference to the alphaData array owned by the Emitter that emitted this Particle.", "public": false, "help": ""}, {"name": "autoAlpha", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": true, "line": 45, "inlineHelp": "If this Particle automatically changes alpha this is set to true by Particle.setAlphaData.", "public": false, "help": ""}, {"name": "autoScale", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": true, "line": 27, "inlineHelp": "If this Particle automatically scales this is set to true by Particle.setScaleData.", "public": false, "help": ""}, {"name": "scaleData", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": true, "line": 33, "inlineHelp": "A reference to the scaleData array owned by the Emitter that emitted this Particle.", "public": false, "help": ""}], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "A useful boolean to control if the Sprite is alive or dead (in terms of your gameplay, it doesn't effect rendering). Also linked to Sprite.health and Sprite.damage.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 853, "inlineHelp": "The angle of this Sprite in degrees.", "public": true, "help": "Indicates the rotation of the Sprite, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle."}, {"name": "animations", "default": null, "type": ["Phaser.AnimationManager"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)", "public": true, "help": ""}, {"name": "autoCull", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "A flag indicating if the Sprite should be automatically camera culled or not.", "public": true, "help": "Should this Sprite be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "body", "default": "null", "type": ["Phaser.Physics.Arcade.Body", "Phaser.Physics.P2.Body", "Phaser.Physics.Ninja.Body", "null"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "", "public": true, "help": "By default Sprites won't add themselves to any physics system and their physics body will be `null`.\\nTo enable them for physics you need to call `game.physics.enable(sprite, system)` where `sprite` is this object\\nand `system` is the Physics system you want to use to manage this body. Once enabled you can access all physics related properties via `Sprite.body`.\\n\\nImportant: Enabling a Sprite for P2 or Ninja physics will automatically set `Sprite.anchor` to 0.5 so the physics body is centered on the Sprite.\\nIf you need a different result then adjust or re-create the Body shape offsets manually, and/or reset the anchor after enabling physics."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 147, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "checkWorldBounds", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "", "public": true, "help": "If true the Sprite checks if it is still within the world each frame, when it leaves the world it dispatches Sprite.events.onOutOfBounds\\nand optionally kills the sprite (if Sprite.outOfBoundsKill is true). By default this is disabled because the Sprite has to calculate its\\nbounds every frame to support it, and not all games need it. Enable it by setting the value to true."}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "cropRect", "default": "null", "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 153, "inlineHelp": "The Rectangle used to crop the texture. Set this via Sprite.crop. Any time you modify this property directly you must call Sprite.updateCrop.", "public": true, "help": ""}, {"name": "debug", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 142, "inlineHelp": "Handy flag to use with Game.enableStep", "public": true, "help": ""}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "deltaX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 876, "inlineHelp": "The delta value. Positive if the motion was to the right, negative if to the left.", "public": true, "help": "Returns the delta x value. The difference between world.x now and in the previous step."}, {"name": "deltaY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 893, "inlineHelp": "The delta value. Positive if the motion was downwards, negative if upwards.", "public": true, "help": "Returns the delta y value. The difference between world.y now and in the previous step."}, {"name": "deltaZ", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 910, "inlineHelp": "The delta value.", "public": true, "help": "Returns the delta z value. The difference between rotation now and in the previous step."}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1212, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.", "public": true, "help": ""}, {"name": "exists", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1050, "inlineHelp": "If the Sprite is processed by the core game update and physics.", "public": true, "help": "Sprite.exists controls if the core game loop and physics update this Sprite or not.\\nWhen you set Sprite.exists to false it will remove its Body from the physics world (if it has one) and also set Sprite.visible to false.\\nSetting Sprite.exists to true will re-add the Body to the physics world (if it has a body) and set Sprite.visible to true."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1097, "inlineHelp": "Set to true to fix this Sprite to the Camera at its current world coordinates.", "public": true, "help": "An Sprite that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Sprite.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Sprite was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 958, "inlineHelp": "Gets or sets the current frame index and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 974, "inlineHelp": "Gets or sets the current frame name and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "health", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "Health value. Used in combination with damage() to allow for quick killing of Sprites.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": "The height of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "inCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 944, "inlineHelp": "True if the Sprite bounds is within the game camera, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Sprite bounds are within the game camera, otherwise false if fully outside of it."}, {"name": "inWorld", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 927, "inlineHelp": "True if the Sprite bounds is within the game world, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Sprite bounds are within the game world, otherwise false if fully outside of it."}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1008, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default a Sprite won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "key", "default": null, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.", "public": true, "help": ""}, {"name": "lifespan", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "The lifespan of the Sprite (in ms) before it will be killed.", "public": true, "help": "If you would like the Sprite to have a lifespan once 'born' you can set this to a positive value. Handy for particles, bullets, etc.\\nThe lifespan is decremented by game.time.elapsed each update, once it reaches zero the kill() function is called."}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "The user defined name given to this Sprite.", "public": true, "help": ""}, {"name": "outOfBoundsKill", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "If true Sprite.kill is called as soon as Sprite.inWorld returns false, as long as Sprite.checkWorldBounds is true.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderOrderID", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 991, "inlineHelp": "The render order ID, reset every frame.", "public": true, "help": ""}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "smoothed", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1126, "inlineHelp": "Set to true to smooth the texture of this Sprite, or false to disable smoothing (great for pixel art)", "public": true, "help": "Enable or disable texture smoothing for this Sprite. Only works for bitmap/image textures. Smoothing is enabled by default."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 45, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1160, "inlineHelp": "The position of the Sprite on the x axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the Sprite on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1187, "inlineHelp": "The position of the Sprite on the y axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the Sprite on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_a", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "Internal cache var for tracking auto alpha.", "public": false, "help": ""}, {"name": "_s", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "Internal cache var for tracking auto scale.", "public": false, "help": ""}]}, "class": {"help": "Create a new `Particle` object. Particles are extended Sprites that are emitted by a particle emitter such as Phaser.Particles.Arcade.Emitter.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Particle at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Particle at."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Particle during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Particle is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "static": false, "constructor": true, "extends": "Phaser.Sprite", "name": "Phaser.Particle"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "bringToTop", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 797, "public": true, "help": "Brings the Sprite to the top of the display list it is a child of. Sprites that are members of a Phaser.Group are only\\nbought to the top of that Group, not the entire display list."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "crop", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "rect", "help": "The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "copy", "help": "If false Sprite.cropRect will be a reference to the given rect. If true it will copy the rect values into a local Sprite.cropRect object."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 512, "public": true, "help": "Crop allows you to crop the texture used to display this Sprite.\\nThis modifies the core Sprite texture frame, so the Sprite width/height properties will adjust accordingly.\\n\\nCropping takes place from the top-left of the Sprite and can be modified in real-time by either providing an updated rectangle object to Sprite.crop,\\nor by modifying Sprite.cropRect (or a reference to it) and then calling Sprite.updateCrop.\\n\\nThe rectangle object given to this method can be either a Phaser.Rectangle or any object so long as it has public x, y, width and height properties.\\nA reference to the rectangle is stored in Sprite.cropRect unless the `copy` parameter is `true` in which case the values are duplicated to a local object."}, {"name": "damage", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the Sprite.health value."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 735, "public": true, "help": "Damages the Sprite, this removes the given amount from the Sprites health property.\\nIf health is then taken below or is equal to zero `Sprite.kill` is called."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 642, "public": true, "help": "Destroys the Sprite. This removes it from its parent group, destroys the input, event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "kill", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 619, "public": true, "help": "Kills a Sprite. A killed Sprite has its alive, exists and visible properties all set to false.\\nIt will dispatch the onKilled event, you can listen to Sprite.events.onKilled for the signal.\\nNote that killing a Sprite is a way for you to quickly recycle it in a Sprite pool, it doesn't free it up from memory.\\nIf you don't need this Sprite any more you should call Sprite.destroy instead."}, {"name": "loadTexture", "parameters": [{"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": true, "type": ["string", "number"], "name": "frame", "help": "If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "stopAnimation", "help": "If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Changes the Texture the Sprite is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "onEmit", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 108, "public": true, "help": "Called by the Emitter when this particle is emitted. Left empty for you to over-ride as required."}, {"name": "overlap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.TileSprite", "Phaser.Button", "PIXI.DisplayObject"], "name": "displayObject", "help": "The display object to check against."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": "True if the bounds of this Sprite intersects at any point with the bounds of the given display object.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 839, "public": true, "help": "Checks to see if the bounds of this Sprite overlaps with the bounds of the given Display Object, which can be a Sprite, Image, TileSprite or anything that extends those such as a Button.\\nThis check ignores the Sprites hitArea property and runs a Sprite.getBounds comparison on both objects to determine the result.\\nTherefore it's relatively expensive to use in large quantities (i.e. with lots of Sprites at a high frequency), but should be fine for low-volume testing where physics isn't required."}, {"name": "play", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\"."}, {"default": "null", "optional": true, "type": ["number"], "name": "frameRate", "help": "The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "killOnComplete", "help": "If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": "A reference to playing Animation instance.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": true, "line": 820, "public": true, "help": "Play an animation based on the given key. The animation should previously have been added via sprite.animations.add()\\nIf the requested animation is already playing this request will be ignored. If you need to reset an already running animation do so directly on the Animation object itself."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 322, "public": true, "help": "Internal function called by the World postUpdate cycle."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": "True if the Sprite was rendered, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 204, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Particle at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Particle at."}, {"default": "1", "optional": true, "type": ["number"], "name": "health", "help": "The health to give the Particle."}], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": false, "line": 153, "public": true, "help": "Resets the Particle. This places the Particle at the given x/y world coordinates and then\\nsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state and health values.\\nIf the Particle has a physics body that too is reset."}, {"name": "resetFrame", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 488, "public": true, "help": "Resets the Texture frame dimensions that the Sprite uses for rendering."}, {"name": "revive", "parameters": [{"default": "1", "optional": true, "type": ["number"], "name": "health", "help": "The health to give the Sprite."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": true, "line": 591, "public": true, "help": "Brings a 'dead' Sprite back to life, optionally giving it the health value specified.\\nA resurrected Sprite has its alive, exists and visible properties all set to true.\\nIt will dispatch the onRevived event, you can listen to Sprite.events.onRevived for the signal."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setAlphaData", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 117, "public": true, "help": "Called by the Emitter if autoAlpha has been enabled. Passes over the alpha ease data and resets the alpha counter."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The Frame to be used by the Sprite texture."}], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 435, "public": true, "help": "Sets the Texture frame the Sprite uses for rendering.\\nThis is primarily an internal method used by Sprite.loadTexture, although you may call it directly."}, {"name": "setScaleData", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 132, "public": true, "help": "Called by the Emitter if autoScale has been enabled. Passes over the scale ease data and resets the scale counter."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 70, "public": true, "help": "Updates the Particle scale or alpha if autoScale and autoAlpha are set."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "updateCrop", "parameters": [], "inheritedFrom": "Phaser.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 550, "public": true, "help": "If you have set a crop rectangle on this Sprite via Sprite.crop and since modified the Sprite.cropRect property (or the rectangle it references)\\nthen you need to update the crop frame by calling this method."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "aabb", "default": null, "type": ["Phaser.Physics.Ninja.AABB"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "The AABB object this body is using for collision.", "public": true, "help": ""}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 540, "inlineHelp": "The angle of this Body", "public": true, "help": ""}, {"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 501, "inlineHelp": "The bottom value of this Body (same as Body.y + Body.height)", "public": true, "help": ""}, {"name": "bounce", "default": "0.3", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 95, "inlineHelp": "The bounciness of this object when it collides. A value between 0 and 1. We recommend setting it to 0.999 to avoid jittering.", "public": true, "help": ""}, {"name": "checkCollision", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 125, "inlineHelp": "An object containing allowed collision.", "public": true, "help": "Set the checkCollision properties to control which directions collision is processed for this Body.\\nFor example checkCollision.up = false means it won't collide when the collision happened while moving up."}, {"name": "circle", "default": null, "type": ["Phaser.Physics.Ninja.Circle"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "The Circle object this body is using for collision.", "public": true, "help": ""}, {"name": "collideWorldBounds", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "Should the Body collide with the World bounds?", "public": true, "help": "A Body can be set to collide against the World bounds automatically and rebound back into the World if this is set to true. Otherwise it will leave the World."}, {"name": "drag", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "The drag applied to this object as it moves.", "public": true, "help": ""}, {"name": "facing", "default": "Phaser.NONE", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "A const reference to the direction the Body is traveling or facing.", "public": true, "help": ""}, {"name": "friction", "default": "0.05", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "The friction applied to this object as it moves.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "gravityScale", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 89, "inlineHelp": "How much of the world gravity should be applied to this object? 1 = all of it, 0.5 = 50%, etc.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 488, "inlineHelp": "The height of this Body", "public": true, "help": ""}, {"name": "immovable", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "An immovable Body will not receive any impacts from other bodies. Not fully implemented.", "public": true, "help": ""}, {"name": "maxSpeed", "default": "8", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 144, "inlineHelp": "The maximum speed this body can travel at (taking drag and friction into account)", "public": true, "help": ""}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 514, "inlineHelp": "The right value of this Body (same as Body.x + Body.width)", "public": true, "help": ""}, {"name": "shape", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "A local reference to the body shape.", "public": true, "help": ""}, {"name": "speed", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 527, "inlineHelp": "The speed of this Body", "public": true, "help": ""}, {"name": "sprite", "default": null, "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "Reference to the parent Sprite.", "public": true, "help": ""}, {"name": "system", "default": null, "type": ["Phaser.Physics.Ninja"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "The parent physics system.", "public": true, "help": ""}, {"name": "tile", "default": null, "type": ["Phaser.Physics.Ninja.Tile"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The Tile object this body is using for collision.", "public": true, "help": ""}, {"name": "touching", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "An object containing touching results.", "public": true, "help": "This object is populated with boolean values when the Body collides with another.\\ntouching.up = true means the collision happened to the top of this Body for example."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The type of physics system this body belongs to.", "public": true, "help": ""}, {"name": "velocity", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The velocity in pixels per second sq. of the Body.", "public": true, "help": ""}, {"name": "wasTouching", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 138, "inlineHelp": "An object containing previous touching results.", "public": true, "help": "This object is populated with previous touching values from the bodies previous collision."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 475, "inlineHelp": "The width of this Body", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 442, "inlineHelp": "The x position.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 458, "inlineHelp": "The y position.", "public": true, "help": ""}], "private": []}, "class": {"help": "The Physics Body is linked to a single Sprite. All physics operations should be performed against the body rather than\\nthe Sprite itself. For example you can set the velocity, bounce values etc all on the Body.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja"], "name": "system", "help": "The physics system this Body belongs to."}, {"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The Sprite object this physics body belongs to."}, {"default": "1", "optional": true, "type": ["number"], "name": "type", "help": "The type of Ninja shape to create. 1 = AABB, 2 = Circle or 3 = Tile."}, {"default": "1", "optional": true, "type": ["number"], "name": "id", "help": "If this body is using a Tile shape, you can set the Tile id here, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc."}, {"default": "16", "optional": true, "type": ["number"], "name": "radius", "help": "If this body is using a Circle shape this controls the radius."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate of this Body. This is only used if a sprite is not provided."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate of this Body. This is only used if a sprite is not provided."}, {"default": "0", "optional": true, "type": ["number"], "name": "width", "help": "The width of this Body. This is only used if a sprite is not provided."}, {"default": "0", "optional": true, "type": ["number"], "name": "height", "help": "The height of this Body. This is only used if a sprite is not provided."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Ninja.Body"}, "consts": [], "methods": {"protected": [{"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 220, "public": false, "help": "Internal method."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 190, "public": false, "help": "Internal method."}], "static": [], "public": [{"name": "deltaAbsX", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The absolute delta value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 387, "public": true, "help": "Returns the absolute delta x value."}, {"name": "deltaAbsY", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The absolute delta value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 397, "public": true, "help": "Returns the absolute delta y value."}, {"name": "deltaX", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The delta value. Positive if the motion was to the right, negative if to the left.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 407, "public": true, "help": "Returns the delta x value. The difference between Body.x now and in the previous step."}, {"name": "deltaY", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The delta value. Positive if the motion was downwards, negative if upwards.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 417, "public": true, "help": "Returns the delta y value. The difference between Body.y now and in the previous step."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 426, "public": true, "help": "Destroys this body's reference to the sprite and system, and destroys its shape."}, {"name": "moveBackward", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move backwards."}, {"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle in which it should move, given in degrees."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 295, "public": true, "help": "Moves the Body backwards based on its current angle and the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move down, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 357, "public": true, "help": "If this Body is dynamic then this will move it down by setting its y velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveLeft", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move to the left, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 312, "public": true, "help": "If this Body is dynamic then this will move it to the left by setting its x velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveRight", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move to the right, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 327, "public": true, "help": "If this Body is dynamic then this will move it to the right by setting its x velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move forwards."}, {"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle in which it should move, given in degrees."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 277, "public": true, "help": "Moves the Body forwards based on its current angle and the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "speed", "help": "The speed at which it should move up, in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 342, "public": true, "help": "If this Body is dynamic then this will move it up by setting its y velocity to the given speed.\\nThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms)."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context to render to."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Body"], "name": "body", "help": "The Body to render."}, {"default": "'rgba(0,255,0,0.4)'", "optional": true, "type": ["string"], "name": "color", "help": "color of the debug shape to be rendered. (format is css color string)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "filled", "help": "Render the shape as a filled (default, true) or a stroked (false)"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 557, "public": true, "help": "Render Sprite's Body."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 370, "public": true, "help": "Resets all Body values and repositions on the Sprite."}, {"name": "setZeroVelocity", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 262, "public": true, "help": "Stops all movement of this body."}], "private": []}}, {"properties": {"protected": [{"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 65, "inlineHelp": "Internal Phaser Type value.", "public": false, "help": ""}], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1814, "inlineHelp": "The angle of rotation given in degrees, where 0 degrees = to the right.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "classType", "default": "Phaser.Sprite", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame."}, {"name": "cursor", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The current display object that the Group cursor is pointing to.", "public": true, "help": "The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "enableBody", "default": "enableBody", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.", "public": true, "help": ""}, {"name": "enableBodyDebug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "If exists is true the Group is updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1834, "inlineHelp": "Set to true to fix this Group to the Camera at its current world coordinates.", "public": true, "help": "A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "ignoreDestroy", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.", "public": true, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1798, "inlineHelp": "The total number of children in this Group, regardless of their exists/alive status.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A name for this Group. Not used internally but useful for debugging.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Group", "Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The parent of this Group.", "public": true, "help": ""}, {"name": "physicsBodyType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.", "public": true, "help": ""}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The pivot point of the Group container.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1879, "inlineHelp": "The angle of rotation given in radians.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The scale of the Group container.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1783, "inlineHelp": "The total number of children in this Group who have a state of exists = true.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1884, "inlineHelp": "The visible state of the Group. Non-visible Groups and all of their children are not rendered.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1865, "inlineHelp": "The x coordinate of the Group container.", "public": true, "help": "The x coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1872, "inlineHelp": "The y coordinate of the Group container.", "public": true, "help": "The y coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 160, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = cursor index\\n9 = sort order"}, {"name": "_sortProperty", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 143, "inlineHelp": "The property on which children are sorted.", "public": false, "help": ""}]}, "class": {"help": "A Group is a container for display objects that allows for fast pooling and object recycling.\\nGroups can be nested within other Groups and have their own local transforms.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["Phaser.Group", "Phaser.Sprite", "null"], "name": "parent", "help": "The parent Group, DisplayObject or DisplayObjectContainer that this Group will be added to. If `undefined` it will use game.world. If null it won't be added to anything."}, {"default": "group", "optional": true, "type": ["string"], "name": "name", "help": "A name for this Group. Not used internally but useful for debugging."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "addToStage", "help": "If set to true this Group will be added directly to the Game.Stage instead of Game.World."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "enableBody", "help": "If true all Sprites created with `Group.create` or `Group.createMulitple` will have a physics body created on them. Change the body type with physicsBodyType."}, {"default": "0", "optional": true, "type": ["number"], "name": "physicsBodyType", "help": "If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc."}], "static": false, "constructor": true, "extends": "PIXI.DisplayObjectContainer", "name": "Phaser.Group"}, "consts": [{"line": 183, "type": "number", "name": "RETURN_CHILD", "help": ""}, {"line": 171, "type": "number", "name": "RETURN_NONE", "help": ""}, {"line": 177, "type": "number", "name": "RETURN_TOTAL", "help": ""}, {"line": 189, "type": "number", "name": "SORT_ASCENDING", "help": ""}, {"line": 195, "type": "number", "name": "SORT_DESCENDING", "help": ""}], "methods": {"protected": [{"name": "callbackFromArray", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The object to inspect."}, {"default": null, "optional": false, "type": ["array"], "name": "callback", "help": "The array of function names."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "The size of the array (pre-calculated in callAll)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 1042, "public": false, "help": "Returns a reference to a function that exists on a child of the Group based on the given callback array."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 1191, "public": false, "help": "The core postUpdate - as called by World."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 1151, "public": false, "help": "The core preUpdate - as called by World."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 1175, "public": false, "help": "The core update - as called by World."}, {"name": "updateZ", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 397, "public": false, "help": "Internal method that re-applies all of the childrens Z values."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 209, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method."}, {"name": "addAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to increment, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 956, "public": true, "help": "Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value."}, {"name": "addAt", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index within the Group to insert the child to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 273, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering."}, {"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addMultiple", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "children", "help": "An array containing instances of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The array of children that were added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 249, "public": true, "help": "Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array."}, {"name": "ascendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1385, "public": true, "help": "An internal helper function for the sort process."}, {"name": "bringToTop", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to bring to the top of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 509, "public": true, "help": "Brings the given child to the top of this Group so it renders above all other children."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "method", "help": "A string containing the name of the function that will be called. The function must exist on the child."}, {"default": "null", "optional": true, "type": ["string"], "name": "context", "help": "A string containing the context under which the method will be executed. Set to null to default to the child."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the method."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1095, "public": true, "help": "Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child."}, {"name": "callAllExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that exists on the children that will be called."}, {"default": null, "optional": false, "type": ["boolean"], "name": "existsValue", "help": "Only children with exists=existsValue will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1019, "public": true, "help": "Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback."}, {"name": "checkAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 925, "public": true, "help": "This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children."}, {"name": "checkProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was was equal to value, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 790, "public": true, "help": "Checks a property for the given value on the child."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "countDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as dead.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1582, "public": true, "help": "Call this function to find out how many members of the group are dead."}, {"name": "countLiving", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as alive.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1570, "public": true, "help": "Call this function to find out how many members of the group are alive."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed.", "types": ["Phaser.Sprite", "object"]}, "protected": false, "static": false, "inherited": true, "line": 335, "public": true, "help": "Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "createMultiple", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "quantity", "help": "The number of Sprites to create."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 380, "public": true, "help": "Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "customSort", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "sortHandler", "help": "Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The scope in which the sortHandler is called."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1364, "public": true, "help": "This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b."}, {"name": "descendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1416, "public": true, "help": "An internal helper function for the sort process."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this Group have its destroy method called?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "soft", "help": "A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1751, "public": true, "help": "Destroys this Group. Removes all children, then removes the container from the display list and nulls references."}, {"name": "divideAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to divide, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1004, "public": true, "help": "Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "predicate", "help": "The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns an array list containing all the children that the predicate returned true for", "types": ["Phaser.ArrayList"]}, "protected": false, "static": false, "inherited": true, "line": 1223, "public": true, "help": "Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1250, "public": true, "help": "Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEachAlive", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1295, "public": true, "help": "Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)"}, {"name": "forEachDead", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1313, "public": true, "help": "Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)"}, {"name": "forEachExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1277, "public": true, "help": "Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to return the child from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was found at the given index. If the index was out of bounds then this will return -1.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 310, "public": true, "help": "Returns the child found at the given index within this Group."}, {"name": "getBottom", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the bottom of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1555, "public": true, "help": "Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getFirstAlive", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first alive child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1515, "public": true, "help": "Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first dead child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1528, "public": true, "help": "Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstExists", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "True or false."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1497, "public": true, "help": "Call this function to retrieve the first object with exists == (the given state) in the Group."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to get the index for."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The index of the child or -1 if it's not a member of this Group.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 629, "public": true, "help": "Get the index position of the given child in this Group. This should always match the childs z property."}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "A random child of this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1596, "public": true, "help": "Returns a member at random from the group."}, {"name": "getTop", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the top of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1540, "public": true, "help": "Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child."}, {"name": "hasProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check for the existance of the property on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the child has the property, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 679, "public": true, "help": "Checks if the child has the given property. Will scan up to 4 levels deep only."}, {"name": "iterate", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The child property to check, i.e. 'exists', 'alive', 'health'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "If child.key === this value it will be considered a match. Note that a strict comparison is used."}, {"default": null, "optional": false, "type": ["number"], "name": "returnType", "help": "How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD."}, {"default": "null", "optional": true, "type": ["function"], "name": "callback", "help": "Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns either a numeric total (if RETURN_TOTAL was specified) or the child object.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1446, "public": true, "help": "Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move down in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 571, "public": true, "help": "Moves the given child down one place in this Group unless it's already at the top."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move up in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 547, "public": true, "help": "Moves the given child up one place in this Group unless it's already at the top."}, {"name": "multiplyAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to multiply, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 988, "public": true, "help": "Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value."}, {"name": "next", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 439, "public": true, "help": "Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object."}, {"name": "previous", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 466, "public": true, "help": "Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to remove."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "true if the child was removed from this Group, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 1620, "public": true, "help": "Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child."}, {"name": "removeAll", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on each child that is removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1661, "public": true, "help": "Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list."}, {"name": "removeBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "The index to start removing children from."}, {"default": null, "optional": true, "type": ["number"], "name": "endIndex", "help": "The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1700, "public": true, "help": "Removes all children from this Group whos index falls beteen the given startIndex and endIndex values."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "oldChild", "help": "The child in this Group that will be replaced."}, {"default": null, "optional": false, "type": ["any"], "name": "newChild", "help": "The child to be inserted into this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns the oldChild that was replaced within this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 643, "public": true, "help": "Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group."}, {"name": "resetCursor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "index", "help": "Set the cursor to point to a specific index."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 415, "public": true, "help": "Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead."}, {"name": "reverse", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 615, "public": true, "help": "Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "sendToBack", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to send to the bottom of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": "Sends the given child to the bottom of this Group so it renders below all other children."}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "child", "help": "The child to set the property on."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then the child will only be updated if alive=true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then the child will only be updated if visible=true."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 823, "public": true, "help": "This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 854, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAllChildren", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 889, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to set the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 720, "public": true, "help": "Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "sort", "parameters": [{"default": "'z'", "optional": true, "type": ["string"], "name": "index", "help": "The `string` name of the property you want to sort on. Defaults to the objects z-depth value."}, {"default": "Phaser.Group.SORT_ASCENDING", "optional": true, "type": ["number"], "name": "order", "help": "The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1330, "public": true, "help": "Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`."}, {"name": "subAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to decrement, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 972, "public": true, "help": "Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value."}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child1", "help": "The first child to swap."}, {"default": null, "optional": false, "type": ["any"], "name": "child2", "help": "The second child to swap."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 495, "public": true, "help": "Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "xy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the child in the Group to set the position of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the child."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the child."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 596, "public": true, "help": "Positions the child found at the given index within this Group to the given x and y coordinates."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "", "public": true, "help": "The angle of the split."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "An RGB Split Filter.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.RGBSplitFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the graphic shape. Apply a value of PIXI.blendModes.NORMAL to reset the blend mode."}, {"name": "boundsPadding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "", "public": true, "help": "The bounds' padding used for bounds calculation."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "fillAlpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "The alpha value used when filling the Graphics object."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "isMask", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "Whether this shape is being used as a mask."}, {"name": "lineColor", "default": "0", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "The color of any lines drawn."}, {"name": "lineWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "", "public": true, "help": "The width (thickness) of any lines drawn."}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": "The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to reset the tint."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": [{"name": "_webGL", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "", "public": false, "help": "Array containing some WebGL-related properties used by the WebGL renderer."}, {"name": "cacheAsBitmap", "default": "false", "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 148, "inlineHelp": "", "public": false, "help": "When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\\nThis is useful if your graphics element does not change often, as it will speed up the rendering of the object in exchange for taking up texture memory.\\nIt is also useful if you need the graphics object to be anti-aliased, because it will be rendered using canvas.\\nThis is not recommended if you are constantly redrawing the graphics element."}, {"name": "cachedSpriteDirty", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "", "public": false, "help": "Used to detect if the cached sprite object needs to be updated."}, {"name": "currentPath", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": false, "help": "Current path"}, {"name": "dirty", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "", "public": false, "help": "Used to detect if the graphics object has changed. If this is set to true then the graphics object will be recalculated."}, {"name": "graphicsData", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "", "public": false, "help": "Graphics data"}, {"name": "webGLDirty", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "", "public": false, "help": "Used to detect if the webgl graphics object has changed. If this is set to true then the graphics object will be recalculated."}]}, "class": {"help": "The Graphics class contains methods used to draw primitive shapes such as lines, circles and rectangles to the display, and color and fill them.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.DisplayObjectContainer", "name": "PIXI.Graphics"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "arc", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "cx", "help": "The x-coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "cy", "help": "The y-coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "startAngle", "help": "The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)"}, {"default": null, "optional": false, "type": ["number"], "name": "endAngle", "help": "The ending angle, in radians"}, {"default": null, "optional": false, "type": ["boolean"], "name": "anticlockwise", "help": "Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise."}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 419, "public": true, "help": "The arc method creates an arc/curve (used to create circles, or parts of circles)."}, {"name": "beginFill", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "color", "help": "the color of the fill"}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "the alpha of the fill"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 486, "public": true, "help": "Specifies a simple one-color fill that subsequent calls to other Graphics methods\\n(such as lineTo() or drawCircle()) use when drawing."}, {"name": "bezierCurveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "cpX", "help": "Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY", "help": "Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "cpX2", "help": "Second Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY2", "help": "Second Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "toX", "help": "Destination point x"}, {"default": null, "optional": false, "type": ["number"], "name": "toY", "help": "Destination point y"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 297, "public": true, "help": "Calculate the points for a bezier curve and then draws it."}, {"name": "clear", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 604, "public": true, "help": "Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroyCachedSprite", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1039, "public": true, "help": "Destroys a previous cached sprite."}, {"name": "drawCircle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the center of the circle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the circle"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 560, "public": true, "help": "Draws a circle."}, {"name": "drawEllipse", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coordinate of the center of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coordinate of the center of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The half width of the ellipse"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The half height of the ellipse"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 577, "public": true, "help": "Draws an ellipse."}, {"name": "drawPolygon", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "path", "help": "The path data used to construct the polygon."}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 591, "public": true, "help": "Draws a polygon using the given path."}, {"name": "drawRect", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the rectangle"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": ""}, {"name": "drawRoundedRect", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y coord of the top-left of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "Radius of the rectangle corners"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 544, "public": true, "help": ""}, {"name": "drawShape", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle", "Phaser.Rectangle", "Phaser.Ellipse", "Phaser.Line", "Phaser.Polygon"], "name": "shape", "help": " The Shape object to draw."}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "The generated GraphicsData object.", "types": ["PIXI.GraphicsData"]}, "protected": false, "static": false, "inherited": true, "line": 1055, "public": true, "help": "Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon."}, {"name": "endFill", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 510, "public": true, "help": "Applies a fill to the lines and shapes that were added since the last call to the beginFill() method."}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 625, "public": true, "help": "Useful function that returns a texture of the graphics object that can then be used to create sprites\\nThis can be quite useful if your geometry is complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "the rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 800, "public": true, "help": "Retrieves the bounds of the graphic shape as a rectangle object"}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "lineStyle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "lineWidth", "help": "width of the line to draw, will update the objects stored style"}, {"default": null, "optional": false, "type": ["number"], "name": "color", "help": "color of the line to draw, will update the objects stored style"}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "alpha of the line to draw, will update the objects stored style"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Specifies the line style used for subsequent calls to Graphics methods such as the lineTo() method or the drawCircle() method."}, {"name": "lineTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "the X coordinate to draw to"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "the Y coordinate to draw to"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 227, "public": true, "help": "Draws a line using the current line style from the current drawing position to (x, y);\\nThe current drawing position is then set to (x, y)."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "the X coordinate to move to"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "the Y coordinate to move to"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 211, "public": true, "help": "Moves the current drawing position to x, y."}, {"name": "quadraticCurveTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "cpX", "help": "Control point x"}, {"default": null, "optional": false, "type": ["number"], "name": "cpY", "help": "Control point y"}, {"default": null, "optional": false, "type": ["number"], "name": "toX", "help": "Destination point x"}, {"default": null, "optional": false, "type": ["number"], "name": "toY", "help": "Destination point y"}], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": {"help": "", "types": ["PIXI.Graphics"]}, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Calculate the points for a quadratic bezier curve and then draws it.\\nBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateBounds", "parameters": [], "inheritedFrom": "PIXI.Graphics", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 875, "public": true, "help": "Update the bounds of the object"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "_generateCachedSprite", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 976, "public": false, "help": "Generates the cached sprite when the sprite has cacheAsBitmap = true"}, {"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 732, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 652, "public": false, "help": "Renders the object using the WebGL renderer"}, {"name": "updateCachedSpriteTexture", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1016, "public": false, "help": "Updates texture size based on canvas size"}]}}, {"properties": {"protected": [], "public": [{"name": "fragmentSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The fragment shader."}, {"name": "gl", "default": null, "type": ["PIXI.WebGLContext"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": ""}, {"name": "program", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The WebGL program."}, {"name": "textureCount", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "", "public": true, "help": "A local texture counter for multi-texture shaders."}, {"name": "vertexSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The vertex shader."}], "private": [{"name": "_UID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 17, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.PixiFastShader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 148, "public": true, "help": "Destroys the shader."}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 99, "public": true, "help": "Initialises the shader."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "A wrapper for ajax requests to be handled cross browser", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.AjaxRequest"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "bind", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 79, "public": true, "help": "A polyfill for Function.prototype.bind"}, {"name": "canUseNewCanvasBlendModes", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "whether they are supported", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 174, "public": true, "help": "Checks whether the Canvas BlendModes are supported by the current browser"}, {"name": "cancelAnimationFrame", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 25, "public": true, "help": "A polyfill for cancelAnimationFrame"}, {"name": "getNextPowerOfTwo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "number", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "the closest number that is a power of two", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 197, "public": true, "help": "Given a number, this function returns the closest number that is a power of two\\nthis function is taken from Starling Framework as its pretty neat ;)"}, {"name": "hex2rgb", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "hex", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 60, "public": true, "help": "Converts a hex color number to an [R, G, B] array"}, {"name": "requestAnimationFrame", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 19, "public": true, "help": "A polyfill for requestAnimationFrame\\nYou can actually use both requestAnimationFrame and requestAnimFrame,\\nyou will still benefit from the polyfill"}, {"name": "rgb2hex", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "rgb", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 70, "public": true, "help": "Converts a color as an [R, G, B] array to a hex number"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "currentBaseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "", "public": true, "help": ""}, {"name": "currentBatchSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "", "public": true, "help": ""}, {"name": "currentBlendMode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "", "public": true, "help": ""}, {"name": "drawing", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "", "public": true, "help": ""}, {"name": "indexBuffer", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": ""}, {"name": "indices", "default": null, "type": ["Uint16Array"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "Index data"}, {"name": "lastIndexCount", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "", "public": true, "help": ""}, {"name": "matrix", "default": null, "type": ["PIXI.Matrix"], "private": false, "readOnly": false, "protected": false, "line": 123, "inlineHelp": "", "public": true, "help": ""}, {"name": "maxSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": ""}, {"name": "renderSession", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "", "public": true, "help": ""}, {"name": "shader", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "", "public": true, "help": ""}, {"name": "size", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "", "public": true, "help": ""}, {"name": "vertSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "", "public": true, "help": ""}, {"name": "vertexBuffer", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "", "public": true, "help": ""}, {"name": "vertices", "default": null, "type": ["Float32Array"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "", "public": true, "help": "Vertex data"}], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLFastSpriteBatch"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "begin", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLSpriteBatch"], "name": "spriteBatch", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 158, "public": true, "help": ""}, {"name": "end", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 171, "public": true, "help": ""}, {"name": "flush", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 351, "public": true, "help": ""}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLSpriteBatch"], "name": "spriteBatch", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 180, "public": true, "help": ""}, {"name": "renderSprite", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Sprite"], "name": "sprite", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 211, "public": true, "help": ""}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 135, "public": true, "help": "Sets the WebGL Context."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 399, "public": true, "help": ""}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 391, "public": true, "help": ""}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "currentCursorStyle", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 133, "inlineHelp": "", "public": true, "help": "The css style of the cursor that is being used"}, {"name": "last", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": ""}, {"name": "mouse", "default": null, "type": ["PIXI.InteractionData"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The mouse data"}, {"name": "mouseOut", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 140, "inlineHelp": "", "public": true, "help": "Is set to true when the mouse is moved out of the canvas"}, {"name": "mouseoverEnabled", "default": false, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": ""}, {"name": "onMouseDown", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "", "public": true, "help": ""}, {"name": "onMouseMove", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": ""}, {"name": "onMouseOut", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "", "public": true, "help": ""}, {"name": "onMouseUp", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "", "public": true, "help": ""}, {"name": "onTouchEnd", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 114, "inlineHelp": "", "public": true, "help": ""}, {"name": "onTouchMove", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "", "public": true, "help": ""}, {"name": "onTouchStart", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "", "public": true, "help": ""}, {"name": "pool", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "Tiny little interactiveData pool !"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 146, "inlineHelp": "", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "", "public": true, "help": "A reference to the stage"}, {"name": "touches", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "", "public": true, "help": "An object that stores current touches (InteractionData) by id reference"}], "private": [{"name": "interactionDOMElement", "default": null, "type": ["HTMLCanvasElement"], "private": true, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "", "public": false, "help": "Our canvas"}, {"name": "interactiveItems", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": false, "help": "An array containing all the iterative items from the our interactive tree"}, {"name": "tempPoint", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\\nif its interactive parameter is set to true\\nThis manager also supports multitouch.", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "The stage to handle interactions"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.InteractionManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": [{"name": "collectInteractiveSprite", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "the displayObject to collect"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "iParent", "help": "the display object's parent"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 160, "public": false, "help": "Collects an interactive sprite recursively to have their interactions managed"}, {"name": "hitTest", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "item", "help": "The displayObject to test for a hit"}, {"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": "The interactionData object to update in the case there is a hit"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 594, "public": false, "help": "Tests if the current mouse coordinates hit a sprite"}, {"name": "onMouseDown", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of a mouse button being pressed down"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 423, "public": false, "help": "Is called when the mouse button is pressed down on the renderer element"}, {"name": "onMouseMove", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of the mouse moving"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 387, "public": false, "help": "Is called when the mouse moves across the renderer element"}, {"name": "onMouseOut", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of a mouse being moved out"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 484, "public": false, "help": "Is called when the mouse is moved out of the renderer element"}, {"name": "onMouseUp", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of a mouse button being released"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 525, "public": false, "help": "Is called when the mouse button is released on the renderer element"}, {"name": "onTouchEnd", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of a touch ending on the renderer view"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 805, "public": false, "help": "Is called when a touch is ended on the renderer element"}, {"name": "onTouchMove", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of a touch moving across the renderer view"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 690, "public": false, "help": "Is called when a touch is moved across the renderer element"}, {"name": "onTouchStart", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The DOM event of a touch starting on the renderer view"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 736, "public": false, "help": "Is called when a touch is started on the renderer element"}, {"name": "rebuildInteractiveGraph", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 359, "public": false, "help": ""}, {"name": "removeEvents", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 249, "public": false, "help": ""}, {"name": "setTarget", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLRenderer", "PIXI.CanvasRenderer"], "name": "target", "help": "the renderer to bind events to"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 200, "public": false, "help": "Sets the target for event delegation"}, {"name": "setTargetDomElement", "parameters": [{"default": null, "optional": false, "type": ["DOMElement"], "name": "domElement", "help": "the DOM element which will receive mouse and touch events"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 220, "public": false, "help": "Sets the DOM element which will receive mouse/touch events. This is useful for when you have other DOM\\nelements on top of the renderers Canvas element. With this you'll be able to delegate another DOM element\\nto receive those events"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 276, "public": false, "help": "updates the state of interactive objects"}]}}, {"properties": {"protected": [], "public": [{"name": "_targetPosition", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "Internal point used to calculate target position", "public": true, "help": ""}, {"name": "atLimit", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Whether this camera is flush with the World Bounds or not.", "public": true, "help": ""}, {"name": "bounds", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The Rectangle in which the Camera is bounded. Set to null to allow for movement anywhere.", "public": true, "help": "The Camera is bound to this Rectangle and cannot move outside of it. By default it is enabled and set to the size of the World.\\nThe Rectangle can be located anywhere in the world and updated as often as you like. If you don't wish the Camera to be bound\\nat all then set this to null. The values can be anything and are in World coordinates, with 0,0 being the center of the world."}, {"name": "deadzone", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "Moving inside this Rectangle will not cause the camera to move.", "public": true, "help": ""}, {"name": "displayObject", "default": null, "type": ["PIXI.DisplayObject"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The display object to which all game objects are added. Set by World.boot", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 487, "inlineHelp": "Gets or sets the cameras height.", "public": true, "help": "The Cameras height. By default this is the same as the Game size and should not be adjusted for now."}, {"name": "id", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "Reserved for future multiple camera set-ups.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 445, "inlineHelp": "Gets or sets the cameras xy position using Phaser.Point object.", "public": true, "help": "The Cameras position. This value is automatically clamped if it falls outside of the World bounds."}, {"name": "roundPx", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "If a Camera has roundPx set to `true` it will call `view.floor` as part of its update loop, keeping its boundary to integer values. Set this to `false` to disable this from happening.", "public": true, "help": ""}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "The scale of the display object to which all game objects are added. Set by World.boot", "public": true, "help": ""}, {"name": "screenView", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Used by Sprites to work out Camera culling.", "public": true, "help": ""}, {"name": "target", "default": "null", "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "If the camera is tracking a Sprite, this is a reference to it, otherwise null.", "public": true, "help": ""}, {"name": "view", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "Camera view.\\nThe view into the world we wish to render (by default the game dimensions).\\nThe x/y values are in world coordinates, not screen coordinates, the width/height is how many pixels to render.\\nObjects outside of this view are not rendered if set to camera cull."}, {"name": "visible", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "Whether this camera is visible or not.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 470, "inlineHelp": "Gets or sets the cameras width.", "public": true, "help": "The Cameras width. By default this is the same as the Game size and should not be adjusted for now."}, {"name": "world", "default": null, "type": ["Phaser.World"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the game world.", "public": true, "help": ""}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 399, "inlineHelp": "Gets or sets the cameras x position.", "public": true, "help": "The Cameras x coordinate. This value is automatically clamped if it falls outside of the World bounds."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 422, "inlineHelp": "Gets or sets the cameras y position.", "public": true, "help": "The Cameras y coordinate. This value is automatically clamped if it falls outside of the World bounds."}], "private": [{"name": "edge", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "Edge property.", "public": false, "help": ""}, {"name": "position", "default": "new Phaser.Point()", "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "Current position of the camera in world.", "public": false, "help": ""}]}, "class": {"help": "A Camera is your view into the game world. It has a position and size and renders only those objects within its field of view.\\nThe game automatically creates a single Stage sized camera on boot. Move the camera around the world with Phaser.Camera.x/y", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "id", "help": "Not being used at the moment, will be when Phaser supports multiple camera"}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Position of the camera on the X axis"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Position of the camera on the Y axis"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the view rectangle"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the view rectangle"}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Camera"}, "consts": [{"line": 123, "type": "number", "name": "FOLLOW_LOCKON", "help": ""}, {"line": 129, "type": "number", "name": "FOLLOW_PLATFORMER", "help": ""}, {"line": 135, "type": "number", "name": "FOLLOW_TOPDOWN", "help": ""}, {"line": 141, "type": "number", "name": "FOLLOW_TOPDOWN_TIGHT", "help": ""}], "methods": {"protected": [], "static": [], "public": [{"name": "checkWorldBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 311, "public": true, "help": "Method called to ensure the camera doesn't venture outside of the game world."}, {"name": "focusOn", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "displayObject", "help": "The display object to focus the camera on. Must have visible x/y properties."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 204, "public": true, "help": "Move the camera focus on a display object instantly."}, {"name": "focusOnXY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 216, "public": true, "help": "Move the camera focus on a location instantly."}, {"name": "follow", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text"], "name": "target", "help": "The object you want the camera to track. Set to null to not follow anything."}, {"default": null, "optional": true, "type": ["number"], "name": "style", "help": "Leverage one of the existing \"deadzone\" presets. If you use a custom deadzone, ignore this parameter and manually specify the deadzone after calling follow()."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 151, "public": true, "help": "Tells this camera which sprite to follow."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 382, "public": true, "help": "Resets the camera back to 0,0 and un-follows any object it may have been tracking."}, {"name": "setBoundsToWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 298, "public": true, "help": "Update the Camera bounds to match the game world."}, {"name": "setPosition", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 351, "public": true, "help": "A helper function to set both the X and Y properties of the camera at once\\nwithout having to use game.camera.x and game.camera.y."}, {"name": "setSize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The desired width."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The desired height."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 370, "public": true, "help": "Sets the size of the view rectangle given the width and height in parameters."}, {"name": "unfollow", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 193, "public": true, "help": "Sets the Camera follow target to null, stopping it from following an object if it's doing so."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 226, "public": true, "help": "Update focusing and scrolling."}], "private": [{"name": "updateTarget", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 253, "public": false, "help": "Internal method"}]}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "Phaser.Net handles browser URL related tasks such as checking host names, domain names and query string manipulation.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Net"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "checkDomainName", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "domain", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "true if the given domain fragment can be found in the window.location.hostname", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 48, "public": true, "help": "Compares the given domain name against the hostname of the browser containing the game.\\nIf the domain name is found it returns true.\\nYou can specify a part of a domain, for example 'google' would match 'google.com', 'google.co.uk', etc.\\nDo not include 'http://' at the start."}, {"name": "decodeURI", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "value", "help": "The URI component to be decoded."}], "inheritedFrom": "", "private": false, "returns": {"help": "The decoded value.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 160, "public": true, "help": "Returns the Query String as an object.\\nIf you specify a parameter it will return just the value of that parameter, should it exist."}, {"name": "getHostName", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 28, "public": true, "help": "Returns the hostname given by the browser."}, {"name": "getQueryString", "parameters": [{"default": "''", "optional": true, "type": ["string"], "name": "parameter", "help": "If specified this will return just the value for that key."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object containing the key value pairs found in the query string or just the value if a parameter was given.", "types": ["string", "object"]}, "protected": false, "static": false, "inherited": false, "line": 124, "public": true, "help": "Returns the Query String as an object.\\nIf you specify a parameter it will return just the value of that parameter, should it exist."}, {"name": "updateQueryString", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The querystring key to update."}, {"default": null, "optional": false, "type": ["string"], "name": "value", "help": "The new value to be set. If it already exists it will be replaced."}, {"default": null, "optional": false, "type": ["boolean"], "name": "redirect", "help": "If true the browser will issue a redirect to the url with the new querystring."}, {"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The URL to modify. If none is given it uses window.location.href."}], "inheritedFrom": "", "private": false, "returns": {"help": "If redirect is false then the modified url and query string is returned.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 65, "public": true, "help": "Updates a value on the Query String and returns it in full.\\nIf the value doesn't already exist it is set.\\nIf the value exists it is replaced with the new value given. If you don't provide a new value it is removed from the query string.\\nOptionally you can redirect to the new url, or just return it as a string."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "a", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "", "public": true, "help": ""}, {"name": "b", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": true, "help": ""}, {"name": "c", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": ""}, {"name": "d", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": ""}, {"name": "tx", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "", "public": true, "help": ""}, {"name": "ty", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The Matrix class is now an object, which makes it a lot faster,\\nhere is a representation of it :\\n| a | b | tx|\\n| c | d | ty|\\n| 0 | 0 | 1 |", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.Matrix"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "apply", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "pos", "help": "The origin"}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "[newPos]", "help": "The point that the new position is assigned to (allowed to be same as input)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The new point, transformed through this matrix", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 132, "public": true, "help": "Get a new position with the current transformation applied.\\nCan be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)"}, {"name": "applyInverse", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "pos", "help": "The origin"}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "[newPos]", "help": "The point that the new position is assigned to (allowed to be same as input)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The new point, inverse-transformed through this matrix", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 151, "public": true, "help": "Get a new position with the inverse of the current transformation applied.\\nCan be used to go from the world coordinate space to a child's coordinate space. (e.g. input)"}, {"name": "fromArray", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "array", "help": "The array that the matrix will be populated from."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 73, "public": true, "help": "Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\\n\\na = array[0]\\nb = array[1]\\nc = array[3]\\nd = array[4]\\ntx = array[2]\\nty = array[5]"}, {"name": "identity", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This matrix. Good for chaining method calls.", "types": ["PIXI.Matrix"]}, "protected": false, "static": false, "inherited": false, "line": 256, "public": true, "help": "Resets this Matix to an identity (default) matrix."}, {"name": "toArray", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "transpose", "help": "Whether we need to transpose the matrix or not"}], "inheritedFrom": "", "private": false, "returns": {"help": "the newly created array which contains the matrix", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 90, "public": true, "help": "Creates an array from the current Matrix object."}, {"name": "translate", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": " The amount to scale horizontally"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": " The amount to scale vertically"}, {"default": null, "optional": false, "type": ["number"], "name": "angle", "help": " The angle in radians."}, {"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "This matrix. Good for chaining method calls.", "types": ["PIXI.Matrix"]}, "protected": false, "static": false, "inherited": false, "line": 232, "public": true, "help": "Translates the matrix on the x and y.\\n\\n*/\\nPIXI.Matrix.prototype.translate = function(x, y)\\n{\\nthis.tx += x;\\nthis.ty += y;\\n\\nreturn this;\\n};\\n\\n/**\\nApplies a scale transformation to the matrix.\\n\\n*/\\nPIXI.Matrix.prototype.scale = function(x, y)\\n{\\nthis.a *= x;\\nthis.d *= y;\\nthis.c *= x;\\nthis.b *= y;\\nthis.tx *= x;\\nthis.ty *= y;\\n\\nreturn this;\\n};\\n\\n\\n/**\\nApplies a rotation transformation to the matrix.\\n*/\\nPIXI.Matrix.prototype.rotate = function(angle)\\n{\\nvar cos = Math.cos( angle );\\nvar sin = Math.sin( angle );\\n\\nvar a1 = this.a;\\nvar c1 = this.c;\\nvar tx1 = this.tx;\\n\\nthis.a = a1 * cos-this.b * sin;\\nthis.b = a1 * sin+this.b * cos;\\nthis.c = c1 * cos-this.d * sin;\\nthis.d = c1 * sin+this.d * cos;\\nthis.tx = tx1 * cos - this.ty * sin;\\nthis.ty = tx1 * sin + this.ty * cos;\\n\\nreturn this;\\n};\\n\\n/**\\nAppends the given Matrix to this Matrix."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "first", "default": "null", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "First element in the list.", "public": true, "help": ""}, {"name": "last", "default": "null", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "Last element in the list.", "public": true, "help": ""}, {"name": "next", "default": "null", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "Next element in the list.", "public": true, "help": ""}, {"name": "prev", "default": "null", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "Previous element in the list.", "public": true, "help": ""}, {"name": "total", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "Number of elements in the list.", "public": true, "help": ""}], "private": []}, "class": {"help": "A basic linked list data structure.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "Phaser.LinkedList"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The element to add to this list. Can be a Phaser.Sprite or any other object you need to quickly iterate through."}], "inheritedFrom": "", "private": false, "returns": {"help": "The child that was added.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 56, "public": true, "help": "Adds a new element to this linked list."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function to call."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 153, "public": true, "help": "Calls a function on all members of this list, using the member as the context for the callback.\\nThe function must exist on the member."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "child", "help": "The child to be removed from the list."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 103, "public": true, "help": "Removes the given element from this linked list if it exists."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 87, "public": true, "help": "Resets the first, last, next and previous node pointers in this list."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "attribState", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "", "public": true, "help": ""}, {"name": "maxAttibs", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 16, "inlineHelp": "", "public": true, "help": ""}, {"name": "stack", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": ""}, {"name": "tempAttribState", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLShaderManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 140, "public": true, "help": "Destroys this object."}, {"name": "setAttribs", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "attribs", "help": "attribs"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 78, "public": true, "help": "Takes the attributes given in parameters."}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 51, "public": true, "help": "Initialises the context and the properties."}, {"name": "setShader", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "shader", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 121, "public": true, "help": "Sets the current shader."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "onAddedToGroup", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "This signal is dispatched when the parent is added to a new Group.", "public": true, "help": ""}, {"name": "onAnimationComplete", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "This signal is dispatched when the parent has an animation that finishes playing.", "public": true, "help": ""}, {"name": "onAnimationLoop", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "This signal is dispatched when the parent has an animation that loops playback.", "public": true, "help": ""}, {"name": "onAnimationStart", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "This signal is dispatched when the parent has an animation that is played.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "onDragStart", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "This signal is dispatched if the parent is inputEnabled and receives a drag start event from a Pointer.", "public": true, "help": ""}, {"name": "onDragStop", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "This signal is dispatched if the parent is inputEnabled and receives a drag stop event from a Pointer.", "public": true, "help": ""}, {"name": "onEnterBounds", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "This signal is dispatched when the parent returns within the world bounds (only if Sprite.checkWorldBounds is true).", "public": true, "help": ""}, {"name": "onInputDown", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "This signal is dispatched if the parent is inputEnabled and receives a down event from a Pointer.", "public": true, "help": ""}, {"name": "onInputOut", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "This signal is dispatched if the parent is inputEnabled and receives an out event from a Pointer.", "public": true, "help": ""}, {"name": "onInputOver", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "This signal is dispatched if the parent is inputEnabled and receives an over event from a Pointer.", "public": true, "help": ""}, {"name": "onInputUp", "default": "null", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "This signal is dispatched if the parent is inputEnabled and receives an up event from a Pointer.", "public": true, "help": ""}, {"name": "onKilled", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "This signal is dispatched when the parent is killed.", "public": true, "help": ""}, {"name": "onOutOfBounds", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "This signal is dispatched when the parent leaves the world bounds (only if Sprite.checkWorldBounds is true).", "public": true, "help": ""}, {"name": "onRemovedFromGroup", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "This signal is dispatched when the parent is removed from a Group.", "public": true, "help": ""}, {"name": "onRevived", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "This signal is dispatched when the parent is revived.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "The Sprite that owns these events.", "public": true, "help": ""}], "private": []}, "class": {"help": "The Events component is a collection of events fired by the parent game object.\\n\\nFor example to tell when a Sprite has been added to a new group:\\n\\n`sprite.events.onAddedToGroup.add(yourFunction, this);`\\n\\nWhere `yourFunction` is the function you want called when this event occurs.\\n\\nNote that the Input related events only exist if the Sprite has had `inputEnabled` set to `true`.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "A reference to the Sprite that owns this Events object."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Events"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 127, "public": true, "help": "Removes all events."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "altKey", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "The down state of the ALT key, if pressed at the same time as this key.", "public": true, "help": ""}, {"name": "ctrlKey", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "The down state of the CTRL key, if pressed at the same time as this key.", "public": true, "help": ""}, {"name": "duration", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "The number of milliseconds this key has been held down for.", "public": true, "help": "If the key is down this value holds the duration of that key press and is constantly updated.\\nIf the key is up it holds the duration of the previous down session."}, {"name": "enabled", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "An enabled key processes its update and dispatches events. You can toggle this at run-time to disable a key without deleting it.", "public": true, "help": ""}, {"name": "event", "default": null, "type": ["object"], "private": false, "readOnly": true, "protected": false, "line": 32, "inlineHelp": "Stores the most recent DOM event.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "isDown", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "The \"down\" state of the key.", "public": true, "help": ""}, {"name": "isUp", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The \"up\" state of the key.", "public": true, "help": ""}, {"name": "keyCode", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "The keycode of this key.", "public": true, "help": ""}, {"name": "onDown", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "This Signal is dispatched every time this Key is pressed down. It is only dispatched once (until the key is released again).", "public": true, "help": ""}, {"name": "onHoldCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "A callback that is called while this Key is held down. Warning: Depending on refresh rate that could be 60+ times per second.", "public": true, "help": ""}, {"name": "onHoldContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "The context under which the onHoldCallback will be called.", "public": true, "help": ""}, {"name": "onUp", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "This Signal is dispatched every time this Key is pressed down. It is only dispatched once (until the key is released again).", "public": true, "help": ""}, {"name": "repeats", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "If a key is held down this holds down the number of times the key has 'repeated'.", "public": true, "help": ""}, {"name": "shiftKey", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "The down state of the SHIFT key, if pressed at the same time as this key.", "public": true, "help": ""}, {"name": "timeDown", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "The timestamp when the key was last pressed down. This is based on Game.time.now.", "public": true, "help": ""}, {"name": "timeUp", "default": "-2500", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "The timestamp when the key was last released. This is based on Game.time.now.", "public": true, "help": ""}], "private": []}, "class": {"help": "If you need more fine-grained control over the handling of specific keys you can create and use Phaser.Key objects.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": "The key code this Key is responsible for."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Key"}, "consts": [], "methods": {"protected": [{"name": "processKeyDown", "parameters": [{"default": null, "optional": false, "type": ["KeyboardEvent"], "name": "event.", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 141, "public": false, "help": "Called automatically by Phaser.Keyboard."}, {"name": "processKeyUp", "parameters": [{"default": null, "optional": false, "type": ["KeyboardEvent"], "name": "event.", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 172, "public": false, "help": "Called automatically by Phaser.Keyboard."}], "static": [], "public": [{"name": "justPressed", "parameters": [{"default": "50", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the key is considered as being just pressed."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key is just pressed otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 225, "public": true, "help": "Returns the \"just pressed\" state of the Key. Just pressed is considered true if the key was pressed down within the duration given."}, {"name": "justReleased", "parameters": [{"default": "50", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the key is considered as being just released."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key is just released otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 239, "public": true, "help": "Returns the \"just released\" state of the Key. Just released is considered as being true if the key was released within the duration given."}, {"name": "reset", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "hard", "help": "A soft reset won't reset any events or callbacks that are bound to this Key. A hard reset will."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 199, "public": true, "help": "Resets the state of this Key. This sets isDown to false, isUp to true, resets the time to be the current time and clears any callbacks\\nassociated with the onDown and onUp events and nulls the onHoldCallback if set."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "defaultVertexSrc", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 371, "inlineHelp": "", "public": true, "help": "The Default Vertex shader source."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "A dirty flag"}, {"name": "fragmentSrc", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "", "public": true, "help": "The fragment shader."}, {"name": "gl", "default": null, "type": ["PIXI.WebGLContext"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": ""}, {"name": "program", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The WebGL program."}, {"name": "textureCount", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "A local texture counter for multi-texture shaders."}], "private": [{"name": "_UID", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 18, "inlineHelp": "", "public": false, "help": ""}, {"name": "attributes", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "", "public": false, "help": "Uniform attributes cache."}, {"name": "firstRun", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "", "public": false, "help": "A local flag"}]}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.PixiShader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 356, "public": true, "help": "Destroys the shader."}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 88, "public": true, "help": "Initialises the shader."}, {"name": "initSampler2D", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 213, "public": true, "help": "Initialises a Sampler2D uniform (which may only be available later on after initUniforms once the texture has loaded)"}, {"name": "initUniforms", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 142, "public": true, "help": "Initialises the shader uniform values.\\n\\nUniforms are specified in the GLSL_ES Specification: http://www.khronos.org/registry/webgl/specs/latest/1.0/\\nhttp://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf"}, {"name": "syncUniforms", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 288, "public": true, "help": "Updates the shader uniform values."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "_definedSize", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 41, "inlineHelp": "True if the World has been given a specifically defined size (i.e. from a Tilemap or direct in code) or false if it's just matched to the Game dimensions.", "public": true, "help": ""}, {"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1814, "inlineHelp": "The angle of rotation given in degrees, where 0 degrees = to the right.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "bounds", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "Bound of this world that objects can not escape from.", "public": true, "help": "The World has no fixed size, but it does have a bounds outside of which objects are no longer considered as being \"in world\" and you should use this to clean-up the display list and purge dead objects.\\nBy default we set the Bounds to be from 0,0 to Game.width,Game.height. I.e. it will match the size given to the game constructor with 0,0 representing the top-left of the display.\\nHowever 0,0 is actually the center of the world, and if you rotate or scale the world all of that will happen from 0,0.\\nSo if you want to make a game in which the world itself will rotate you should adjust the bounds so that 0,0 is the center point, i.e. set them to -1000,-1000,2000,2000 for a 2000x2000 sized world centered around 0,0."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "camera", "default": null, "type": ["Phaser.Camera"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "Camera instance.", "public": true, "help": ""}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "centerX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 269, "inlineHelp": "Gets the X position corresponding to the center point of the world.", "public": true, "help": ""}, {"name": "centerY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 282, "inlineHelp": "Gets the Y position corresponding to the center point of the world.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "classType", "default": "Phaser.Sprite", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame."}, {"name": "cursor", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The current display object that the Group cursor is pointing to.", "public": true, "help": "The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "enableBody", "default": "enableBody", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.", "public": true, "help": ""}, {"name": "enableBodyDebug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "If exists is true the Group is updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1834, "inlineHelp": "Set to true to fix this Group to the Camera at its current world coordinates.", "public": true, "help": "A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 243, "inlineHelp": "Gets or sets the current height of the game world. The world can never be smaller than the game (canvas) dimensions.", "public": true, "help": ""}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "ignoreDestroy", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.", "public": true, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1798, "inlineHelp": "The total number of children in this Group, regardless of their exists/alive status.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A name for this Group. Not used internally but useful for debugging.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Group", "Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The parent of this Group.", "public": true, "help": ""}, {"name": "physicsBodyType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.", "public": true, "help": ""}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The pivot point of the Group container.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "randomX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 295, "inlineHelp": "Gets a random integer which is lesser than or equal to the current width of the game world.", "public": true, "help": ""}, {"name": "randomY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 317, "inlineHelp": "Gets a random integer which is lesser than or equal to the current height of the game world.", "public": true, "help": ""}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1879, "inlineHelp": "The angle of rotation given in radians.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The scale of the Group container.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1783, "inlineHelp": "The total number of children in this Group who have a state of exists = true.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1884, "inlineHelp": "The visible state of the Group. Non-visible Groups and all of their children are not rendered.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 218, "inlineHelp": "Gets or sets the current width of the game world. The world can never be smaller than the game (canvas) dimensions.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1865, "inlineHelp": "The x coordinate of the Group container.", "public": true, "help": "The x coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1872, "inlineHelp": "The y coordinate of the Group container.", "public": true, "help": "The y coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": []}, "class": {"help": "\"This world is but a canvas to our imagination.\" - Henry David Thoreau\\n\\nA game has only one world. The world is an abstract place in which all game objects live. It is not bound\\nby stage limits and can be any size. You look into the world via cameras. All game objects live within\\nthe world at world-based coordinates. By default a world is created the same size as your Stage.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Reference to the current game instance."}], "static": false, "constructor": true, "extends": "Phaser.Group", "name": "Phaser.World"}, "consts": [], "methods": {"protected": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 64, "public": false, "help": "Initialises the game world."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 209, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method."}, {"name": "addAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to increment, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 956, "public": true, "help": "Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value."}, {"name": "addAt", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index within the Group to insert the child to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 273, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering."}, {"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addMultiple", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "children", "help": "An array containing instances of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The array of children that were added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 249, "public": true, "help": "Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array."}, {"name": "ascendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1385, "public": true, "help": "An internal helper function for the sort process."}, {"name": "bringToTop", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to bring to the top of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 509, "public": true, "help": "Brings the given child to the top of this Group so it renders above all other children."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "method", "help": "A string containing the name of the function that will be called. The function must exist on the child."}, {"default": "null", "optional": true, "type": ["string"], "name": "context", "help": "A string containing the context under which the method will be executed. Set to null to default to the child."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the method."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1095, "public": true, "help": "Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child."}, {"name": "callAllExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that exists on the children that will be called."}, {"default": null, "optional": false, "type": ["boolean"], "name": "existsValue", "help": "Only children with exists=existsValue will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1019, "public": true, "help": "Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback."}, {"name": "checkAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 925, "public": true, "help": "This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children."}, {"name": "checkProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was was equal to value, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 790, "public": true, "help": "Checks a property for the given value on the child."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "countDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as dead.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1582, "public": true, "help": "Call this function to find out how many members of the group are dead."}, {"name": "countLiving", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as alive.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1570, "public": true, "help": "Call this function to find out how many members of the group are alive."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed.", "types": ["Phaser.Sprite", "object"]}, "protected": false, "static": false, "inherited": true, "line": 335, "public": true, "help": "Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "createMultiple", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "quantity", "help": "The number of Sprites to create."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 380, "public": true, "help": "Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "customSort", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "sortHandler", "help": "Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The scope in which the sortHandler is called."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1364, "public": true, "help": "This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b."}, {"name": "descendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1416, "public": true, "help": "An internal helper function for the sort process."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this Group have its destroy method called?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "soft", "help": "A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1751, "public": true, "help": "Destroys this Group. Removes all children, then removes the container from the display list and nulls references."}, {"name": "divideAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to divide, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1004, "public": true, "help": "Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "predicate", "help": "The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns an array list containing all the children that the predicate returned true for", "types": ["Phaser.ArrayList"]}, "protected": false, "static": false, "inherited": true, "line": 1223, "public": true, "help": "Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1250, "public": true, "help": "Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEachAlive", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1295, "public": true, "help": "Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)"}, {"name": "forEachDead", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1313, "public": true, "help": "Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)"}, {"name": "forEachExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1277, "public": true, "help": "Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to return the child from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was found at the given index. If the index was out of bounds then this will return -1.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 310, "public": true, "help": "Returns the child found at the given index within this Group."}, {"name": "getBottom", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the bottom of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1555, "public": true, "help": "Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getFirstAlive", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first alive child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1515, "public": true, "help": "Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first dead child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1528, "public": true, "help": "Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstExists", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "True or false."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1497, "public": true, "help": "Call this function to retrieve the first object with exists == (the given state) in the Group."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to get the index for."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The index of the child or -1 if it's not a member of this Group.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 629, "public": true, "help": "Get the index position of the given child in this Group. This should always match the childs z property."}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "A random child of this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1596, "public": true, "help": "Returns a member at random from the group."}, {"name": "getTop", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the top of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1540, "public": true, "help": "Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child."}, {"name": "hasProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check for the existance of the property on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the child has the property, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 679, "public": true, "help": "Checks if the child has the given property. Will scan up to 4 levels deep only."}, {"name": "iterate", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The child property to check, i.e. 'exists', 'alive', 'health'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "If child.key === this value it will be considered a match. Note that a strict comparison is used."}, {"default": null, "optional": false, "type": ["number"], "name": "returnType", "help": "How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD."}, {"default": "null", "optional": true, "type": ["function"], "name": "callback", "help": "Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns either a numeric total (if RETURN_TOTAL was specified) or the child object.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1446, "public": true, "help": "Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move down in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 571, "public": true, "help": "Moves the given child down one place in this Group unless it's already at the top."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move up in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 547, "public": true, "help": "Moves the given child up one place in this Group unless it's already at the top."}, {"name": "multiplyAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to multiply, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 988, "public": true, "help": "Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value."}, {"name": "next", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 439, "public": true, "help": "Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object."}, {"name": "previous", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 466, "public": true, "help": "Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to remove."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "true if the child was removed from this Group, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 1620, "public": true, "help": "Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child."}, {"name": "removeAll", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on each child that is removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1661, "public": true, "help": "Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list."}, {"name": "removeBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "The index to start removing children from."}, {"default": null, "optional": true, "type": ["number"], "name": "endIndex", "help": "The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1700, "public": true, "help": "Removes all children from this Group whos index falls beteen the given startIndex and endIndex values."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "oldChild", "help": "The child in this Group that will be replaced."}, {"default": null, "optional": false, "type": ["any"], "name": "newChild", "help": "The child to be inserted into this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns the oldChild that was replaced within this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 643, "public": true, "help": "Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group."}, {"name": "resetCursor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "index", "help": "Set the cursor to point to a specific index."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 415, "public": true, "help": "Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead."}, {"name": "reverse", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 615, "public": true, "help": "Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "sendToBack", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to send to the bottom of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": "Sends the given child to the bottom of this Group so it renders below all other children."}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "child", "help": "The child to set the property on."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then the child will only be updated if alive=true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then the child will only be updated if visible=true."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 823, "public": true, "help": "This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 854, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAllChildren", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 889, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setBounds", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Top left most corner of the world."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Top left most corner of the world."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "New width of the game world in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "New height of the game world in pixels."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 88, "public": true, "help": "Updates the size of this world. Note that this doesn't modify the world x/y coordinates, just the width and height.\\nThe Camera bounds and Physics bounds (if set) are also updated to match the new World bounds."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to set the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 720, "public": true, "help": "Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "shutdown", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 137, "public": true, "help": "Destroyer of worlds."}, {"name": "sort", "parameters": [{"default": "'z'", "optional": true, "type": ["string"], "name": "index", "help": "The `string` name of the property you want to sort on. Defaults to the objects z-depth value."}, {"default": "Phaser.Group.SORT_ASCENDING", "optional": true, "type": ["number"], "name": "order", "help": "The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1330, "public": true, "help": "Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`."}, {"name": "subAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to decrement, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 972, "public": true, "help": "Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value."}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child1", "help": "The first child to swap."}, {"default": null, "optional": false, "type": ["any"], "name": "child2", "help": "The second child to swap."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 495, "public": true, "help": "Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "wrap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.TileSprite", "Phaser.Text"], "name": "sprite", "help": "The object you wish to wrap around the world bounds."}, {"default": "0", "optional": true, "type": ["number"], "name": "padding", "help": "Extra padding added equally to the sprite.x and y coordinates before checking if within the world bounds. Ignored if useBounds is true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "useBounds", "help": "If useBounds is false wrap checks the object.x/y coordinates. If true it does a more accurate bounds check, which is more expensive."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "horizontal", "help": "If horizontal is false, wrap will not wrap the object.x coordinates horizontally."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "vertical", "help": "If vertical is false, wrap will not wrap the object.y coordinates vertically."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 156, "public": true, "help": "This will take the given game object and check if its x/y coordinates fall outside of the world bounds.\\nIf they do it will reposition the object to the opposite side of the world, creating a wrap-around effect.\\nIf sprite has a P2 body then the body (sprite.body) should be passed as first parameter to the function."}, {"name": "xy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the child in the Group to set the position of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the child."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the child."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 596, "public": true, "help": "Positions the child found at the given index within this Group to the given x and y coordinates."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "size", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "", "public": true, "help": "This a point that describes the size of the blocks. x is the width of the block and y is the height."}], "private": []}, "class": {"help": "This filter applies a pixelate effect making display objects appear 'blocky'.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.PixelateFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 258, "inlineHelp": "The total number of frames in this FrameData set.", "public": true, "help": ""}], "private": [{"name": "_frameNames", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "Local array of frame names for name to index conversions.", "public": false, "help": ""}, {"name": "_frames", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "Local array of frames.", "public": false, "help": ""}]}, "class": {"help": "FrameData is a container for Frame objects, which are the internal representation of animation data in Phaser.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "Phaser.FrameData"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The frame to add to this FrameData set."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame that was just added.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 39, "public": true, "help": "Adds a new Frame to this FrameData collection. Typically called by the Animation.Parser and not directly."}, {"name": "checkFrameName", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the frame you want to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the frame is found, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 97, "public": true, "help": "Check if there is a Frame with the given name."}, {"name": "clone", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A clone of this object, including clones of the Frame objects it contains.", "types": ["Phaser.FrameData"]}, "protected": false, "static": false, "inherited": false, "line": 114, "public": true, "help": "Makes a copy of this FrameData including copies (not references) to all of the Frames it contains."}, {"name": "getFrame", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the frame you want to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame, if found.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 61, "public": true, "help": "Get a Frame by its numerical index."}, {"name": "getFrameByName", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the frame you want to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The frame, if found.", "types": ["Phaser.Frame"]}, "protected": false, "static": false, "inherited": false, "line": 79, "public": true, "help": "Get a Frame by its frame name."}, {"name": "getFrameIndexes", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "frames", "help": "An Array containing the indexes of the frames to retrieve. If the array is empty then all frames in the FrameData are returned."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "useNumericIndex", "help": "Are the given frames using numeric indexes (default) or strings? (false)"}, {"default": null, "optional": true, "type": ["array"], "name": "output", "help": "If given the results will be appended to the end of this array otherwise a new array will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of all Frame indexes matching the given names or IDs.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 212, "public": true, "help": "Returns all of the Frame indexes in this FrameData set.\\nThe frames indexes are returned in the output array, or if none is provided in a new Array object."}, {"name": "getFrameRange", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "start", "help": "The starting frame index."}, {"default": null, "optional": false, "type": ["number"], "name": "end", "help": "The ending frame index."}, {"default": null, "optional": true, "type": ["array"], "name": "output", "help": "If given the results will be appended to the end of this array otherwise a new array will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of Frames between the start and end index values, or an empty array if none were found.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 142, "public": true, "help": "Returns a range of frames based on the given start and end frame indexes and returns them in an Array."}, {"name": "getFrames", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "frames", "help": "An Array containing the indexes of the frames to retrieve. If the array is empty then all frames in the FrameData are returned."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "useNumericIndex", "help": "Are the given frames using numeric indexes (default) or strings? (false)"}, {"default": null, "optional": true, "type": ["array"], "name": "output", "help": "If given the results will be appended to the end of this array otherwise a new array will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of all Frames in this FrameData set matching the given names or IDs.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 165, "public": true, "help": "Returns all of the Frames in this FrameData set where the frame index is found in the input array.\\nThe frames are returned in the output array, or if none is provided in a new Array object."}], "private": []}}, {"properties": {"protected": [{"name": "elapsed", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 48, "inlineHelp": "Elapsed time since the last frame (in ms).", "public": false, "help": ""}, {"name": "nextTick", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": true, "line": 65, "inlineHelp": "The time the next tick will occur.", "public": false, "help": ""}], "public": [{"name": "autoDestroy", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "A Timer that is set to automatically destroy itself will do so after all of its events have been dispatched (assuming no looping events).", "public": true, "help": ""}, {"name": "duration", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 650, "inlineHelp": "The duration in ms remaining until the next event will occur.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["array Phaser.TimerEvent"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "An array holding all of this timers Phaser.TimerEvent objects. Use the methods add, repeat and loop to populate it.", "public": true, "help": ""}, {"name": "expired", "default": "false", "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 42, "inlineHelp": "An expired Timer is one in which all of its events have been dispatched and none are pending.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 672, "inlineHelp": "The number of pending events in the queue.", "public": true, "help": ""}, {"name": "ms", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 685, "inlineHelp": "The duration in milliseconds that this Timer has been running for.", "public": true, "help": ""}, {"name": "next", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 637, "inlineHelp": "The time at which the next event will occur.", "public": true, "help": ""}, {"name": "onComplete", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "This signal will be dispatched when this Timer has completed, meaning there are no more events in the queue.", "public": true, "help": ""}, {"name": "paused", "default": "false", "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 78, "inlineHelp": "The paused state of the Timer. You can pause the timer by calling Timer.pause() and Timer.resume() or by the game pausing.", "public": true, "help": ""}, {"name": "running", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "True if the Timer is actively running. Do not switch this boolean, if you wish to pause the timer then use Timer.pause() instead.", "public": true, "help": ""}, {"name": "seconds", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 707, "inlineHelp": "The duration in seconds that this Timer has been running for.", "public": true, "help": ""}, {"name": "timeCap", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "If the difference in time between two frame updates exceeds this value, the event times are reset to avoid catch-up situations.", "public": true, "help": ""}], "private": [{"name": "_codePaused", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "Was the Timer paused by code or by Game focus loss?", "public": false, "help": ""}, {"name": "_diff", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 133, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_i", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "Temp. array counter variable.", "public": false, "help": ""}, {"name": "_len", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "Temp. array length variable.", "public": false, "help": ""}, {"name": "_marked", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "Temp. counter variable.", "public": false, "help": ""}, {"name": "_newTick", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 139, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_now", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "The current start-time adjusted time.", "public": false, "help": ""}, {"name": "_pauseStarted", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "The time the game started being paused.", "public": false, "help": ""}, {"name": "_pauseTotal", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "Total paused time.", "public": false, "help": ""}, {"name": "_started", "default": "0", "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "The time at which this Timer instance started running.", "public": false, "help": ""}]}, "class": {"help": "A Timer is a way to create small re-usable or disposable objects that do nothing but wait for a specific moment in time, and then dispatch an event.\\nYou can add as many events to a Timer as you like, each with their own delays. A Timer uses milliseconds as its unit of time. There are 1000 ms in 1 second.\\nSo if you want to fire an event every quarter of a second you'd need to set the delay to 250.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": " A reference to the currently running game."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "autoDestroy", "help": "A Timer that is set to automatically destroy itself will do so after all of its events have been dispatched (assuming no looping events)."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Timer"}, "consts": [{"line": 159, "type": "number", "name": "HALF", "help": ""}, {"line": 147, "type": "number", "name": "MINUTE", "help": ""}, {"line": 165, "type": "number", "name": "QUARTER", "help": ""}, {"line": 153, "type": "number", "name": "SECOND", "help": ""}], "methods": {"protected": [{"name": "sortHandler", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 347, "public": false, "help": "Sort handler used by Phaser.Timer.order."}, {"name": "update", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "time", "help": "The time from the core game clock."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if there are still events waiting to be dispatched, otherwise false if this Timer can be destroyed.", "types": ["boolean"]}, "protected": true, "static": false, "inherited": false, "line": 392, "public": false, "help": "The main Timer update event, called automatically by Phaser.Time.update."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The number of milliseconds that should elapse before the Timer will call the given callback."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called when the Timer event occurs."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the callback will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "arguments", "help": "The values to be sent to your callback function when it is called."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Phaser.TimerEvent object that was created.", "types": ["Phaser.TimerEvent"]}, "protected": false, "static": false, "inherited": false, "line": 220, "public": true, "help": "Adds a new Event to this Timer. The event will fire after the given amount of 'delay' in milliseconds has passed, once the Timer has started running.\\nCall Timer.start() once you have added all of the Events you require for this Timer. The delay is in relation to when the Timer starts, not the time it was added.\\nIf the Timer is already running the delay will be calculated based on the timers current time."}, {"name": "adjustEvents", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 526, "public": true, "help": "Adjusts the time of all pending events and the nextTick by the given baseTime."}, {"name": "clearPendingEvents", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 367, "public": true, "help": "Clears any events from the Timer which have pendingDelete set to true and then resets the private _len and _i values."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 620, "public": true, "help": "Destroys this Timer. Any pending Events are not dispatched.\\nThe onComplete callbacks won't be called."}, {"name": "loop", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The number of milliseconds that should elapse before the Timer will call the given callback."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called when the Timer event occurs."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the callback will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "arguments", "help": "The values to be sent to your callback function when it is called."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Phaser.TimerEvent object that was created.", "types": ["Phaser.TimerEvent"]}, "protected": false, "static": false, "inherited": false, "line": 259, "public": true, "help": "Adds a new looped Event to this Timer that will repeat forever or until the Timer is stopped.\\nThe event will fire after the given amount of 'delay' milliseconds has passed once the Timer has started running.\\nCall Timer.start() once you have added all of the Events you require for this Timer. The delay is in relation to when the Timer starts, not the time it was added.\\nIf the Timer is already running the delay will be calculated based on the timers current time."}, {"name": "order", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 330, "public": true, "help": "Orders the events on this Timer so they are in tick order. This is called automatically when new events are created."}, {"name": "pause", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 483, "public": true, "help": "Pauses the Timer and all events in the queue."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["Phaser.TimerEvent"], "name": "event", "help": "The event to remove from the queue."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 311, "public": true, "help": "Removes a pending TimerEvent from the queue."}, {"name": "removeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 605, "public": true, "help": "Removes all Events from this Timer and all callbacks linked to onComplete, but leaves the Timer running.\\nThe onComplete callbacks won't be called."}, {"name": "repeat", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The number of milliseconds that should elapse before the Timer will call the given callback."}, {"default": null, "optional": false, "type": ["number"], "name": "repeatCount", "help": "The number of times the event will repeat once is has finished playback. A repeatCount of 1 means it will repeat itself once, playing the event twice in total."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called when the Timer event occurs."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the callback will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "arguments", "help": "The values to be sent to your callback function when it is called."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Phaser.TimerEvent object that was created.", "types": ["Phaser.TimerEvent"]}, "protected": false, "static": false, "inherited": false, "line": 240, "public": true, "help": "Adds a new TimerEvent that will always play through once and then repeat for the given number of iterations.\\nThe event will fire after the given amount of 'delay' milliseconds has passed once the Timer has started running.\\nCall Timer.start() once you have added all of the Events you require for this Timer. The delay is in relation to when the Timer starts, not the time it was added.\\nIf the Timer is already running the delay will be calculated based on the timers current time."}, {"name": "resume", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 563, "public": true, "help": "Resumes the Timer and updates all pending events."}, {"name": "start", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "delay", "help": "The number of milliseconds that should elapse before the Timer will start."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 270, "public": true, "help": "Starts this Timer running."}, {"name": "stop", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "clearEvents", "help": "If true all the events in Timer will be cleared, otherwise they will remain."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 293, "public": true, "help": "Stops this Timer from running. Does not cause it to be destroyed if autoDestroy is set to true."}], "private": [{"name": "_pause", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 508, "public": false, "help": "This is called by the core Game loop. Do not call it directly, instead use Timer.pause."}, {"name": "_resume", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 586, "public": false, "help": "This is called by the core Game loop. Do not call it directly, instead use Timer.pause."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The number of milliseconds that should elapse before the Timer will call the given callback. This value should be an integer, not a float. Math.round() is applied to it by this method."}, {"default": null, "optional": false, "type": ["boolean"], "name": "loop", "help": "Should the event loop or not?"}, {"default": null, "optional": false, "type": ["number"], "name": "repeatCount", "help": "The number of times the event will repeat."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be called when the Timer event occurs."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the callback will be called."}, {"default": null, "optional": false, "type": ["array"], "name": "arguments", "help": "The values to be sent to your callback function when it is called."}], "inheritedFrom": "", "private": true, "returns": {"help": "The Phaser.TimerEvent object that was created.", "types": ["Phaser.TimerEvent"]}, "protected": false, "static": false, "inherited": false, "line": 181, "public": false, "help": "Creates a new TimerEvent on this Timer. Use the methods add, repeat or loop instead of this."}]}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "Whether the strip is dirty or not"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "", "public": true, "help": "if you need a padding, not yet implemented"}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "", "public": true, "help": "The texture of the strip"}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": []}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The texture to use"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "the width"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the height"}], "static": false, "constructor": true, "extends": "PIXI.DisplayObjectContainer", "name": "PIXI.Strip"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "onTextureUpdate", "parameters": [{"default": null, "optional": false, "type": [], "name": null, "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 348, "public": false, "help": "When the texture is updated, this event will fire to update the scale and frame"}, {"name": "renderStripFlat", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Strip"], "name": "strip", "help": "The Strip to render"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 300, "public": false, "help": "Renders a flat strip"}]}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "Arcade Particles is a Particle System integrated with Arcade Physics.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.Particles.Arcade"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "collideIndexes", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "An array of tile indexes that collide.", "public": true, "help": ""}, {"name": "collision", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "An array of collision data (polylines, etc).", "public": true, "help": ""}, {"name": "currentLayer", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "The current layer.", "public": true, "help": ""}, {"name": "debugMap", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "Map data used for debug values only.", "public": true, "help": ""}, {"name": "format", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "The format of the map data, either Phaser.Tilemap.CSV or Phaser.Tilemap.TILED_JSON.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "The height of the map (in tiles).", "public": true, "help": ""}, {"name": "heightInPixels", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "The height of the map in pixels based on height * tileHeight.", "public": true, "help": ""}, {"name": "images", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "An array of Tiled Image Layers.", "public": true, "help": ""}, {"name": "key", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "The key of this map data in the Phaser.Cache.", "public": true, "help": ""}, {"name": "layer", "default": null, "type": ["number", "string", "Phaser.TilemapLayer"], "private": false, "readOnly": false, "protected": false, "line": 1780, "inlineHelp": "The current layer object.", "public": true, "help": ""}, {"name": "layers", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "An array of Tilemap layer data.", "public": true, "help": ""}, {"name": "objects", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "An array of Tiled Object Layers.", "public": true, "help": ""}, {"name": "orientation", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "The orientation of the map data (as specified in Tiled), usually 'orthogonal'.", "public": true, "help": ""}, {"name": "properties", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 82, "inlineHelp": "Map specific properties as specified in Tiled.", "public": true, "help": ""}, {"name": "tileHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "The base height of the tiles in the map (in pixels).", "public": true, "help": ""}, {"name": "tileWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "The base width of the tiles in the map (in pixels).", "public": true, "help": ""}, {"name": "tiles", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "The super array of Tiles.", "public": true, "help": ""}, {"name": "tilesets", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "An array of Tilesets.", "public": true, "help": ""}, {"name": "version", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "The version of the map data (as specified in Tiled, usually 1).", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "The width of the map (in tiles).", "public": true, "help": ""}, {"name": "widthInPixels", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "The width of the map in pixels based on width * tileWidth.", "public": true, "help": ""}], "private": [{"name": "_results", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 143, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "_tempA", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 149, "inlineHelp": "Internal var.", "public": false, "help": ""}, {"name": "_tempB", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 155, "inlineHelp": "Internal var.", "public": false, "help": ""}]}, "class": {"help": "Creates a new Phaser.Tilemap object. The map can either be populated with data from a Tiled JSON file or from a CSV file.\\nTo do this pass the Cache key as the first parameter. When using Tiled data you need only provide the key.\\nWhen using CSV data you must provide the key and the tileWidth and tileHeight parameters.\\nIf creating a blank tilemap to be populated later, you can either specify no parameters at all and then use `Tilemap.create` or pass the map and tile dimensions here.\\nNote that all Tilemaps use a base tile size to calculate dimensions from, but that a TilemapLayer may have its own unique tile size that overrides it.\\nA Tile map is rendered to the display using a TilemapLayer. It is not added to the display list directly itself.\\nA map may have multiple layers. You can perform operations on the map data such as copying, pasting, filling and shuffling the tiles around.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}, {"default": null, "optional": true, "type": ["string"], "name": "key", "help": "The key of the tilemap data as stored in the Cache. If you're creating a blank map either leave this parameter out or pass `null`."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileWidth", "help": "The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileHeight", "help": "The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data."}, {"default": "10", "optional": true, "type": ["number"], "name": "width", "help": "The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}, {"default": "10", "optional": true, "type": ["number"], "name": "height", "help": "The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Tilemap"}, "consts": [{"line": 163, "type": "number", "name": "CSV", "help": ""}, {"line": 181, "type": "number", "name": "EAST", "help": ""}, {"line": 175, "type": "number", "name": "NORTH", "help": ""}, {"line": 187, "type": "number", "name": "SOUTH", "help": ""}, {"line": 169, "type": "number", "name": "TILED_JSON", "help": ""}, {"line": 193, "type": "number", "name": "WEST", "help": ""}], "methods": {"protected": [{"name": "calculateFaces", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "layer", "help": "The index of the TilemapLayer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 915, "public": false, "help": "Internal function."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "location", "help": "The local array to search."}, {"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the array element to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the element in the array, or null if not found.", "types": ["number"]}, "protected": true, "static": false, "inherited": false, "line": 551, "public": false, "help": "Gets the layer index based on the layers name."}, {"name": "getLayer", "parameters": [{"default": null, "optional": false, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}], "inheritedFrom": "", "private": false, "returns": {"help": "The TilemapLayer index.", "types": ["number"]}, "protected": true, "static": false, "inherited": false, "line": 863, "public": false, "help": "Gets the TilemapLayer index as used in the setCollision calls."}, {"name": "setCollisionByIndex", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the tile on the layer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "collides", "help": "If true it will enable collision on the tile. If false it will clear collision values from the tile."}, {"default": null, "optional": true, "type": ["number"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "recalculate", "help": "Recalculates the tile faces after the update."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 800, "public": false, "help": "Sets collision values on a tile in the set.\\nYou shouldn't usually call this method directly, instead use setCollision, setCollisionBetween or setCollisionByExclusion."}], "static": [], "public": [{"name": "addTilesetImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "tileset", "help": "The name of the tileset as specified in the map data."}, {"default": null, "optional": true, "type": ["string"], "name": "key", "help": "The key of the Phaser.Cache image used for this tileset. If not specified it will look for an image with a key matching the tileset parameter."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileWidth", "help": "The width of the tiles in the Tileset Image. If not given it will default to the map.tileWidth value, if that isn't set then 32."}, {"default": "32", "optional": true, "type": ["number"], "name": "tileHeight", "help": "The height of the tiles in the Tileset Image. If not given it will default to the map.tileHeight value, if that isn't set then 32."}, {"default": "0", "optional": true, "type": ["number"], "name": "tileMargin", "help": "The width of the tiles in the Tileset Image. If not given it will default to the map.tileWidth value."}, {"default": "0", "optional": true, "type": ["number"], "name": "tileSpacing", "help": "The height of the tiles in the Tileset Image. If not given it will default to the map.tileHeight value."}, {"default": "0", "optional": true, "type": ["number"], "name": "gid", "help": "If adding multiple tilesets to a blank/dynamic map, specify the starting GID the set will use here."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the Tileset object that was created or updated, or null if it failed.", "types": ["Phaser.Tileset"]}, "protected": false, "static": false, "inherited": false, "line": 254, "public": true, "help": "Adds an image to the map to be used as a tileset. A single map may use multiple tilesets.\\nNote that the tileset name can be found in the JSON file exported from Tiled, or in the Tiled editor."}, {"name": "copy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to copy the tiles from."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of the tiles that were copied.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1383, "public": true, "help": "Copies all of the tiles in the given rectangular block into the tilemap data buffer."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the default layer of the map."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the map in tiles."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the map in tiles."}, {"default": null, "optional": false, "type": ["number"], "name": "tileWidth", "help": "The width of the tiles the map uses for calculations."}, {"default": null, "optional": false, "type": ["number"], "name": "tileHeight", "help": "The height of the tiles the map uses for calculations."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the layer to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The TilemapLayer object. This is an extension of Phaser.Image and can be moved around the display list accordingly.", "types": ["Phaser.TilemapLayer"]}, "protected": false, "static": false, "inherited": false, "line": 209, "public": true, "help": "Creates an empty map of the given dimensions and one blank layer. If layers already exist they are erased."}, {"name": "createBlankLayer", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of this layer. Must be unique within the map."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the layer in tiles."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the layer in tiles."}, {"default": null, "optional": false, "type": ["number"], "name": "tileWidth", "help": "The width of the tiles the layer uses for calculations."}, {"default": null, "optional": false, "type": ["number"], "name": "tileHeight", "help": "The height of the tiles the layer uses for calculations."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the layer to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The TilemapLayer object. This is an extension of Phaser.Image and can be moved around the display list accordingly.", "types": ["Phaser.TilemapLayer"]}, "protected": false, "static": false, "inherited": false, "line": 471, "public": true, "help": "Creates a new and empty layer on this Tilemap. By default TilemapLayers are fixed to the camera."}, {"name": "createFromObjects", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the Object Group to create Sprites from."}, {"default": null, "optional": false, "type": ["number"], "name": "gid", "help": "The layer array index value, or if a string is given the layer name within the map data."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "autoCull", "help": "The default autoCull state of the Sprite. Sprites that are autoCulled are culled from the camera if out of its range."}, {"default": "Phaser.World", "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Group to add the Sprite to. If not specified it will be added to the World group."}, {"default": "Phaser.Sprite", "optional": true, "type": ["object"], "name": "CustomClass", "help": "If you wish to create your own class, rather than Phaser.Sprite, pass the class here. Your class must extend Phaser.Sprite and have the same constructor parameters."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "adjustY", "help": "By default the Tiled map editor uses a bottom-left coordinate system. Phaser uses top-left. So most objects will appear too low down. This parameter moves them up by their height."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 378, "public": true, "help": "Creates a Sprite for every object matching the given gid in the map data. You can optionally specify the group that the Sprite will be created in. If none is\\ngiven it will be created in the World. All properties from the map data objectgroup are copied across to the Sprite, so you can use this as an easy way to\\nconfigure Sprite properties from within the map editor. For example giving an object a property of alpha: 0.5 in the map editor will duplicate that when the\\nSprite is created. You could also give it a value like: body.velocity.x: 100 to set it moving automatically."}, {"name": "createLayer", "parameters": [{"default": null, "optional": false, "type": ["number", "string"], "name": "layer", "help": "The layer array index value, or if a string is given the layer name, within the map data that this TilemapLayer represents."}, {"default": null, "optional": true, "type": ["number"], "name": "width", "help": "The rendered width of the layer, should never be wider than Game.width. If not given it will be set to Game.width."}, {"default": null, "optional": true, "type": ["number"], "name": "height", "help": "The rendered height of the layer, should never be wider than Game.height. If not given it will be set to Game.height."}, {"default": null, "optional": true, "type": ["Phaser.Group"], "name": "group", "help": "Optional Group to add the object to. If not specified it will be added to the World group."}], "inheritedFrom": "", "private": false, "returns": {"help": "The TilemapLayer object. This is an extension of Phaser.Sprite and can be moved around the display list accordingly.", "types": ["Phaser.TilemapLayer"]}, "protected": false, "static": false, "inherited": false, "line": 434, "public": true, "help": "Creates a new TilemapLayer object. By default TilemapLayers are fixed to the camera.\\nThe `layer` parameter is important. If you've created your map in Tiled then you can get this by looking in Tiled and looking at the Layer name.\\nOr you can open the JSON file it exports and look at the layers[].name value. Either way it must match.\\nIf you wish to create a blank layer to put your own tiles on then see Tilemap.createBlankLayer."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1764, "public": true, "help": "Removes all layer data from this tile map and nulls the game reference.\\nNote: You are responsible for destroying any TilemapLayer objects you generated yourself, as Tilemap doesn't keep a reference to them."}, {"name": "dump", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1722, "public": true, "help": "Dumps the tilemap data out to the console."}, {"name": "fill", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the tile that the area will be filled with."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width in tiles of the area to operate on."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height in tiles of the area to operate on."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1685, "public": true, "help": "Fills the given area with the specified tile."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "callback", "help": "The callback. Each tile in the given area will be passed to this callback as the first and only parameter."}, {"default": null, "optional": false, "type": ["number"], "name": "context", "help": "The context under which the callback should be run."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width in tiles of the area to operate on."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height in tiles of the area to operate on."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1535, "public": true, "help": "For each tile in the given area defined by x/y and width/height run the given callback."}, {"name": "getImageIndex", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the image to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the image in this tilemap, or null if not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 598, "public": true, "help": "Gets the image index based on its name."}, {"name": "getLayerIndex", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the layer to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the layer in this tilemap, or null if not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 572, "public": true, "help": "Gets the layer index based on its name."}, {"name": "getObjectIndex", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the object to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the object in this tilemap, or null if not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 611, "public": true, "help": "Gets the object index based on its name."}, {"name": "getTile", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to get the tile from (given in tile units, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to get the tile from (given in tile units, not pixels)"}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to get the tile from."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "nonNull", "help": "If true getTile won't return null for empty tiles, but a Tile object with an index of -1."}], "inheritedFrom": "", "private": false, "returns": {"help": "The tile at the given coordinates or null if no tile was found or the coordinates were invalid.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1316, "public": true, "help": "Gets a tile from the Tilemap Layer. The coordinates are given in tile values."}, {"name": "getTileAbove", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "layer", "help": "The local layer index to get the tile from. Can be determined by Tilemap.getLayer()."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to get the tile from. In tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to get the tile from. In tiles, not pixels."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 987, "public": true, "help": "Gets the tile above the tile coordinates given.\\nMostly used as an internal function by calculateFaces."}, {"name": "getTileBelow", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "layer", "help": "The local layer index to get the tile from. Can be determined by Tilemap.getLayer()."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to get the tile from. In tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to get the tile from. In tiles, not pixels."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1007, "public": true, "help": "Gets the tile below the tile coordinates given.\\nMostly used as an internal function by calculateFaces."}, {"name": "getTileLeft", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "layer", "help": "The local layer index to get the tile from. Can be determined by Tilemap.getLayer()."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to get the tile from. In tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to get the tile from. In tiles, not pixels."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1027, "public": true, "help": "Gets the tile to the left of the tile coordinates given.\\nMostly used as an internal function by calculateFaces."}, {"name": "getTileRight", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "layer", "help": "The local layer index to get the tile from. Can be determined by Tilemap.getLayer()."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to get the tile from. In tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to get the tile from. In tiles, not pixels."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1047, "public": true, "help": "Gets the tile to the right of the tile coordinates given.\\nMostly used as an internal function by calculateFaces."}, {"name": "getTileWorldXY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to get the tile from (given in pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to get the tile from (given in pixels)"}, {"default": null, "optional": true, "type": ["number"], "name": "tileWidth", "help": "The width of the tiles. If not given the map default is used."}, {"default": null, "optional": true, "type": ["number"], "name": "tileHeight", "help": "The height of the tiles. If not given the map default is used."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to get the tile from."}], "inheritedFrom": "", "private": false, "returns": {"help": "The tile at the given coordinates.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1358, "public": true, "help": "Gets a tile from the Tilemap layer. The coordinates are given in pixel values."}, {"name": "getTilesetIndex", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the tileset to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "The index of the tileset in this tilemap, or null if not found.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 585, "public": true, "help": "Gets the tileset index based on its name."}, {"name": "hasTile", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to check if a tile exists at (given in tile units, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to check if a tile exists at (given in tile units, not pixels)"}, {"default": null, "optional": false, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to set as current."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if there is a tile at the given location, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1084, "public": true, "help": "Checks if there is a tile at the given location."}, {"name": "paste", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to paste to (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to paste to (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["array"], "name": "tileblock", "help": "The block of tiles to paste."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to paste the tiles into."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1443, "public": true, "help": "Pastes a previously copied block of tile data into the given x/y coordinates. Data should have been prepared with Tilemap.copy."}, {"name": "putTile", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tile", "number", "null"], "name": "tile", "help": "The index of this tile to set or a Phaser.Tile object. If null the tile is removed from the map."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to place the tile (given in tile units, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to place the tile (given in tile units, not pixels)"}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to modify."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Tile object that was created or added to this map.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1156, "public": true, "help": "Puts a tile of the given index value at the coordinate specified.\\nIf you pass `null` as the tile it will pass your call over to Tilemap.removeTile instead."}, {"name": "putTileWorldXY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tile", "number"], "name": "tile", "help": "The index of this tile to set or a Phaser.Tile object."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to insert the tile (given in pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to insert the tile (given in pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "tileWidth", "help": "The width of the tile in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "tileHeight", "help": "The height of the tile in pixels."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to modify."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Tile object that was created or added to this map.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1228, "public": true, "help": "Puts a tile into the Tilemap layer. The coordinates are given in pixel values."}, {"name": "random", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width in tiles of the area to operate on."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height in tiles of the area to operate on."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1597, "public": true, "help": "Randomises a set of tiles in a given area."}, {"name": "removeAllLayers", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1710, "public": true, "help": "Removes all layers from this tile map."}, {"name": "removeTile", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to place the tile (given in tile units, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to place the tile (given in tile units, not pixels)"}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to modify."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Tile object that was removed from this map.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1101, "public": true, "help": "Removes the tile located at the given coordinates and updates the collision data."}, {"name": "removeTileWorldXY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position to insert the tile (given in pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position to insert the tile (given in pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "tileWidth", "help": "The width of the tile in pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "tileHeight", "help": "The height of the tile in pixels."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to modify."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Tile object that was removed from this map.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1134, "public": true, "help": "Removes the tile located at the given coordinates and updates the collision data. The coordinates are given in pixel values."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "source", "help": "The tile index value to scan for."}, {"default": null, "optional": false, "type": ["number"], "name": "dest", "help": "The tile index value to replace found tiles with."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width in tiles of the area to operate on."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height in tiles of the area to operate on."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1564, "public": true, "help": "Scans the given area for tiles with an index matching `source` and updates their index to match `dest`."}, {"name": "searchTileIndex", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The tile index value to search for."}, {"default": "0", "optional": true, "type": ["number"], "name": "skip", "help": "The number of times to skip a matching tile before returning."}, {"default": "false", "optional": true, "type": ["number"], "name": "reverse", "help": "If true it will scan the layer in reverse, starting at the bottom-right. Otherwise it scans from the top-left."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to get the tile from."}], "inheritedFrom": "", "private": false, "returns": {"help": "The first (or n skipped) tile with the matching index.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 1252, "public": true, "help": "Searches the entire map layer for the first tile matching the given index, then returns that Phaser.Tile object.\\nIf no match is found it returns null.\\nThe search starts from the top-left tile and continues horizontally until it hits the end of the row, then it drops down to the next column.\\nIf the reverse boolean is true, it scans starting from the bottom-right corner travelling up to the top-left."}, {"name": "setCollision", "parameters": [{"default": null, "optional": false, "type": ["number", "array"], "name": "indexes", "help": "Either a single tile index, or an array of tile IDs to be checked for collision."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "collides", "help": "If true it will enable collision. If false it will clear collision."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "recalculate", "help": "Recalculates the tile faces after the update."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 690, "public": true, "help": "Sets collision the given tile or tiles. You can pass in either a single numeric index or an array of indexes: [ 2, 3, 15, 20].\\nThe `collides` parameter controls if collision will be enabled (true) or disabled (false)."}, {"name": "setCollisionBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "start", "help": "The first index of the tile to be set for collision."}, {"default": null, "optional": false, "type": ["number"], "name": "stop", "help": "The last index of the tile to be set for collision."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "collides", "help": "If true it will enable collision. If false it will clear collision."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "recalculate", "help": "Recalculates the tile faces after the update."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 730, "public": true, "help": "Sets collision on a range of tiles where the tile IDs increment sequentially.\\nCalling this with a start value of 10 and a stop value of 14 would set collision for tiles 10, 11, 12, 13 and 14.\\nThe `collides` parameter controls if collision will be enabled (true) or disabled (false)."}, {"name": "setCollisionByExclusion", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "indexes", "help": "An array of the tile IDs to not be counted for collision."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "collides", "help": "If true it will enable collision. If false it will clear collision."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "recalculate", "help": "Recalculates the tile faces after the update."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 765, "public": true, "help": "Sets collision on all tiles in the given layer, except for the IDs of those in the given array.\\nThe `collides` parameter controls if collision will be enabled (true) or disabled (false)."}, {"name": "setLayer", "parameters": [{"default": null, "optional": false, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to set as current."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1064, "public": true, "help": "Sets the current layer to the given index."}, {"name": "setPreventRecalculate", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "if", "help": " true it will put the recalculation on hold."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 894, "public": true, "help": "Turn off/on the recalculation of faces for tile or collission updates.\\nsetPreventRecalculate(true) puts recalculation on hold while\\nsetPreventRecalculate(false) recalculates all the changed layers."}, {"name": "setTileIndexCallback", "parameters": [{"default": null, "optional": false, "type": ["number", "array"], "name": "indexes", "help": "Either a single tile index, or an array of tile indexes to have a collision callback set for."}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be invoked when the tile is collided with."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback is called."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 628, "public": true, "help": "Sets a global collision callback for the given tile index within the layer. This will affect all tiles on this layer that have the same index.\\nIf a callback is already set for the tile index it will be replaced. Set the callback to null to remove it.\\nIf you want to set a callback for a tile at a specific location on the map then see setTileLocationCallback."}, {"name": "setTileLocationCallback", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the area to copy (given in tiles, not pixels)"}, {"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be invoked when the tile is collided with."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback is called."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to this.currentLayer."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 662, "public": true, "help": "Sets a global collision callback for the given map location within the layer. This will affect all tiles on this layer found in the given area.\\nIf a callback is already set for the tile index it will be replaced. Set the callback to null to remove it.\\nIf you want to set a callback for a tile at a specific location on the map then see setTileLocationCallback."}, {"name": "setTileSize", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "tileWidth", "help": "The width of the tiles the map uses for calculations."}, {"default": null, "optional": false, "type": ["number"], "name": "tileHeight", "help": "The height of the tiles the map uses for calculations."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 231, "public": true, "help": "Sets the base tile size for the map."}, {"name": "shuffle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width in tiles of the area to operate on."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height in tiles of the area to operate on."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1642, "public": true, "help": "Shuffles a set of tiles in a given area. It will only randomise the tiles in that area, so if they're all the same nothing will appear to have changed!"}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "tileA", "help": "First tile index."}, {"default": null, "optional": false, "type": ["number"], "name": "tileB", "help": "Second tile index."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left of the area to operate one, given in tiles, not pixels."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width in tiles of the area to operate on."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height in tiles of the area to operate on."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1481, "public": true, "help": "Scans the given area for tiles with an index matching tileA and swaps them with tileB."}], "private": [{"name": "swapHandler", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1508, "public": false, "help": "Internal function that handles the swapping of tiles."}]}}, {"properties": {"protected": [], "public": [{"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "The x value of the point.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "The y value of the point.", "public": true, "help": ""}], "private": []}, "class": {"help": "A Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.\\nThe following code creates a point at (0,0):\\n`var myPoint = new Phaser.Point();`\\nYou can also use them as 2D Vectors and you'll find different vector related methods in this class.", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The horizontal position of this Point."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The vertical position of this Point."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Point"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 483, "public": true, "help": "Adds the coordinates of two points together to create a new point."}, {"name": "angle", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle between the two Points.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 576, "public": true, "help": "Returns the angle between two Point objects."}, {"name": "angleSq", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}], "inheritedFrom": "", "private": false, "returns": {"help": "The angle squared between the two Points.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 591, "public": true, "help": "Returns the angle squared between two Point objects."}, {"name": "centroid", "parameters": [{"default": null, "optional": false, "type": ["array Phaser.Point"], "name": "points", "help": "The array of one or more points."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 834, "public": true, "help": "Calculates centroid (or midpoint) from an array of points. If only one point is provided, that point is returned."}, {"name": "clamp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value to clamp this Point to."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value to clamp this Point to."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 202, "public": true, "help": "Clamps this Point object values to be between the given min and max."}, {"name": "clampX", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value to clamp this Point to."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value to clamp this Point to."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 172, "public": true, "help": "Clamps the x value of this Point to be between the given min and max."}, {"name": "clampY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value to clamp this Point to."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value to clamp this Point to."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 187, "public": true, "help": "Clamps the y value of this Point to be between the given min and max"}, {"name": "clone", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Point"], "name": "output", "help": " Optional Point object. If given the values will be set into this object, otherwise a brand new Point object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 217, "public": true, "help": "Creates a copy of the given Point."}, {"name": "copyFrom", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The object to copy from."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 44, "public": true, "help": "Copies the x and y properties from any given object to this Point."}, {"name": "copyTo", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "dest", "help": "The object to copy to."}], "inheritedFrom": "", "private": false, "returns": {"help": "The dest object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 239, "public": true, "help": "Copies the x and y properties from this Point to any given object."}, {"name": "cross", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object to get the cross product combined with this Point."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 416, "public": true, "help": "The cross product of this and another Point object."}, {"name": "distance", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The target object. Must have visible x and y properties that represent the center of the object."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The target object. Must have visible x and y properties that represent the center of the object."}, {"default": null, "optional": true, "type": ["boolean"], "name": "round", "help": "Round the distance to the nearest integer (default false)."}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between this Point object and the destination Point object.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 690, "public": true, "help": "Returns the distance of this Point object to the given object (can be a Circle, Point or anything with x/y properties)."}, {"name": "divide", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 543, "public": true, "help": "Divides the coordinates of two points to create a new point."}, {"name": "dot", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object to get the dot product combined with this Point."}], "inheritedFrom": "", "private": false, "returns": {"help": "The result.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 403, "public": true, "help": "The dot product of this and another Point object."}, {"name": "equals", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the Points are equal, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 562, "public": true, "help": "Determines whether the two given Point objects are equal. They are considered equal if they have the same x and y values."}, {"name": "getMagnitude", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The length of the Point.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 334, "public": true, "help": "Calculates the length of the Point object."}, {"name": "getMagnitudeSq", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The length ^ 2 of the Point.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 346, "public": true, "help": "Calculates the length squared of the Point object."}, {"name": "interpolate", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": false, "type": ["number"], "name": "f", "help": "The level of interpolation between the two points. Indicates where the new point will be, along the line between pt1 and pt2. If f=1, pt1 is returned; if f=0, pt2 is returned."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 641, "public": true, "help": "Interpolates the two given Points, based on the `f` value (between 0 and 1) and returns a new Point."}, {"name": "invert", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 56, "public": true, "help": "Inverts the x and y values of this Point"}, {"name": "isZero", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if this Point is 0,0, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 390, "public": true, "help": "Determine if this point is at 0,0."}, {"name": "multiply", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 523, "public": true, "help": "Multiplies the coordinates of two points to create a new point."}, {"name": "multiplyAdd", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": false, "type": ["number"], "name": "s", "help": "The scaling value."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 623, "public": true, "help": "Adds two 2D Points together and multiplies the result by the given scalar."}, {"name": "negative", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 605, "public": true, "help": "Creates a negative Point."}, {"name": "normalRightHand", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 761, "public": true, "help": "Right-hand normalize (make unit length) a Point."}, {"name": "normalize", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 777, "public": true, "help": "Normalize (make unit length) a Point."}, {"name": "parse", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "obj", "help": "The object to parse."}, {"default": "'x'", "optional": true, "type": ["string"], "name": "xProp", "help": "The property used to set the Point.x value."}, {"default": "'y'", "optional": true, "type": ["string"], "name": "yProp", "help": "The property used to set the Point.y value."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": true, "inherited": false, "line": 878, "public": true, "help": "Parses an object for x and/or y properties and returns a new Phaser.Point with matching values.\\nIf the object doesn't contain those properties a Point with x/y of zero will be returned."}, {"name": "perp", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 657, "public": true, "help": "Return a perpendicular vector (90 degrees rotation)"}, {"name": "project", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 714, "public": true, "help": "Project two Points onto another Point."}, {"name": "projectUnit", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 738, "public": true, "help": "Project two Points onto a Point of unit length."}, {"name": "rotate", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object to rotate."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the anchor point"}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the anchor point"}, {"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle in radians (unless asDegrees is true) to rotate the Point to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "asDegrees", "help": "Is the given rotation in radians (false) or degrees (true)?"}, {"default": null, "optional": true, "type": ["number"], "name": "distance", "help": "An optional distance constraint between the Point and the anchor."}], "inheritedFrom": "", "private": false, "returns": {"help": "The modified point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 804, "public": true, "help": "Rotates a Point around the x/y coordinates given to the desired angle."}, {"name": "rperp", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 673, "public": true, "help": "Return a perpendicular vector (-90 degrees rotation)"}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The horizontal value of this point."}, {"default": null, "optional": true, "type": ["number"], "name": "y", "help": "The vertical value of this point. If not given the x value will be used in its place."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object. Useful for chaining method calls.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 91, "public": true, "help": "Sets the `x` and `y` values of this Point object to the given values.\\nIf you omit the `y` value then the `x` value will be applied to both, for example:\\n`Point.setTo(2)` is the same as `Point.setTo(2, 2)`"}, {"name": "setMagnitude", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "magnitude", "help": "The desired magnitude of the resulting Point."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 359, "public": true, "help": "Alters the length of the Point without changing the direction."}, {"name": "setTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The horizontal value of this point."}, {"default": null, "optional": true, "type": ["number"], "name": "y", "help": "The vertical value of this point. If not given the x value will be used in its place."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Point object. Useful for chaining method calls.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 72, "public": true, "help": "Sets the `x` and `y` values of this Point object to the given values.\\nIf you omit the `y` value then the `x` value will be applied to both, for example:\\n`Point.setTo(2)` is the same as `Point.setTo(2, 2)`"}, {"name": "subtract", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "a", "help": "The first Point object."}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "b", "help": "The second Point object."}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "Optional Point to store the value in, if not supplied a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Point object.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 503, "public": true, "help": "Subtracts the coordinates of two points to create a new point."}, {"name": "toString", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "A string representation of the instance.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 464, "public": true, "help": "Returns a string representation of this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "bounds", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "The bounds inside of which the physics world exists. Defaults to match the world bounds.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "gravity", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The World gravity setting.", "public": true, "help": ""}, {"name": "maxLevels", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "Used by the QuadTree to set the maximum number of iteration levels.", "public": true, "help": ""}, {"name": "maxObjects", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "Used by the QuadTree to set the maximum number of objects per quad.", "public": true, "help": ""}, {"name": "quadTree", "default": null, "type": ["Phaser.QuadTree"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "The world QuadTree.", "public": true, "help": ""}, {"name": "time", "default": null, "type": ["Phaser.Time"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "Local reference to game.time.", "public": true, "help": ""}], "private": []}, "class": {"help": "Ninja Physics. The Ninja Physics system was created in Flash by Metanet Software and ported to JavaScript by Richard Davey.\\n\\nIt allows for AABB and Circle to Tile collision. Tiles can be any of 34 different types, including slopes, convex and concave shapes.\\n\\nIt does what it does very well, but is ripe for expansion and optimisation. Here are some features that I'd love to see the community add:\\n\\n* AABB to AABB collision\\n* AABB to Circle collision\\n* AABB and Circle 'immovable' property support\\n* n-way collision, so an AABB/Circle could pass through a tile from below and land upon it.\\n* QuadTree or spatial grid for faster Body vs. Tile Group look-ups.\\n* Optimise the internal vector math and reduce the quantity of temporary vars created.\\n* Expand Gravity and Bounce to allow for separate x/y axis values.\\n* Support Bodies linked to Sprites that don't have anchor set to 0.5\\n\\nFeel free to attempt any of the above and submit a Pull Request with your code! Be sure to include test cases proving they work.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "reference to the current game instance."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.Ninja"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clearTilemapLayerBodies", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tilemap"], "name": "map", "help": "The Tilemap to get the map data from."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to map.currentLayer."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 231, "public": true, "help": "Clears all physics bodies from the given TilemapLayer that were created with `World.convertTilemap`."}, {"name": "collide", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer"], "name": "object1", "help": "The first object to check. Can be an instance of Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter, or Phaser.TilemapLayer."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer", "array"], "name": "object2", "help": "The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter or Phaser.TilemapLayer."}, {"default": "null", "optional": true, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": "null", "optional": true, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 346, "public": true, "help": "Checks for collision between two game objects. You can perform Sprite vs. Sprite, Sprite vs. Group, Group vs. Group, Sprite vs. Tilemap Layer or Group vs. Tilemap Layer collisions.\\nThe second parameter can be an array of objects, of differing types.\\nThe objects are also automatically separated. If you don't require separation then use ArcadePhysics.overlap instead.\\nAn optional processCallback can be provided. If given this function will be called when two sprites are found to be colliding. It is called before any separation takes place,\\ngiving you the chance to perform additional checks. If the function returns true then the collision and separation is carried out. If it returns false it is skipped.\\nThe collideCallback is an optional function that is only called if two sprites collide. If a processCallback has been set then it needs to return true for collideCallback to be called."}, {"name": "convertTilemap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Tilemap"], "name": "map", "help": "The Tilemap to get the map data from."}, {"default": null, "optional": true, "type": ["number", "string", "Phaser.TilemapLayer"], "name": "layer", "help": "The layer to operate on. If not given will default to map.currentLayer."}, {"default": null, "optional": true, "type": ["object"], "name": "slopeMap", "help": "The tilemap index to Tile ID map."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of the Phaser.Physics.Ninja.Tile objects that were created.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 265, "public": true, "help": "Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics tiles.\\nOnly call this *after* you have specified all of the tiles you wish to collide with calls like Tilemap.setCollisionBetween, etc.\\nEvery time you call this method it will destroy any previously created bodies and remove them from the world.\\nTherefore understand it's a very expensive operation and not to be done in a core game update loop.\\n\\nIn Ninja the Tiles have an ID from 0 to 33, where 0 is 'empty', 1 is a full tile, 2 is a 45-degree slope, etc. You can find the ID\\nlist either at the very bottom of `Tile.js`, or in a handy visual reference in the `resources/Ninja Physics Debug Tiles` folder in the repository.\\nThe slopeMap parameter is an array that controls how the indexes of the tiles in your tilemap data will map to the Ninja Tile IDs.\\nFor example if you had 6 tiles in your tileset: Imagine the first 4 should be converted into fully solid Tiles and the other 2 are 45-degree slopes.\\nYour slopeMap array would look like this: `[ 1, 1, 1, 1, 2, 3 ]`.\\nWhere each element of the array is a tile in your tilemap and the resulting Ninja Tile it should create."}, {"name": "enable", "parameters": [{"default": null, "optional": false, "type": ["object", "array", "Phaser.Group"], "name": "object", "help": "The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property."}, {"default": "1", "optional": true, "type": ["number"], "name": "type", "help": "The type of Ninja shape to create. 1 = AABB, 2 = Circle or 3 = Tile."}, {"default": "1", "optional": true, "type": ["number"], "name": "id", "help": "If this body is using a Tile shape, you can set the Tile id here, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc."}, {"default": "0", "optional": true, "type": ["number"], "name": "radius", "help": "If this body is using a Circle shape this controls the radius."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "children", "help": "Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 132, "public": true, "help": "This will create a Ninja Physics body on the given game object or array of game objects.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed."}, {"name": "enableAABB", "parameters": [{"default": null, "optional": false, "type": ["object", "array", "Phaser.Group"], "name": "object", "help": "The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "children", "help": "Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 83, "public": true, "help": "This will create a Ninja Physics AABB body on the given game object. Its dimensions will match the width and height of the object at the point it is created.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed."}, {"name": "enableBody", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "object", "help": "The game object to create the physics body on. A body will only be created if this object has a null `body` property."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 188, "public": true, "help": "Creates a Ninja Physics body on the given game object.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the body is nulled."}, {"name": "enableCircle", "parameters": [{"default": null, "optional": false, "type": ["object", "array", "Phaser.Group"], "name": "object", "help": "The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property."}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the Circle."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "children", "help": "Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 98, "public": true, "help": "This will create a Ninja Physics Circle body on the given game object.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed."}, {"name": "enableTile", "parameters": [{"default": null, "optional": false, "type": ["object", "array", "Phaser.Group"], "name": "object", "help": "The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property."}, {"default": "1", "optional": true, "type": ["number"], "name": "id", "help": "The type of Tile this will use, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "children", "help": "Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 115, "public": true, "help": "This will create a Ninja Physics Tile body on the given game object. There are 34 different types of tile you can create, including 45 degree slopes,\\nconvex and concave circles and more. The id parameter controls which Tile type is created, but you can also change it at run-time.\\nNote that for all degree based tile types they need to have an equal width and height. If the given object doesn't have equal width and height it will use the width.\\nA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed."}, {"name": "overlap", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter"], "name": "object1", "help": "The first object to check. Can be an instance of Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "array"], "name": "object2", "help": "The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter."}, {"default": "null", "optional": true, "type": ["function"], "name": "overlapCallback", "help": "An optional callback function that is called if the objects overlap. The two objects will be passed to this function in the same order in which you specified them."}, {"default": "null", "optional": true, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then overlapCallback will only be called if processCallback returns true."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 305, "public": true, "help": "Checks for overlaps between two game objects. The objects can be Sprites, Groups or Emitters.\\nYou can perform Sprite vs. Sprite, Sprite vs. Group and Group vs. Group overlap checks.\\nUnlike collide the objects are NOT automatically separated or have any physics applied, they merely test for overlap results.\\nThe second parameter can be an array of objects, of differing types."}, {"name": "separate", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Body"], "name": "body1", "help": "The Body object to separate."}, {"default": null, "optional": false, "type": ["Phaser.Physics.Ninja.Body"], "name": "body2", "help": "The Body object to separate."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 574, "public": true, "help": "The core separation function to separate two physics bodies."}, {"name": "setBounds", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Top left most corner of the world."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Top left most corner of the world."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "New width of the world. Can never be smaller than the Game.width."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "New height of the world. Can never be smaller than the Game.height."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 207, "public": true, "help": "Updates the size of this physics world."}, {"name": "setBoundsToWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 218, "public": true, "help": "Updates the size of this physics world to match the size of the game world."}], "private": [{"name": "collideGroupVsGroup", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 550, "public": false, "help": "An internal function. Use Phaser.Physics.Ninja.collide instead."}, {"name": "collideGroupVsSelf", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 522, "public": false, "help": "An internal function. Use Phaser.Physics.Ninja.collide instead."}, {"name": "collideHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer"], "name": "object1", "help": "The first object to check. Can be an instance of Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter, or Phaser.TilemapLayer."}, {"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Group", "Phaser.Particles.Emitter", "Phaser.TilemapLayer"], "name": "object2", "help": "The second object to check. Can be an instance of Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter or Phaser.TilemapLayer. Can also be an array of objects to check."}, {"default": null, "optional": false, "type": ["function"], "name": "collideCallback", "help": "An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["function"], "name": "processCallback", "help": "A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which to run the callbacks."}, {"default": null, "optional": false, "type": ["boolean"], "name": "overlapOnly", "help": "Just run an overlap or a full collision."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 383, "public": false, "help": "Internal collision handler."}, {"name": "collideSpriteVsGroup", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 484, "public": false, "help": "An internal function. Use Phaser.Physics.Ninja.collide instead."}, {"name": "collideSpriteVsSprite", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 464, "public": false, "help": "An internal function. Use Phaser.Physics.Ninja.collide instead."}]}}, {"properties": {"protected": [], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A useful boolean to control if the Image is alive or dead (in terms of your gameplay, it doesn't effect rendering).", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 638, "inlineHelp": "The angle of this Image in degrees.", "public": true, "help": "Indicates the rotation of the Image, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Image.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle."}, {"name": "animations", "default": null, "type": ["Phaser.AnimationManager"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)", "public": true, "help": ""}, {"name": "autoCull", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "A flag indicating if the Image should be automatically camera culled or not.", "public": true, "help": "Should this Image be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "cropRect", "default": "null", "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "The Rectangle used to crop the texture. Set this via Sprite.crop. Any time you modify this property directly you must call Sprite.updateCrop.", "public": true, "help": ""}, {"name": "debug", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Handy flag to use with Game.enableStep", "public": true, "help": ""}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "deltaX", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 661, "inlineHelp": "The delta value. Positive if the motion was to the right, negative if to the left.", "public": true, "help": "Returns the delta x value. The difference between world.x now and in the previous step."}, {"name": "deltaY", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 678, "inlineHelp": "The delta value. Positive if the motion was downwards, negative if upwards.", "public": true, "help": "Returns the delta y value. The difference between world.y now and in the previous step."}, {"name": "deltaZ", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 695, "inlineHelp": "The delta value.", "public": true, "help": "Returns the delta z value. The difference between rotation now and in the previous step."}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 921, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Image or its components.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "If exists = false then the Image isn't updated by the core game loop.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 860, "inlineHelp": "Set to true to fix this Image to the Camera at its current world coordinates.", "public": true, "help": "An Image that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Image.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Image was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 743, "inlineHelp": "Gets or sets the current frame index and updates the Texture for display.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 772, "inlineHelp": "Gets or sets the current frame by name and updates the Texture for display.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "", "public": true, "help": "The height of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "inCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 729, "inlineHelp": "True if the Image bounds is within the game camera, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Image bounds are within the game camera, otherwise false if fully outside of it."}, {"name": "inWorld", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 712, "inlineHelp": "True if the Image bounds is within the game world, even if only partially. Otherwise false if fully outside of it.", "public": true, "help": "Checks if the Image bounds are within the game world, otherwise false if fully outside of it."}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 819, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default an Image won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "key", "default": null, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "This is the image or texture used by the Image during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "The user defined name given to this Image.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderOrderID", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 802, "inlineHelp": "The render order ID, reset every frame.", "public": true, "help": ""}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "smoothed", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 889, "inlineHelp": "Set to true to smooth the texture of this Image, or false to disable smoothing (great for pixel art)", "public": true, "help": "Enable or disable texture smoothing for this Image. Only works for bitmap/image textures. Smoothing is enabled by default."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 48, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 110, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "The world coordinates of this Image. This differs from the x/y coordinates which are relative to the Images container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_bounds", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 149, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}, {"name": "_crop", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_frame", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 143, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "An Image is a light-weight object you can use to display anything that doesn't need physics or animation.\\nIt can still rotate, scale, crop and receive input events. This makes it perfect for logos, backgrounds, simple buttons and other non-Sprite graphics.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the Image. The coordinate is relative to any parent container this Image may be in."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the Image. The coordinate is relative to any parent container this Image may be in."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "The texture used by the Image during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Image is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "static": false, "constructor": true, "extends": "PIXI.Sprite", "name": "Phaser.Image"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "bringToTop", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 619, "public": true, "help": "Brings the Image to the top of the display list it is a child of. Images that are members of a Phaser.Group are only\\nbought to the top of that Group, not the entire display list."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "crop", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "rect", "help": "The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "copy", "help": "If false Sprite.cropRect will be a reference to the given rect. If true it will copy the rect values into a local Sprite.cropRect object."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 393, "public": true, "help": "Crop allows you to crop the texture used to display this Image.\\nCropping takes place from the top-left of the Image and can be modified in real-time by providing an updated rectangle object.\\nThe rectangle object given to this method can be either a Phaser.Rectangle or any object so long as it has public x, y, width and height properties.\\nPlease note that the rectangle object given is not duplicated by this method, but rather the Image uses a reference to the rectangle.\\nKeep this in mind if assigning a rectangle in a for-loop, or when cleaning up for garbage collection."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 519, "public": true, "help": "Destroys the Image. This removes it from its parent group, destroys the input, event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "kill", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 496, "public": true, "help": "Kills a Image. A killed Image has its alive, exists and visible properties all set to false.\\nIt will dispatch the onKilled event, you can listen to Image.events.onKilled for the signal.\\nNote that killing a Image is a way for you to quickly recycle it in a Image pool, it doesn't free it up from memory.\\nIf you don't need this Image any more you should call Image.destroy instead."}, {"name": "loadTexture", "parameters": [{"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the Image during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this Image is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 248, "public": true, "help": "Changes the Texture the Image is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 217, "public": true, "help": "Internal function called by the World postUpdate cycle."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 164, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Image at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Image at."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 597, "public": true, "help": "Resets the Image. This places the Image at the given x/y world coordinates and then sets alive, exists, visible and renderable all to true."}, {"name": "resetFrame", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 372, "public": true, "help": "Resets the Texture frame dimensions that the Image uses for rendering."}, {"name": "revive", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": {"help": "This instance.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": true, "line": 471, "public": true, "help": "Brings a 'dead' Image back to life, optionally giving it the health value specified.\\nA resurrected Image has its alive, exists and visible properties all set to true.\\nIt will dispatch the onRevived event, you can listen to Image.events.onRevived for the signal."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The Frame to be used by the Image texture."}], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 319, "public": true, "help": "Sets the Texture frame the Image uses for rendering.\\nThis is primarily an internal method used by Image.loadTexture, although you may call it directly."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 207, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "updateCrop", "parameters": [], "inheritedFrom": "Phaser.Image", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 431, "public": true, "help": "If you have set a crop rectangle on this Image via Image.crop and since modified the Image.cropRect property (or the rectangle it references)\\nthen you need to update the crop frame by calling this method."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "name", "default": "name", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "The user defined name given to this Material.", "public": true, "help": ""}], "private": []}, "class": {"help": "A P2 Material.\\n\\n\\o/ ~ \"Because I'm a Material girl\"", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The user defined name given to this Material."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.Material"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "align", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 713, "inlineHelp": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 561, "inlineHelp": "Gets or sets the angle of rotation in degrees.", "public": true, "help": "Indicates the rotation of the Text, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 119, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "canvas", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": "The canvas element that everything is drawn to"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "colors", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 124, "inlineHelp": "An array of the color values as specified by `Text.addColor`.", "public": true, "help": ""}, {"name": "context", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "", "public": true, "help": "The canvas 2d context that everything is drawn with"}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1010, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "If exists = false then the Text isn't updated by the core game loop.", "public": true, "help": ""}, {"name": "fill", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 691, "inlineHelp": "A canvas fillstyle that will be used on the text eg 'red', '#00FF00'.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 983, "inlineHelp": "Set to true to fix this Text to the Camera at its current world coordinates.", "public": true, "help": "An Text that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Text.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Text was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "font", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 605, "inlineHelp": "The font the text will be rendered in, i.e. 'Arial'. Must be loaded in the browser before use.", "public": true, "help": ""}, {"name": "fontSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 633, "inlineHelp": "The size of the font in pixels.", "public": true, "help": ""}, {"name": "fontWeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 663, "inlineHelp": "The weight of the font: 'normal', 'bold', 'italic'. You can combine settings too, such as 'bold italic'.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "", "public": true, "help": "The height of the Text, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 114, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 941, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default a Text object won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "lineSpacing", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 823, "inlineHelp": "Additional spacing (in pixels) between each line of text if multi-line.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "The user defined name given to this object.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "The resolution of the canvas."}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "shadowBlur", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 916, "inlineHelp": "The shadowBlur value. Make the shadow softer by applying a Gaussian blur to it. A number from 0 (no blur) up to approx. 10 (depending on scene).", "public": true, "help": ""}, {"name": "shadowColor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 894, "inlineHelp": "The color of the shadow, as given in CSS rgba format. Set the alpha component to 0 to disable the shadow.", "public": true, "help": ""}, {"name": "shadowOffsetX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 850, "inlineHelp": "The shadowOffsetX value in pixels. This is how far offset horizontally the shadow effect will be.", "public": true, "help": ""}, {"name": "shadowOffsetY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 872, "inlineHelp": "The shadowOffsetY value in pixels. This is how far offset vertically the shadow effect will be.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "stroke", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 735, "inlineHelp": "A canvas fillstyle that will be used on the text stroke eg 'blue', '#FCFF00'.", "public": true, "help": ""}, {"name": "strokeThickness", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 757, "inlineHelp": "A number that represents the thickness of the stroke. Default is 0 (no stroke)", "public": true, "help": ""}, {"name": "text", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 578, "inlineHelp": "The text string to be displayed by this Text object, taking into account the style settings.", "public": true, "help": "The text string to be displayed by this Text object, taking into account the style settings."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect."}, {"name": "type", "default": "Phaser.TEXT", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "", "public": true, "help": "The width of the Text, setting this will actually modify the scale to achieve the value set"}, {"name": "wordWrap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 779, "inlineHelp": "Indicates if word wrap should be used.", "public": true, "help": ""}, {"name": "wordWrapWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 801, "inlineHelp": "The width at which text will wrap.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 146, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}, {"name": "_charCount", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Internal character counter used by the text coloring.", "public": false, "help": ""}, {"name": "_font", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 80, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_fontSize", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 86, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_fontWeight", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_text", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "lineSpacing", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "Additional spacing (in pixels) between each line of text if multi-line.", "public": false, "help": ""}]}, "class": {"help": "Create a new `Text` object. This uses a local hidden Canvas object and renders the type into it. It then makes a texture from this for renderning to the view.\\nBecause of this you can only display fonts that are currently loaded and available to the browser. It won't load the fonts for you.\\nHere is a compatibility table showing the available default fonts across different mobile browsers: http://www.jordanm.co.uk/tinytype", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the new text object."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the new text object."}, {"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The actual text that will be written."}, {"default": null, "optional": false, "type": ["object"], "name": "style", "help": "The style object containing style attributes like font, font size ,"}], "static": false, "constructor": true, "extends": "PIXI.Text", "name": "Phaser.Text"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addColor", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "color", "help": "A canvas fillstyle that will be used on the text eg `red`, `#00FF00`, `rgba()`."}, {"default": null, "optional": false, "type": ["number"], "name": "position", "help": "The index of the character in the string to start applying this color value from."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 498, "public": true, "help": "This method allows you to set specific colors within the Text.\\nIt works by taking a color value, which is a typical HTML string such as `#ff0000` or `rgb(255,0,0)` and a position.\\nThe position value is the index of the character in the Text string to start applying this color to.\\nOnce set the color remains in use until either another color or the end of the string is encountered.\\nFor example if the Text was `Photon Storm` and you did `Text.addColor('#ffff00', 6)` it would color in the word `Storm` in yellow."}, {"name": "clearColors", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 480, "public": true, "help": "Clears any previously set color stops."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 231, "public": true, "help": ""}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": "the transformation matrix of the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 171, "public": true, "help": "Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 211, "public": true, "help": "Automatically called by World.postUpdate."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 162, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setShadow", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The shadowOffsetX value in pixels. This is how far offset horizontally the shadow effect will be."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The shadowOffsetY value in pixels. This is how far offset vertically the shadow effect will be."}, {"default": "'rgba(0,0,0,0)'", "optional": true, "type": ["string"], "name": "color", "help": "The color of the shadow, as given in CSS rgba format. Set the alpha component to 0 to disable the shadow."}, {"default": "0", "optional": true, "type": ["number"], "name": "blur", "help": "The shadowBlur value. Make the shadow softer by applying a Gaussian blur to it. A number from 0 (no blur) up to approx. 10 (depending on scene)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 303, "public": true, "help": ""}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setStyle", "parameters": [{"default": null, "optional": true, "type": ["object"], "name": "style", "help": "The style properties to be set on the Text."}, {"default": "'bol", "optional": true, "type": ["string"], "name": "style.font", "help": " 20pt Arial'] - The style and size of the font."}, {"default": "'black'", "optional": true, "type": ["string"], "name": "style.fill", "help": "A canvas fillstyle that will be used on the text eg 'red', '#00FF00'."}, {"default": "'left'", "optional": true, "type": ["string"], "name": "style.align", "help": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text."}, {"default": "'black'", "optional": true, "type": ["string"], "name": "style.stroke", "help": "A canvas stroke style that will be used on the text stroke eg 'blue', '#FCFF00'."}, {"default": "0", "optional": true, "type": ["number"], "name": "style.strokeThickness", "help": "A number that represents the thickness of the stroke. Default is 0 (no stroke)."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "style.wordWrap", "help": "Indicates if word wrap should be used."}, {"default": "100", "optional": true, "type": ["number"], "name": "style.wordWrapWidth", "help": "The width in pixels at which text will wrap."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 326, "public": true, "help": "Set the style of the text by passing a single style object to it."}, {"name": "setText", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The copy that you would like the text to display"}], "inheritedFrom": "PIXI.Text", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 153, "public": true, "help": "Set the copy for the text object. To split a line you can use '\\n'."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 203, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "runWordWrap", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "text", "help": "The text to perform word wrap detection against."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 512, "public": false, "help": "Greedy wrapping algorithm that will wrap words as the line grows longer than its horizontal bounds."}, {"name": "updateText", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 352, "public": false, "help": "Renders text. This replaces the Pixi.Text.updateText function as we need a few extra bits in here."}]}}, {"properties": {"protected": [], "public": [{"name": "active", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "", "public": true, "help": "If Signal is active and should broadcast events.\\nIMPORTANT: Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead."}, {"name": "dispatch", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "The dispatch function is what sends the Signal out.", "public": true, "help": ""}, {"name": "memorize", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": true, "help": "If Signal should keep record of previously dispatched parameters and\\nautomatically execute listener during `add()`/`addOnce()` if Signal was\\nalready dispatched before."}], "private": [{"name": "_bindings", "default": null, "type": ["array Phaser.SignalBinding"], "private": true, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_prevParams", "default": null, "type": ["any"], "private": true, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "Internal variable.", "public": false, "help": ""}, {"name": "_shouldPropagate", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "A Signal is used for object communication via a custom broadcaster instead of Events.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "Phaser.Signal"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "The function to call when this Signal is dispatched."}, {"default": null, "optional": true, "type": ["object"], "name": "listenerContext", "help": "The context under which the listener will be executed (i.e. the object that should represent the `this` variable)."}, {"default": null, "optional": true, "type": ["number"], "name": "priority", "help": "The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)"}], "inheritedFrom": "", "private": false, "returns": {"help": "An Object representing the binding between the Signal and listener.", "types": ["Phaser.SignalBinding"]}, "protected": false, "static": false, "inherited": false, "line": 184, "public": true, "help": "Add a listener to the signal."}, {"name": "addOnce", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "The function to call when this Signal is dispatched."}, {"default": null, "optional": true, "type": ["object"], "name": "listenerContext", "help": "The context under which the listener will be executed (i.e. the object that should represent the `this` variable)."}, {"default": null, "optional": true, "type": ["number"], "name": "priority", "help": "The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)"}], "inheritedFrom": "", "private": false, "returns": {"help": "An Object representing the binding between the Signal and listener.", "types": ["Phaser.SignalBinding"]}, "protected": false, "static": false, "inherited": false, "line": 201, "public": true, "help": "Add listener to the signal that should be removed after first execution (will be executed only once)."}, {"name": "dispatch", "parameters": [{"default": null, "optional": true, "type": ["any"], "name": "params", "help": "Parameters that should be passed to each handler."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 299, "public": true, "help": "Dispatch/Broadcast Signal to all listeners added to the queue."}, {"name": "dispose", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 351, "public": true, "help": "Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\\nIMPORTANT: calling any method on the signal instance after calling dispose will throw errors."}, {"name": "forget", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 339, "public": true, "help": "Forget memorized arguments."}, {"name": "getNumListeners", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "Number of listeners attached to the Signal.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 274, "public": true, "help": "Gets the total number of listeneres attached to ths Signal."}, {"name": "halt", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 287, "public": true, "help": "Stop propagation of the event, blocking the dispatch to next listeners on the queue.\\nIMPORTANT: should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast."}, {"name": "has", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "Signal handler function."}, {"default": null, "optional": true, "type": ["object"], "name": "context", "help": "Context on which listener will be executed (object that should represent the `this` variable inside listener function)."}], "inheritedFrom": "", "private": false, "returns": {"help": "If Signal has the specified listener.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 169, "public": true, "help": "Check if listener was attached to Signal."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "Handler function that should be removed."}, {"default": null, "optional": true, "type": ["object"], "name": "context", "help": "Execution context (since you can add the same handler multiple times if executing in a different context)."}], "inheritedFrom": "", "private": false, "returns": {"help": "Listener handler function.", "types": ["function"]}, "protected": false, "static": false, "inherited": false, "line": 217, "public": true, "help": "Remove a single listener from the dispatch queue."}, {"name": "removeAll", "parameters": [{"default": "null", "optional": true, "type": ["object"], "name": "context", "help": "If specified only listeners for the given context will be removed."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 239, "public": true, "help": "Remove all listeners from the Signal."}, {"name": "toString", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "String representation of the object.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 365, "public": true, "help": ""}], "private": [{"name": "_addBinding", "parameters": [{"default": null, "optional": false, "type": ["Phaser.SignalBinding"], "name": "binding", "help": "An Object representing the binding between the Signal and listener."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 122, "public": false, "help": ""}, {"name": "_indexOfListener", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "Signal handler function."}], "inheritedFrom": "", "private": true, "returns": {"help": "The index of the listener within the private bindings array.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 142, "public": false, "help": ""}, {"name": "_registerListener", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "Signal handler function."}, {"default": null, "optional": false, "type": ["boolean"], "name": "isOnce", "help": "Should the listener only be called once?"}, {"default": null, "optional": true, "type": ["object"], "name": "listenerContext", "help": "The context under which the listener is invoked."}, {"default": null, "optional": true, "type": ["number"], "name": "priority", "help": "The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)."}], "inheritedFrom": "", "private": true, "returns": {"help": "An Object representing the binding between the Signal and listener.", "types": ["Phaser.SignalBinding"]}, "protected": false, "static": false, "inherited": false, "line": 88, "public": false, "help": ""}, {"name": "validateListener", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "listener", "help": "Signal handler function."}, {"default": null, "optional": false, "type": ["string"], "name": "fnName", "help": "Function name."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 70, "public": false, "help": ""}]}}, {"properties": {"protected": [], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 141, "inlineHelp": "A useful boolean to control if the TileSprite is alive or dead (in terms of your gameplay, it doesn't effect rendering).", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 566, "inlineHelp": "The angle of this Sprite in degrees.", "public": true, "help": "Indicates the rotation of the Sprite, in degrees, from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\\nValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement player.angle = 450 is the same as player.angle = 90.\\nIf you wish to work in radians instead of degrees use the property Sprite.rotation instead. Working in radians is also a little faster as it doesn't have to convert the angle."}, {"name": "animations", "default": null, "type": ["Phaser.AnimationManager"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "This manages animations of the sprite. You can modify animations through it (see Phaser.AnimationManager)", "public": true, "help": ""}, {"name": "autoCull", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "A flag indicating if the Sprite should be automatically camera culled or not.", "public": true, "help": "Should this Sprite be automatically culled if out of range of the camera?\\nA culled sprite has its renderable property set to 'false'.\\nBe advised this is quite an expensive operation, as it has to calculate the bounds of the object every frame, so only enable it if you really need it."}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite"}, {"name": "body", "default": "null", "type": ["Phaser.Physics.Arcade.Body", "Phaser.Physics.P2.Body", "Phaser.Physics.Ninja.Body", "null"], "private": false, "readOnly": false, "protected": false, "line": 135, "inlineHelp": "", "public": true, "help": "By default Sprites won't add themselves to any physics system and their physics body will be `null`.\\nTo enable them for physics you need to call `game.physics.enable(sprite, system)` where `sprite` is this object\\nand `system` is the Physics system you want to use to manage this body. Once enabled you can access all physics related properties via `Sprite.body`.\\n\\nImportant: Enabling a Sprite for P2 or Ninja physics will automatically set `Sprite.anchor` to 0.5 so the physics body is centered on the Sprite.\\nIf you need a different result then adjust or re-create the Body shape offsets manually, and/or reset the anchor after enabling physics."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "checkWorldBounds", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "", "public": true, "help": "If true the Sprite checks if it is still within the world each frame, when it leaves the world it dispatches Sprite.events.onOutOfBounds\\nand optionally kills the sprite (if Sprite.outOfBoundsKill is true). By default this is disabled because the Sprite has to calculate its\\nbounds every frame to support it, and not all games need it. Enable it by setting the value to true."}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "destroyPhase", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 801, "inlineHelp": "True if this object is currently being destroyed.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Events"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "The Events you can subscribe to that are dispatched when certain things happen on this Sprite or its components.", "public": true, "help": ""}, {"name": "exists", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 663, "inlineHelp": "If the TileSprite is processed by the core game update and physics.", "public": true, "help": "TileSprite.exists controls if the core game loop and physics update this TileSprite or not.\\nWhen you set TileSprite.exists to false it will remove its Body from the physics world (if it has one) and also set TileSprite.visible to false.\\nSetting TileSprite.exists to true will re-add the Body to the physics world (if it has a body) and set TileSprite.visible to true."}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 632, "inlineHelp": "Set to true to fix this TileSprite to the Camera at its current world coordinates.", "public": true, "help": "An TileSprite that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in TileSprite.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this TileSprite was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "frame", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 586, "inlineHelp": "Gets or sets the current frame index and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "frameName", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 607, "inlineHelp": "Gets or sets the current frame name and updates the Texture Cache for display.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "", "public": true, "help": "The height of the TilingSprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "input", "default": null, "type": ["Phaser.InputHandler", "null"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "The Input Handler for this object. Needs to be enabled with image.inputEnabled = true before you can use it.", "public": true, "help": ""}, {"name": "inputEnabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 709, "inlineHelp": "Set to true to allow this object to receive input events.", "public": true, "help": "By default a TileSprite won't process any input events at all. By setting inputEnabled to true the Phaser.InputHandler is\\nactivated for this object and it will then start to process click/touch events and more."}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "key", "default": null, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": "''", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "The user defined name given to this Sprite.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "Whether this sprite is renderable or not"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tilePosition", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": true, "help": "The offset position of the image that is being tiled"}, {"name": "tileScale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "The scaling of the image that is being tiled"}, {"name": "tileScaleOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "A point that represents the scale of the texture object"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value"}, {"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 46, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "world", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "The world coordinates of this Sprite. This differs from the x/y coordinates which are relative to the Sprites container.", "public": true, "help": ""}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "The position of the TileSprite on the x axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the TileSprite on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 776, "inlineHelp": "The position of the TileSprite on the y axis relative to the local coordinates of the parent.", "public": true, "help": "The position of the TileSprite on the y axis relative to the local coordinates of the parent."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "_cache", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 157, "inlineHelp": "", "public": false, "help": "A small internal cache:\\n0 = previous position.x\\n1 = previous position.y\\n2 = previous rotation\\n3 = renderID\\n4 = fresh? (0 = no, 1 = yes)\\n5 = outOfBoundsFired (0 = no, 1 = yes)\\n6 = exists (0 = no, 1 = yes)\\n7 = fixed to camera (0 = no, 1 = yes)\\n8 = destroy phase? (0 = no, 1 = yes)"}, {"name": "_frame", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_frameName", "default": null, "type": ["string"], "private": true, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_scroll", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "A TileSprite is a Sprite that has a repeating texture. The texture can be scrolled and scaled and will automatically wrap on the edges as it does so.\\nPlease note that TileSprites, as with normal Sprites, have no input handler or physics bodies by default. Both need enabling.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the TileSprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the TileSprite."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the TileSprite."}, {"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "static": false, "constructor": true, "extends": "PIXI.TilingSprite", "name": "Phaser.TileSprite"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "autoScroll", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "Horizontal scroll speed in pixels per second."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Vertical scroll speed in pixels per second."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 315, "public": true, "help": "Sets this TileSprite to automatically scroll in the given direction until stopped via TileSprite.stopScroll().\\nThe scroll speed is specified in pixels per second.\\nA negative x value will scroll to the left. A positive x value will scroll to the right.\\nA negative y value will scroll up. A positive y value will scroll down."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this object have its destroy method called?"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 441, "public": true, "help": "Destroys the TileSprite. This removes it from its parent group, destroys the event and animation handlers if present\\nand nulls its reference to game, freeing it up for garbage collection."}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "generateTilingTexture", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "forcePowerOfTwo", "help": "Whether we want to force the texture to be a power of two"}], "inheritedFrom": "PIXI.TilingSprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 379, "public": true, "help": ""}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.TilingSprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 286, "public": true, "help": "Returns the framing rectangle of the sprite as a PIXI.Rectangle object"}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "loadTexture", "parameters": [{"default": null, "optional": false, "type": ["string", "Phaser.RenderTexture", "Phaser.BitmapData", "PIXI.Texture"], "name": "key", "help": "This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture."}, {"default": null, "optional": false, "type": ["string", "number"], "name": "frame", "help": "If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 342, "public": true, "help": "Changes the Texture the TileSprite is using entirely. The old texture is removed and the new one is referenced or fetched from the Cache.\\nThis causes a WebGL texture update, so use sparingly or in low-intensity portions of your game."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "play", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\"."}, {"default": "null", "optional": true, "type": ["number"], "name": "frameRate", "help": "The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "loop", "help": "Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "killOnComplete", "help": "If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed."}], "inheritedFrom": "", "private": false, "returns": {"help": "A reference to playing Animation instance.", "types": ["Phaser.Animation"]}, "protected": false, "static": false, "inherited": false, "line": 516, "public": true, "help": "Play an animation based on the given key. The animation should previously have been added via sprite.animations.add()\\nIf the requested animation is already playing this request will be ignored. If you need to reset an already running animation do so directly on the Animation object itself."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 282, "public": true, "help": "Internal function called by the World postUpdate cycle."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 172, "public": true, "help": "Automatically called by World.preUpdate."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "reset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate (in world space) to position the Sprite at."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate (in world space) to position the Sprite at."}], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": false, "line": 533, "public": true, "help": "Resets the TileSprite. This places the TileSprite at the given x/y world coordinates, resets the tilePosition and then\\nsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state.\\nIf the TileSprite has a physics body that too is reset."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setFrame", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Frame"], "name": "frame", "help": "The Frame to be used by the TileSprite texture."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 393, "public": true, "help": "Sets the Texture frame the TileSprite uses for rendering.\\nThis is primarily an internal method used by TileSprite.loadTexture, although you may call it directly."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "stopScroll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 327, "public": true, "help": "Stops an automatically scrolling TileSprite."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 272, "public": true, "help": "Override and use this function in your own custom objects to handle any update requirements you may have."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "button-", "default": "-1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": " The type of click, either: Phaser.Mouse.NO_BUTTON, Phaser.Mouse.LEFT_BUTTON, Phaser.Mouse.MIDDLE_BUTTON or Phaser.Mouse.RIGHT_BUTTON.", "public": true, "help": ""}, {"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "The context under which callbacks are called.", "public": true, "help": ""}, {"name": "capture", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "If true the DOM mouse events will have event.preventDefault applied to them, if false they will propogate fully.", "public": true, "help": ""}, {"name": "disabled", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "You can disable all Input by setting disabled = true. While set all new input related events will be ignored.", "public": true, "help": ""}, {"name": "event", "default": "null", "type": ["MouseEvent"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "The browser mouse DOM event. Will be set to null if no mouse event has ever been received.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "locked", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "If the mouse has been Pointer Locked successfully this will be set to true.", "public": true, "help": ""}, {"name": "mouseDownCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "A callback that can be fired when the mouse is pressed down.", "public": true, "help": ""}, {"name": "mouseMoveCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "A callback that can be fired when the mouse is moved while pressed down.", "public": true, "help": ""}, {"name": "mouseOutCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "A callback that can be fired when the mouse is no longer over the game canvas.", "public": true, "help": ""}, {"name": "mouseOverCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "A callback that can be fired when the mouse enters the game canvas (usually after a mouseout).", "public": true, "help": ""}, {"name": "mouseUpCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "A callback that can be fired when the mouse is released from a pressed down state.", "public": true, "help": ""}, {"name": "mouseWheelCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "A callback that can be fired when the mousewheel is used.", "public": true, "help": ""}, {"name": "pointerLock", "default": "new Phaser.Signal()", "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "This event is dispatched when the browser enters or leaves pointer lock state.", "public": true, "help": ""}, {"name": "stopOnGameOut", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "If true Pointer.stop will be called if the mouse leaves the game canvas.", "public": true, "help": ""}, {"name": "wheelDelta", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "The direction of the mousewheel usage 1 for up -1 for down", "public": true, "help": ""}], "private": [{"name": "_onMouseDown", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onMouseMove", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 114, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onMouseOut", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onMouseOver", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onMouseUp", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 120, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onMouseWheel", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 138, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}]}, "class": {"help": "Phaser.Mouse is responsible for handling all aspects of mouse interaction with the browser.\\nIt captures and processes mouse events that happen on the game canvas object. It also adds a single `mouseup` listener to `window` which\\nis used to capture the mouse being released when not over the game.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Mouse"}, "consts": [{"line": 152, "type": "number", "name": "LEFT_BUTTON", "help": ""}, {"line": 158, "type": "number", "name": "MIDDLE_BUTTON", "help": ""}, {"line": 146, "type": "number", "name": "NO_BUTTON", "help": ""}, {"line": 164, "type": "number", "name": "RIGHT_BUTTON", "help": ""}, {"line": 176, "type": "number", "name": "WHEEL_DOWN", "help": ""}, {"line": 170, "type": "number", "name": "WHEEL_UP", "help": ""}], "methods": {"protected": [], "static": [], "public": [{"name": "onMouseDown", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 248, "public": true, "help": "The internal method that handles the mouse down event from the browser."}, {"name": "onMouseMove", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 280, "public": true, "help": "The internal method that handles the mouse move event from the browser."}, {"name": "onMouseOut", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 367, "public": true, "help": "The internal method that handles the mouse out event from the browser."}, {"name": "onMouseOver", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 428, "public": true, "help": "The internal method that handles the mouse over event from the browser."}, {"name": "onMouseUp", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 310, "public": true, "help": "The internal method that handles the mouse up event from the browser."}, {"name": "onMouseUpGlobal", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 343, "public": true, "help": "The internal method that handles the mouse up event from the window."}, {"name": "onMouseWheel", "parameters": [{"default": null, "optional": false, "type": ["MouseEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 403, "public": true, "help": "The internal method that handles the mouse wheel event from the browser."}, {"name": "pointerLockChange", "parameters": [{"default": null, "optional": false, "type": ["Event"], "name": "event", "help": "The native event from the browser. This gets stored in Mouse.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 486, "public": true, "help": "Internal pointerLockChange handler."}, {"name": "releasePointerLock", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 509, "public": true, "help": "Internal release pointer lock handler."}, {"name": "requestPointerLock", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 457, "public": true, "help": "If the browser supports it you can request that the pointer be locked to the browser window.\\nThis is classically known as 'FPS controls', where the pointer can't leave the browser until the user presses an exit key.\\nIf the browser successfully enters a locked state the event Phaser.Mouse.pointerLock will be dispatched and the first parameter will be 'true'."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 184, "public": true, "help": "Starts the event listeners running."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 525, "public": true, "help": "Stop the event listeners."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "Required Pixi var.", "public": true, "help": ""}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "If this object is fixed to the camera then use this Point to specify how far away from the Camera x/y it's rendered.", "public": true, "help": ""}, {"name": "canvas", "default": null, "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "The canvas to which this TilemapLayer draws.", "public": true, "help": ""}, {"name": "collisionHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 794, "inlineHelp": "The height of the collision tiles.", "public": true, "help": ""}, {"name": "collisionWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 774, "inlineHelp": "The width of the collision tiles.", "public": true, "help": ""}, {"name": "context", "default": null, "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The 2d context of the canvas.", "public": true, "help": ""}, {"name": "debug", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "If set to true the collideable tile edges path will be rendered. Only works when game is running in Phaser.CANVAS mode.", "public": true, "help": ""}, {"name": "debugAlpha", "default": "0.5", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 106, "inlineHelp": "If debug is true then the tileset is rendered with this alpha level, to make the tile edges clearer.", "public": true, "help": ""}, {"name": "debugCallbackColor", "default": "'rgba(255, 0, 0, 1)'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 130, "inlineHelp": "If debug is true this is the color used to outline the edges of tiles that have collision callbacks. Provide in hex or rgb/rgba string format.", "public": true, "help": ""}, {"name": "debugColor", "default": "'rgba(0, 255, 0, 1)'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "If debug is true this is the color used to outline the edges of collidable tiles. Provide in hex or rgb/rgba string format.", "public": true, "help": ""}, {"name": "debugFill", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "If true the debug tiles are filled with debugFillColor AND stroked around.", "public": true, "help": ""}, {"name": "debugFillColor", "default": "'rgba(0, 255, 0, 0.2)'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 124, "inlineHelp": "If debugFill is true this is the color used to fill the tiles. Provide in hex or rgb/rgba string format.", "public": true, "help": ""}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 151, "inlineHelp": "Flag controlling when to re-render the layer.", "public": true, "help": ""}, {"name": "fixedToCamera", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "Fixes this object to the Camera.", "public": true, "help": "An object that is fixed to the camera ignores the position of any ancestors in the display list and uses its x/y coordinates as offsets from the top left of the camera."}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "index", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "The index of this layer within the Tilemap.", "public": true, "help": ""}, {"name": "layer", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "The layer object within the Tilemap that this layer represents.", "public": true, "help": ""}, {"name": "map", "default": null, "type": ["Phaser.Tilemap"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "The Tilemap to which this layer is bound.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "The name of the layer.", "public": true, "help": ""}, {"name": "rayStepRate", "default": "4", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 157, "inlineHelp": "When ray-casting against tiles this is the number of steps it will jump. For larger tile sizes you can increase this to improve performance.", "public": true, "help": ""}, {"name": "scrollFactorX", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 138, "inlineHelp": "speed at which this layer scrolls", "public": true, "help": "horizontally, relative to the camera (e.g. scrollFactorX of 0.5 scrolls\\nhalf as quickly as the 'normal' camera-locked layers do)"}, {"name": "scrollFactorY", "default": "1", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 146, "inlineHelp": "speed at which this layer scrolls", "public": true, "help": "vertically, relative to the camera (e.g. scrollFactorY of 0.5 scrolls\\nhalf as quickly as the 'normal' camera-locked layers do)"}, {"name": "scrollX", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 728, "inlineHelp": "Scrolls the map horizontally or returns the current x position.", "public": true, "help": ""}, {"name": "scrollY", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 751, "inlineHelp": "Scrolls the map vertically or returns the current y position.", "public": true, "help": ""}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "Required Pixi var.", "public": true, "help": ""}, {"name": "textureFrame", "default": null, "type": ["Phaser.Frame"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "Dimensions of the renderable area.", "public": true, "help": ""}, {"name": "tileColor", "default": "'rgb(255, 255, 255)'", "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "If no tileset is given the tiles will be rendered as rectangles in this color. Provide in hex or rgb/rgba string format.", "public": true, "help": ""}, {"name": "type", "default": "Phaser.TILEMAPLAYER", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "wrap", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 163, "inlineHelp": "Flag controlling if the layer tiles wrap at the edges. Only works if the World size matches the Map size.", "public": true, "help": ""}], "private": [{"name": "_mc", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 169, "inlineHelp": "Local map data and calculation cache.", "public": false, "help": ""}, {"name": "_results", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 198, "inlineHelp": "Local render loop var to help avoid gc spikes.", "public": false, "help": ""}]}, "class": {"help": "A Tilemap Layer is a set of map data combined with a Tileset in order to render that data to the game.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}, {"default": null, "optional": false, "type": ["Phaser.Tilemap"], "name": "tilemap", "help": "The tilemap to which this layer belongs."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The layer index within the map that this TilemapLayer represents."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width of the renderable area of the layer."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "Height of the renderable area of the layer."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.TilemapLayer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "getRayCastTiles", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Line"], "name": "line", "help": "The line used to determine which tiles to return."}, {"default": null, "optional": true, "type": ["number"], "name": "stepRate", "help": "How many steps through the ray will we check? If undefined or null it uses TilemapLayer.rayStepRate."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "collides", "help": "If true only return tiles that collide on one or more faces."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "interestingFace", "help": "If true only return tiles that have interesting faces."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of Phaser.Tiles.", "types": ["array Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 399, "public": true, "help": "Gets all tiles that intersect with the given line."}, {"name": "getTileX", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the point in target tile."}], "inheritedFrom": "", "private": false, "returns": {"help": "The tile with specific properties.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 347, "public": true, "help": "Convert a pixel value to a tile coordinate."}, {"name": "getTileXY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the point in target tile."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the point in target tile."}, {"default": null, "optional": false, "type": ["Phaser.Point", "object"], "name": "point", "help": "The Point object to set the x and y values on."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Point object with its x and y properties set.", "types": ["Phaser.Point", "object"]}, "protected": false, "static": false, "inherited": false, "line": 379, "public": true, "help": "Convert a pixel value to a tile coordinate."}, {"name": "getTileY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the point in target tile."}], "inheritedFrom": "", "private": false, "returns": {"help": "The tile with specific properties.", "types": ["Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 362, "public": true, "help": "Convert a pixel value to a tile coordinate."}, {"name": "getTiles", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "X position of the top left corner."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "Y position of the top left corner."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "Width of the area to get."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "Height of the area to get."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "collides", "help": "If true only return tiles that collide on one or more faces."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "interestingFace", "help": "If true only return tiles that have interesting faces."}], "inheritedFrom": "", "private": false, "returns": {"help": "An array of Phaser.Tiles.", "types": ["array Phaser.Tile"]}, "protected": false, "static": false, "inherited": false, "line": 446, "public": true, "help": "Get all tiles that exist within the given area, defined by the top-left corner, width and height. Values given are in pixels, not tiles."}, {"name": "postUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 213, "public": true, "help": "Automatically called by World.postUpdate. Handles cache updates."}, {"name": "render", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 512, "public": true, "help": "Renders the tiles to the layer canvas and pushes to the display."}, {"name": "renderDebug", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 630, "public": true, "help": "Renders a collision debug overlay on-top of the canvas. Called automatically by render when debug = true."}, {"name": "resizeWorld", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 244, "public": true, "help": "Sets the world size to match the size of this layer."}, {"name": "updateMax", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 498, "public": true, "help": "Internal function to update maximum values."}], "private": [{"name": "_fixX", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "x coordinate in camera space"}], "inheritedFrom": "", "private": true, "returns": {"help": "x coordinate in scrollFactor-adjusted dimensions", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 259, "public": false, "help": "Take an x coordinate that doesn't account for scrollFactorX and 'fix' it\\ninto a scrolled local space. Used primarily internally"}, {"name": "_fixY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "y", "help": "y coordinate in camera space"}], "inheritedFrom": "", "private": true, "returns": {"help": "y coordinate in scrollFactor-adjusted dimensions", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 304, "public": false, "help": "Take a y coordinate that doesn't account for scrollFactorY and 'fix' it\\ninto a scrolled local space. Used primarily internally"}, {"name": "_unfixX", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "x coordinate in scrollFactor-adjusted dimensions"}], "inheritedFrom": "", "private": true, "returns": {"help": "x coordinate in camera space", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 284, "public": false, "help": "Take an x coordinate that _does_ account for scrollFactorX and 'unfix' it\\nback to camera space. Used primarily internally"}, {"name": "_unfixY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "y", "help": "y coordinate in scrollFactor-adjusted dimensions"}], "inheritedFrom": "", "private": true, "returns": {"help": "y coordinate in camera space", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 329, "public": false, "help": "Take a y coordinate that _does_ account for scrollFactorY and 'unfix' it\\nback to camera space. Used primarily internally"}]}}, {"properties": {"protected": [], "public": [{"name": "global", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "", "public": true, "help": "This point stores the global coords of where the touch/mouse event happened"}, {"name": "originalEvent", "default": null, "type": ["Event"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": "When passed to an event handler, this will be the original DOM Event that was captured"}, {"name": "target", "default": null, "type": ["PIXI.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": "The target Sprite that was interacted with"}], "private": []}, "class": {"help": "Holds all information related to an Interaction event", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.InteractionData"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "getLocalPosition", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "displayObject", "help": "The DisplayObject that you would like the local coords off"}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "[point]", "help": "A Point object in which to store the value, optional (otherwise will create a new point)"}], "inheritedFrom": "", "private": false, "returns": {"help": "A point containing the coordinates of the InteractionData position relative to the DisplayObject", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 46, "public": true, "help": "This will return the local coordinates of the specified displayObject for this InteractionData"}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "The context under which callbacks are called.", "public": true, "help": ""}, {"name": "disabled", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 25, "inlineHelp": "You can disable all Touch events by setting disabled = true. While set all new touch events will be ignored.", "public": true, "help": ""}, {"name": "event", "default": "null", "type": ["TouchEvent"], "private": false, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "The browser touch DOM event. Will be set to null if no touch event has ever been received.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "preventDefault", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "If true the TouchEvent will have prevent.default called on it.", "public": true, "help": ""}, {"name": "touchCancelCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "A callback that can be fired on a touchCancel event.", "public": true, "help": ""}, {"name": "touchEndCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "A callback that can be fired on a touchEnd event.", "public": true, "help": ""}, {"name": "touchEnterCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "A callback that can be fired on a touchEnter event.", "public": true, "help": ""}, {"name": "touchLeaveCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "A callback that can be fired on a touchLeave event.", "public": true, "help": ""}, {"name": "touchMoveCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A callback that can be fired on a touchMove event.", "public": true, "help": ""}, {"name": "touchStartCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "A callback that can be fired on a touchStart event.", "public": true, "help": ""}], "private": [{"name": "_onTouchCancel", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onTouchEnd", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onTouchEnter", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onTouchLeave", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onTouchMove", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 114, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}, {"name": "_onTouchStart", "default": null, "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "Internal event handler reference.", "public": false, "help": ""}]}, "class": {"help": "Phaser.Touch handles touch events with your game. Note: Android 2.x only supports 1 touch event at once, no multi-touch.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Touch"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "consumeTouchMove", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 178, "public": true, "help": "Consumes all touchmove events on the document (only enable this if you know you need it!)."}, {"name": "onTouchCancel", "parameters": [{"default": null, "optional": false, "type": ["TouchEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Touch.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 228, "public": true, "help": "Touch cancel - touches that were disrupted (perhaps by moving into a plugin or browser chrome).\\nOccurs for example on iOS when you put down 4 fingers and the app selector UI appears."}, {"name": "onTouchEnd", "parameters": [{"default": null, "optional": false, "type": ["TouchEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Touch.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 336, "public": true, "help": "The handler for the touchend events."}, {"name": "onTouchEnter", "parameters": [{"default": null, "optional": false, "type": ["TouchEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Touch.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 262, "public": true, "help": "For touch enter and leave its a list of the touch points that have entered or left the target.\\nDoesn't appear to be supported by most browsers on a canvas element yet."}, {"name": "onTouchLeave", "parameters": [{"default": null, "optional": false, "type": ["TouchEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Touch.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 289, "public": true, "help": "For touch enter and leave its a list of the touch points that have entered or left the target.\\nDoesn't appear to be supported by most browsers on a canvas element yet."}, {"name": "onTouchMove", "parameters": [{"default": null, "optional": false, "type": ["TouchEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Touch.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 310, "public": true, "help": "The handler for the touchmove events."}, {"name": "onTouchStart", "parameters": [{"default": null, "optional": false, "type": ["TouchEvent"], "name": "event", "help": "The native event from the browser. This gets stored in Touch.event."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 193, "public": true, "help": "The internal method that handles the touchstart event from the browser."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 124, "public": true, "help": "Starts the event listeners running."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 364, "public": true, "help": "Stop the event listeners."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "Whether the strip is dirty or not"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "", "public": true, "help": "if you need a padding, not yet implemented"}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "", "public": true, "help": "The texture of the strip"}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": []}, "class": {"help": "", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The texture to use on the rope."}, {"default": null, "optional": false, "type": ["array"], "name": "points", "help": "An array of {PIXI.Point}."}], "static": false, "constructor": true, "extends": "PIXI.Strip", "name": "PIXI.Rope"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "area", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 392, "inlineHelp": "The area of this circle.", "public": true, "help": "The area of this Circle."}, {"name": "bottom", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 364, "inlineHelp": "Gets or sets the bottom of the circle.", "public": true, "help": "The sum of the y and radius properties. Changing the bottom property of a Circle object has no effect on the x and y properties, but does change the diameter."}, {"name": "diameter", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 238, "inlineHelp": "Gets or sets the diameter of the circle.", "public": true, "help": "The largest distance between any two points on the circle. The same as the radius * 2."}, {"name": "empty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 415, "inlineHelp": "Gets or sets the empty state of the circle.", "public": true, "help": "Determines whether or not this Circle object is empty. Will return a value of true if the Circle objects diameter is less than or equal to 0; otherwise false.\\nIf set to true it will reset all of the Circle objects properties to 0. A Circle object is empty if its diameter is less than or equal to 0."}, {"name": "radius", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 260, "inlineHelp": "Gets or sets the radius of the circle.", "public": true, "help": "The length of a line extending from the center of the circle to any point on the circle itself. The same as half the diameter."}, {"name": "right", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 310, "inlineHelp": "Gets or sets the value of the rightmost point of the circle.", "public": true, "help": "The x coordinate of the rightmost point of the circle. Changing the right property of a Circle object has no effect on the x and y properties. However it does affect the diameter, whereas changing the x value does not affect the diameter property."}, {"name": "top", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 337, "inlineHelp": "Gets or sets the top of the circle.", "public": true, "help": "The sum of the y minus the radius property. Changing the top property of a Circle object has no effect on the x and y properties, but does change the diameter."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "The x coordinate of the center of the circle.", "public": true, "help": ""}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "The y coordinate of the center of the circle.", "public": true, "help": ""}], "private": [{"name": "_diameter", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "The diameter of the circle.", "public": false, "help": ""}, {"name": "_radius", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "The radius of the circle.", "public": false, "help": ""}]}, "class": {"help": "Creates a new Circle object with the center coordinate specified by the x and y parameters and the diameter specified by the diameter parameter.\\nIf you call this function without parameters, a circle with x, y, diameter and radius properties set to 0 is created.", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate of the center of the circle."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate of the center of the circle."}, {"default": "0", "optional": true, "type": ["number"], "name": "diameter", "help": "The diameter of the circle."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Circle"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "circumference", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 63, "public": true, "help": "The circumference of the circle."}, {"name": "circumferencePoint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "a", "help": "The first Circle object."}, {"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle in radians (unless asDegrees is true) to return the point from."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "asDegrees", "help": "Is the given angle in radians (false) or degrees (true)?"}, {"default": null, "optional": true, "type": ["Phaser.Point"], "name": "out", "help": "An optional Point object to put the result in to. If none specified a new Point object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Point object holding the result.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": false, "line": 489, "public": true, "help": "Returns a Point object containing the coordinates of a point on the circumference of the Circle based on the given angle."}, {"name": "clone", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "output", "help": "Optional Circle object. If given the values will be set into the object, otherwise a brand new Circle object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "The cloned Circle object.", "types": ["Phaser.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 152, "public": true, "help": "Returns a new Circle object with the same values for the x, y, width, and height properties as this Circle object."}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "a", "help": "The Circle to be checked."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X value of the coordinate to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y value of the coordinate to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the coordinates are within this circle, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 440, "public": true, "help": "Return true if the given x/y coordinates are within the Circle object."}, {"name": "copyFrom", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "source", "help": "The object to copy from."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Circle object.", "types": ["Phaser.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 101, "public": true, "help": "Copies the x, y and diameter properties from any given object to this Circle."}, {"name": "copyTo", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "dest", "help": "The object to copy to."}], "inheritedFrom": "", "private": false, "returns": {"help": "This dest object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 113, "public": true, "help": "Copies the x, y and diameter properties from this Circle to any given object."}, {"name": "distance", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "dest", "help": "The target object. Must have visible x and y properties that represent the center of the object."}, {"default": null, "optional": true, "type": ["boolean"], "name": "round", "help": "Round the distance to the nearest integer (default false)."}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between this Point object and the destination Point object.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 131, "public": true, "help": "Returns the distance from the center of the Circle object to the given object\\n(can be Circle, Point or anything with x/y properties)"}, {"name": "equals", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "a", "help": "The first Circle object."}, {"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "b", "help": "The second Circle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the object has exactly the same values for the x, y and diameter properties as this Circle object; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 464, "public": true, "help": "Determines whether the two Circle objects match. This method compares the x, y and diameter properties."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The bounds of the Circle.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 72, "public": true, "help": "Returns the framing rectangle of the circle as a Phaser.Rectangle object"}, {"name": "intersects", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "a", "help": "The first Circle object."}, {"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "b", "help": "The second Circle object."}], "inheritedFrom": "", "private": false, "returns": {"help": "A value of true if the specified object intersects with this Circle object; otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 476, "public": true, "help": "Determines whether the two Circle objects intersect.\\nThis method checks the radius distances between the two Circle objects to see if they intersect."}, {"name": "intersectsRectangle", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Circle"], "name": "c", "help": "The Circle object to test."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "r", "help": "The Rectangle object to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the two objects intersect, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 513, "public": true, "help": "Checks if the given Circle and Rectangle objects intersect."}, {"name": "offset", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "dx", "help": "Moves the x value of the Circle object by this amount."}, {"default": null, "optional": false, "type": ["number"], "name": "dy", "help": "Moves the y value of the Circle object by this amount."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Circle object.", "types": ["Phaser.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 201, "public": true, "help": "Adjusts the location of the Circle object, as determined by its center coordinate, by the specified amounts."}, {"name": "offsetPoint", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point", "help": " A Point object to use to offset this Circle object (or any valid object with exposed x and y properties)."}], "inheritedFrom": "", "private": false, "returns": {"help": "This Circle object.", "types": ["Phaser.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 216, "public": true, "help": "Adjusts the location of the Circle object using a Point object as a parameter. This method is similar to the Circle.offset() method, except that it takes a Point object as a parameter."}, {"name": "setTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the center of the circle."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the center of the circle."}, {"default": null, "optional": false, "type": ["number"], "name": "diameter", "help": "The diameter of the circle."}], "inheritedFrom": "", "private": false, "returns": {"help": "This circle object.", "types": ["Phaser.Circle"]}, "protected": false, "static": false, "inherited": false, "line": 84, "public": true, "help": "Sets the members of Circle to the specified values."}, {"name": "toString", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "a string representation of the instance.", "types": ["string"]}, "protected": false, "static": false, "inherited": false, "line": 225, "public": true, "help": "Returns a string representation of this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "type", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "The base object type.", "public": true, "help": ""}], "private": []}, "class": {"help": "Creates a new Polygon. You have to provide a list of points.\\nThis can be an array of Points that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...],\\nor the arguments passed can be all the points of the polygon e.g. `new Phaser.Polygon(new Phaser.Point(), new Phaser.Point(), ...)`, or the\\narguments passed can be flat x,y values e.g. `new Phaser.Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are numbers.", "parameters": [{"default": null, "optional": false, "type": ["array Phaser.Point", "array number"], "name": "points", "help": "The array of Points."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Polygon"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "clone", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Polygon"], "name": "output", "help": " Optional Polygon object. If given the values will be set into this object, otherwise a brand new Polygon object will be created and returned."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new Polygon object.", "types": ["Phaser.Polygon"]}, "protected": false, "static": false, "inherited": false, "line": 40, "public": true, "help": "Creates a copy of the given Polygon.\\nThis is a deep clone, the resulting copy contains new Phaser.Point objects"}, {"name": "contains", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The X value of the coordinate to test."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The Y value of the coordinate to test."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the coordinates are within this polygon, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 70, "public": true, "help": "Checks whether the x and y coordinates are contained within this polygon."}], "private": []}}, {"properties": {"protected": [{"name": "elapsed", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 44, "inlineHelp": "Elapsed time since the last frame (in ms).", "public": false, "help": ""}, {"name": "fps", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 62, "inlineHelp": "Frames per second. Only calculated if Time.advancedTiming is true.", "public": false, "help": ""}, {"name": "now", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 38, "inlineHelp": "The time right now.", "public": false, "help": ""}, {"name": "pausedTime", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 50, "inlineHelp": "Records how long the game has been paused for. Is reset each time the game pauses.", "public": false, "help": ""}, {"name": "prevTime", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 32, "inlineHelp": "The time the previous update occurred.", "public": false, "help": ""}, {"name": "time", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": true, "line": 26, "inlineHelp": "Game time counter. If you need a value for in-game calculation please use Phaser.Time.now instead.", "public": false, "help": ""}], "public": [{"name": "advancedTiming", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "If true Phaser.Time will perform advanced profiling including the fps rate, fps min/max and msMin and msMax.", "public": true, "help": ""}, {"name": "deltaCap", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "If you need to cap the delta timer, set the value here. For 60fps the delta should be 0.016, so try variances just above this.", "public": true, "help": ""}, {"name": "events", "default": null, "type": ["Phaser.Timer"], "private": false, "readOnly": false, "protected": false, "line": 123, "inlineHelp": "This is a Phaser.Timer object bound to the master clock to which you can add timed events.", "public": true, "help": ""}, {"name": "fpsMax", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "The highest rate the fps has reached (usually no higher than 60fps). Only calculated if Time.advancedTiming is true.", "public": true, "help": ""}, {"name": "fpsMin", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "The lowest rate the fps has dropped to. Only calculated if Time.advancedTiming is true.", "public": true, "help": ""}, {"name": "frames", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "The number of frames record in the last second. Only calculated if Time.advancedTiming is true.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "lastTime", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 118, "inlineHelp": "Internal value used by timeToCall as part of the setTimeout loop", "public": true, "help": ""}, {"name": "msMax", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "The maximum amount of time the game has taken between two frames. Only calculated if Time.advancedTiming is true.", "public": true, "help": ""}, {"name": "msMin", "default": "1000", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "The minimum amount of time the game has taken between two frames. Only calculated if Time.advancedTiming is true.", "public": true, "help": ""}, {"name": "pauseDuration", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 108, "inlineHelp": "Records how long the game was paused for in miliseconds.", "public": true, "help": ""}, {"name": "physicsElapsed", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 88, "inlineHelp": "The elapsed time calculated for the physics motion updates. In a stable 60fps system this will be 0.016 every frame.", "public": true, "help": ""}, {"name": "timeCap", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "If the difference in time between two frame updates exceeds this value, the frame time is reset to avoid huge elapsed counts.", "public": true, "help": ""}, {"name": "timeToCall", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "The value that setTimeout needs to work out when to next update", "public": true, "help": ""}], "private": [{"name": "_i", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 165, "inlineHelp": "Temp. array counter variable.", "public": false, "help": ""}, {"name": "_justResumed", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 147, "inlineHelp": "Internal value used to recover from the game pause state.", "public": false, "help": ""}, {"name": "_len", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 159, "inlineHelp": "Temp. array length variable.", "public": false, "help": ""}, {"name": "_pauseStarted", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 141, "inlineHelp": "The time the game started being paused.", "public": false, "help": ""}, {"name": "_started", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 129, "inlineHelp": "The time at which the Game instance started.", "public": false, "help": ""}, {"name": "_timeLastSecond", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 135, "inlineHelp": "The time (in ms) that the last second counter ticked over.", "public": false, "help": ""}, {"name": "_timers", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 153, "inlineHelp": "Internal store of Phaser.Timer objects.", "public": false, "help": ""}]}, "class": {"help": "This is the core internal game clock.\\nIt manages the elapsed time and calculation of elapsed values, used for game object motion and tweens.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": " A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Time"}, "consts": [], "methods": {"protected": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 177, "public": false, "help": "Called automatically by Phaser.Game after boot. Should not be called directly."}, {"name": "update", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "time", "help": "The current timestamp."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 243, "public": false, "help": "Updates the game clock and if enabled the advanced timing data. This is called automatically by Phaser.Game."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Timer"], "name": "timer", "help": "An existing Phaser.Timer object."}], "inheritedFrom": "", "private": false, "returns": {"help": "The given Phaser.Timer object.", "types": ["Phaser.Timer"]}, "protected": false, "static": false, "inherited": false, "line": 191, "public": true, "help": "Adds an existing Phaser.Timer object to the Timer pool."}, {"name": "create", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "autoDestroy", "help": "A Timer that is set to automatically destroy itself will do so after all of its events have been dispatched (assuming no looping events)."}], "inheritedFrom": "", "private": false, "returns": {"help": "The Timer object that was created.", "types": ["Phaser.Timer"]}, "protected": false, "static": false, "inherited": false, "line": 206, "public": true, "help": "Creates a new stand-alone Phaser.Timer object."}, {"name": "elapsedSecondsSince", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "since", "help": "The time you want to measure (in seconds)."}], "inheritedFrom": "", "private": false, "returns": {"help": "Duration between given time and now (in seconds).", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 390, "public": true, "help": "How long has passed since the given time (in seconds)."}, {"name": "elapsedSince", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "since", "help": "The time you want to measure against."}], "inheritedFrom": "", "private": false, "returns": {"help": "The difference between the given time and now.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 379, "public": true, "help": "How long has passed since the given time."}, {"name": "removeAll", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 223, "public": true, "help": "Remove all Timer objects, regardless of their state. Also clears all Timers from the Time.events timer."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 399, "public": true, "help": "Resets the private _started value to now and removes all currently running Timers."}, {"name": "totalElapsedSeconds", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The number of seconds that have elapsed since the game was started.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 368, "public": true, "help": "The number of seconds that have elapsed since the game was started."}], "private": [{"name": "gamePaused", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 323, "public": false, "help": "Called when the game enters a paused state."}, {"name": "gameResumed", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 344, "public": false, "help": "Called when the game resumes from a paused state."}]}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "A collection of mathematical methods.", "parameters": [], "static": true, "constructor": false, "extends": "", "name": "Phaser.Math"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "Linear", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "p0", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "p1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "t", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 973, "public": true, "help": "Calculates a linear value over t."}, {"name": "PI2", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 18, "public": true, "help": "= 2 &pi;"}, {"name": "angleBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "x2", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y2", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 338, "public": true, "help": "Find the angle of a segment from (x1, y1) -> (x2, y2)."}, {"name": "angleBetweenPoints", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point1", "help": ""}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point2", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 365, "public": true, "help": "Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y)."}, {"name": "angleBetweenPointsY", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point1", "help": ""}, {"default": null, "optional": false, "type": ["Phaser.Point"], "name": "point2", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 376, "public": true, "help": "Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y)."}, {"name": "angleBetweenY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "x2", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y2", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 354, "public": true, "help": "Find the angle of a segment from (x1, y1) -> (x2, y2).\\nNote that the difference between this method and Math.angleBetween is that this assumes the y coordinate travels\\ndown the screen."}, {"name": "angleLimit", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle value to check. Must be between -180 and +180."}, {"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum angle that is allowed (must be -180 or greater)."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum angle that is allowed (must be 180 or less)."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new angle value, returns the same as the input angle if it was within bounds", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 859, "public": true, "help": "Keeps an angle value between the given min and max values."}, {"name": "average", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The average of all given values.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 86, "public": true, "help": "Averages all values passed to the function and returns the result. You can pass as many parameters as you like."}, {"name": "bernstein", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "n", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "i", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 983, "public": true, "help": ""}, {"name": "bezierInterpolation", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "v", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "k", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 910, "public": true, "help": "A Bezier Interpolation Method, mostly used by Phaser.Tween."}, {"name": "catmullRom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "p0", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "p1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "p2", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "p3", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "t", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1020, "public": true, "help": "Calculates a callmum rom value."}, {"name": "catmullRomInterpolation", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "v", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "k", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 931, "public": true, "help": "A Catmull Rom Interpolation Method, mostly used by Phaser.Tween."}, {"name": "ceil", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "Any number."}], "inheritedFrom": "", "private": false, "returns": {"help": "The rounded value of that number.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1130, "public": true, "help": "Round up to the next whole number.  E.g. ceil(1.3) == 2, and ceil(-2.3) == -3."}, {"name": "ceilTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to round."}, {"default": null, "optional": false, "type": ["number"], "name": "place", "help": "The place to round to."}, {"default": null, "optional": false, "type": ["number"], "name": "base", "help": "The base to round in... default is 10 for decimal."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 306, "public": true, "help": ""}, {"name": "chanceRoll", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "chance", "help": "The chance of receiving the value. A number between 0 and 100 (effectively 0% to 100%)."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the roll passed, or false otherwise.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 441, "public": true, "help": "Generate a random bool result based on the chance value.\\n<p>\\nReturns true or false based on the chance value (default 50%). For example if you wanted a player to have a 30% chance\\nof getting a bonus, call chanceRoll(30) - true means the chance passed, false means it failed.\\n</p>"}, {"name": "clamp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1276, "public": true, "help": "Force a value within the boundaries of two values.\\nClamp value to range <a, b>"}, {"name": "clampBottom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1290, "public": true, "help": "Clamp value to range <a, inf)."}, {"name": "degToRad", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["function"]}, "protected": false, "static": false, "inherited": false, "line": 1408, "public": true, "help": "Convert degrees to radians."}, {"name": "difference", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1034, "public": true, "help": ""}, {"name": "distance", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "x2", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y2", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between the two sets of coordinates.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1222, "public": true, "help": "Returns the distance between the two given set of coordinates."}, {"name": "distancePow", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "x2", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y2", "help": ""}, {"default": "2", "optional": true, "type": ["number"], "name": "pow", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between the two sets of coordinates.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1242, "public": true, "help": "Returns the distance between the two given set of coordinates at the power given."}, {"name": "distanceRounded", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y1", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "x2", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "y2", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "The distance between this Point object and the destination Point object.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1260, "public": true, "help": "Returns the rounded distance between the two given set of coordinates."}, {"name": "factorial", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "the number you want to evaluate"}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 992, "public": true, "help": ""}, {"name": "floor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "Value", "help": " Any number."}], "inheritedFrom": "", "private": false, "returns": {"help": "The rounded value of that number.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1115, "public": true, "help": "Round down to the next whole number. E.g. floor(1.7) == 1, and floor(-2.7) == -2."}, {"name": "floorTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to round."}, {"default": null, "optional": false, "type": ["number"], "name": "place", "help": "The place to round to."}, {"default": null, "optional": false, "type": ["number"], "name": "base", "help": "The base to round in... default is 10 for decimal."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 288, "public": true, "help": ""}, {"name": "fuzzyCeil", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "val", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "epsilon", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "ceiling(val-&epsilon;)", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 65, "public": true, "help": ""}, {"name": "fuzzyEqual", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "epsilon", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "True if |a-b|<&epsilon;", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 28, "public": true, "help": "Two number are fuzzyEqual if their difference is less than &epsilon;."}, {"name": "fuzzyFloor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "val", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "epsilon", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "floor(val-&epsilon;)", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 76, "public": true, "help": ""}, {"name": "fuzzyGreaterThan", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "epsilon", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "True if a>b+&epsilon;", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 54, "public": true, "help": "a is fuzzyGreaterThan b if it is more than b - &epsilon;."}, {"name": "fuzzyLessThan", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "epsilon", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "True if a<b+&epsilon;", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 41, "public": true, "help": "a is fuzzyLessThan b if it is less than b + &epsilon;."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "objects", "help": "An array of objects."}, {"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "", "private": false, "returns": {"help": "The random object that was selected.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1048, "public": true, "help": "Fetch a random entry from the given array.\\nWill return null if random selection is missing, or array has no entries."}, {"name": "interpolateFloat", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "weight", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 325, "public": true, "help": "A one dimensional linear interpolation of a value."}, {"name": "isEven", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "n", "help": "The number to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the given number is even. False if the given number is odd.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 703, "public": true, "help": "Returns true if the number given is even."}, {"name": "isOdd", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "n", "help": "The number to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the given number is odd. False if the given number is even.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 690, "public": true, "help": "Returns true if the number given is odd."}, {"name": "limitValue", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to limit."}, {"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum the value can be."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum the value can be."}], "inheritedFrom": "", "private": false, "returns": {"help": "The limited value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 665, "public": true, "help": "Ensures the given value is between min and max inclusive."}, {"name": "linearInterpolation", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "v", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "k", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 883, "public": true, "help": "A Linear Interpolation Method, mostly used by Phaser.Tween."}, {"name": "mapLinear", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": " the value to map"}, {"default": null, "optional": false, "type": ["number"], "name": "a1", "help": " first endpoint of the range <a1, a2>"}, {"default": null, "optional": false, "type": ["number"], "name": "a2", "help": " final endpoint of the range <a1, a2>"}, {"default": null, "optional": false, "type": ["number"], "name": "b1", "help": " first endpoint of the range <b1, b2>"}, {"default": null, "optional": false, "type": ["number"], "name": "b2", "help": " final endpoint of the range  <b1, b2>"}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1322, "public": true, "help": "Linear mapping from range <a1, a2> to range <b1, b2>"}, {"name": "max", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The largest value from those given.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 752, "public": true, "help": "Updated version of Math.max that can be passed either an array of numbers or the numbers as parameters."}, {"name": "maxAdd", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to add the amount to."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to add to the value."}, {"default": null, "optional": false, "type": ["number"], "name": "max-", "help": " The maximum the value is allowed to be."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 569, "public": true, "help": "Adds the given amount to the value, but never lets the value go over the specified maximum."}, {"name": "maxProperty", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The largest value from those given.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 812, "public": true, "help": "Updated version of Math.max that can be passed a property and either an array of objects or the objects as parameters.\\nIt will find the largest matching property value from the given objects."}, {"name": "min", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The lowest value from those given.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 723, "public": true, "help": "Updated version of Math.min that can be passed either an array of numbers or the numbers as parameters.\\nSee http://jsperf.com/math-s-min-max-vs-homemade/5"}, {"name": "minProperty", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "The lowest value from those given.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 782, "public": true, "help": "Updated version of Math.min that can be passed a property and either an array of objects or the objects as parameters.\\nIt will find the lowest matching property value from the given objects."}, {"name": "minSub", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The base value."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the base value."}, {"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum the value is allowed to be."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 591, "public": true, "help": "Subtracts the given amount from the value, but never lets the value go below the specified minimum."}, {"name": "normalizeAngle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "angleRad", "help": "The angle to normalize, in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the angle, fit within the [0,2pi] range, in radians.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 396, "public": true, "help": "Normalizes an angle to the [0,2pi) range."}, {"name": "normalizeLatitude", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "lat", "help": "The latitude to normalize, in degrees."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the latitude, fit within the [-90,90] range.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 409, "public": true, "help": "Normalizes a latitude to the [-90,90] range. Latitudes above 90 or below -90 are capped, not wrapped."}, {"name": "normalizeLongitude", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "lng", "help": "The longitude to normalize, in degrees."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the longitude, fit within the [-180,180] range.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 419, "public": true, "help": "Normalizes a longitude to the [-180,180] range. Longitudes above 180 or below -180 are wrapped."}, {"name": "numberArray", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum value the array starts with."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum value the array contains."}], "inheritedFrom": "", "private": false, "returns": {"help": "The array of number values.", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 476, "public": true, "help": "Returns an Array containing the numbers from min to max and inclusive of both values.\\nIf you need exclusive of max then see Phaser.Math.numberArrayEx."}, {"name": "numberArrayStep", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "start", "help": "The start of the range."}, {"default": null, "optional": false, "type": ["number"], "name": "end", "help": "The end of the range."}, {"default": "1", "optional": true, "type": ["number"], "name": "step", "help": "The value to increment or decrement by."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": true, "inherited": false, "line": 520, "public": true, "help": "Creates an array of numbers (positive and/or negative) progressing from\\n`start` up to but not including `end`. If `start` is less than `stop` a\\nzero-length range is created unless a negative `step` is specified.\\n\\n\\nPhaser.Math.numberArrayStep(4);\\n// => [0, 1, 2, 3]\\n\\nPhaser.Math.numberArrayStep(1, 5);\\n// => [1, 2, 3, 4]\\n\\nPhaser.Math.numberArrayStep(0, 20, 5);\\n// => [0, 5, 10, 15]\\n\\nPhaser.Math.numberArrayStep(0, -4, -1);\\n// => [0, -1, -2, -3]\\n\\nPhaser.Math.numberArrayStep(1, 4, 0);\\n// => [1, 1, 1]\\n\\nPhaser.Math.numberArrayStep(0);\\n// => []"}, {"name": "percent", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": "The value to work out the percentage for."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The value you wish to get the percentage of."}, {"default": "0", "optional": true, "type": ["number"], "name": "base", "help": "The base value."}], "inheritedFrom": "", "private": false, "returns": {"help": "The percentage a is of b, between 0 and 1.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1383, "public": true, "help": "Work out what percentage value a is of value b using the given base."}, {"name": "radToDeg", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["function"]}, "protected": false, "static": false, "inherited": false, "line": 1426, "public": true, "help": "Convert degrees to radians."}, {"name": "randomSign", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": " 1 or -1", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 677, "public": true, "help": "Randomly returns either a 1 or -1."}, {"name": "removeRandom", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "objects", "help": "An array of objects."}, {"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "", "private": false, "returns": {"help": "The random object that was removed.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1082, "public": true, "help": "Removes a random object from the given array and returns it.\\nWill return null if random selection is missing, or array has no entries."}, {"name": "reverseAngle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "angleRad", "help": "The angle to reverse, in radians."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the reverse angle, in radians.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 386, "public": true, "help": "Reverses an angle."}, {"name": "roundTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to round."}, {"default": null, "optional": false, "type": ["number"], "name": "place", "help": "The place to round to."}, {"default": null, "optional": false, "type": ["number"], "name": "base", "help": "The base to round in... default is 10 for decimal."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 270, "public": true, "help": "Round to some place comparative to a 'base', default is 10 for decimal place.\\n\\n'place' is represented by the power applied to 'base' to get that place\\ne.g.\\n2000/7 ~= 285.714285714285714285714 ~= (bin)100011101.1011011011011011\\n\\nroundTo(2000/7,3) === 0\\nroundTo(2000/7,2) == 300\\nroundTo(2000/7,1) == 290\\nroundTo(2000/7,0) == 286\\nroundTo(2000/7,-1) == 285.7\\nroundTo(2000/7,-2) == 285.71\\nroundTo(2000/7,-3) == 285.714\\nroundTo(2000/7,-4) == 285.7143\\nroundTo(2000/7,-5) == 285.71429\\n\\nroundTo(2000/7,3,2)  == 288       -- 100100000\\nroundTo(2000/7,2,2)  == 284       -- 100011100\\nroundTo(2000/7,1,2)  == 286       -- 100011110\\nroundTo(2000/7,0,2)  == 286       -- 100011110\\nroundTo(2000/7,-1,2) == 285.5     -- 100011101.1\\nroundTo(2000/7,-2,2) == 285.75    -- 100011101.11\\nroundTo(2000/7,-3,2) == 285.75    -- 100011101.11\\nroundTo(2000/7,-4,2) == 285.6875  -- 100011101.1011\\nroundTo(2000/7,-5,2) == 285.71875 -- 100011101.10111\\n\\nNote what occurs when we round to the 3rd space (8ths place), 100100000, this is to be assumed\\nbecause we are rounding 100011.1011011011011011 which rounds up."}, {"name": "shear", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "n", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "n mod 1", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 118, "public": true, "help": ""}, {"name": "shift", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "stack", "help": "The array to shift."}], "inheritedFrom": "", "private": false, "returns": {"help": "The shifted value.", "types": ["any"]}, "protected": false, "static": false, "inherited": false, "line": 1183, "public": true, "help": "Removes the top element from the stack and re-inserts it onto the bottom, then returns it.\\nThe original stack is modified in the process. This effectively moves the position of the data from the start to the end of the table."}, {"name": "shuffleArray", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "array", "help": "The array to shuffle"}], "inheritedFrom": "", "private": false, "returns": {"help": "The array", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1198, "public": true, "help": "Shuffles the data in the given array into a new order"}, {"name": "sign", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1368, "public": true, "help": "A value representing the sign of the value.\\n-1 for negative, +1 for positive, 0 if value is 0"}, {"name": "sinCosGenerator", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "length", "help": "The length of the wave"}, {"default": null, "optional": false, "type": ["number"], "name": "sinAmplitude", "help": "The amplitude to apply to the sine table (default 1.0) if you need values between say -+ 125 then give 125 as the value"}, {"default": null, "optional": false, "type": ["number"], "name": "cosAmplitude", "help": "The amplitude to apply to the cosine table (default 1.0) if you need values between say -+ 125 then give 125 as the value"}, {"default": null, "optional": false, "type": ["number"], "name": "frequency", "help": "  - The frequency of the sine and cosine table data"}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns the sine table", "types": ["array"]}, "protected": false, "static": false, "inherited": false, "line": 1148, "public": true, "help": "Generate a sine and cosine table simultaneously and extremely quickly. Based on research by Franky of scene.at\\n<p>\\nThe parameters allow you to specify the length, amplitude and frequency of the wave. Once you have called this function\\nyou should get the results via getSinTable() and getCosTable(). This generator is fast enough to be used in real-time.\\n</p>"}, {"name": "smootherstep", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "min", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1353, "public": true, "help": "Smootherstep function as detailed at http://en.wikipedia.org/wiki/Smoothstep"}, {"name": "smoothstep", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "min", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1337, "public": true, "help": "Smoothstep function as detailed at http://en.wikipedia.org/wiki/Smoothstep"}, {"name": "snapTo", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "input", "help": "The value to snap."}, {"default": null, "optional": false, "type": ["number"], "name": "gap", "help": "The interval gap of the grid."}, {"default": null, "optional": true, "type": ["number"], "name": "start", "help": "Optional starting offset for gap."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 133, "public": true, "help": "Snap a value to nearest grid slice, using rounding.\\n\\nExample: if you have an interval gap of 5 and a position of 12... you will snap to 10 whereas 14 will snap to 15."}, {"name": "snapToCeil", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "input", "help": "The value to snap."}, {"default": null, "optional": false, "type": ["number"], "name": "gap", "help": "The interval gap of the grid."}, {"default": null, "optional": true, "type": ["number"], "name": "start", "help": "Optional starting offset for gap."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 185, "public": true, "help": "Snap a value to nearest grid slice, using ceil.\\n\\nExample: if you have an interval gap of 5 and a position of 12... you will snap to 15. As will 14 will snap to 15... but 16 will snap to 20."}, {"name": "snapToFloor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "input", "help": "The value to snap."}, {"default": null, "optional": false, "type": ["number"], "name": "gap", "help": "The interval gap of the grid."}, {"default": null, "optional": true, "type": ["number"], "name": "start", "help": "Optional starting offset for gap."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 159, "public": true, "help": "Snap a value to nearest grid slice, using floor.\\n\\nExample: if you have an interval gap of 5 and a position of 12... you will snap to 10. As will 14 snap to 10... but 16 will snap to 15"}, {"name": "snapToInArray", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "input", "help": ""}, {"default": null, "optional": false, "type": ["array"], "name": "arr", "help": ""}, {"default": null, "optional": false, "type": ["boolean"], "name": "sort", "help": "True if the array needs to be sorted."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 209, "public": true, "help": "Snaps a value to the nearest value in an array."}, {"name": "truncate", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "n", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 109, "public": true, "help": ""}, {"name": "within", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "a", "help": "The first number to check"}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The second number to check"}, {"default": null, "optional": false, "type": ["number"], "name": "tolerance", "help": "The tolerance. Anything equal to or less than this is considered within the range."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if a is <= tolerance of b.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1305, "public": true, "help": "Checks if two values are within the given tolerance of each other."}, {"name": "wrap", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to wrap."}, {"default": null, "optional": false, "type": ["number"], "name": "min", "help": "The minimum the value is allowed to be."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum the value is allowed to be."}], "inheritedFrom": "", "private": false, "returns": {"help": "The wrapped value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 614, "public": true, "help": "Ensures that the value always stays between min and max, by wrapping the value around.\\nmax should be larger than min, or the function will return 0."}, {"name": "wrapAngle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "angle", "help": "The angle value to check"}, {"default": null, "optional": false, "type": ["boolean"], "name": "radians", "help": "Set to `true` if the angle is given in radians, otherwise degrees is expected."}], "inheritedFrom": "", "private": false, "returns": {"help": "The new angle value, returns the same as the input angle if it was within bounds.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 843, "public": true, "help": "Keeps an angle value between -180 and +180."}, {"name": "wrapValue", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "value", "help": "The value to add the amount to."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to add to the value."}, {"default": null, "optional": false, "type": ["number"], "name": "max", "help": "The maximum the value is allowed to be."}], "inheritedFrom": "", "private": false, "returns": {"help": "The wrapped value.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 644, "public": true, "help": "Adds value to amount and ensures that the result always stays between 0 and max, by wrapping the value around.\\nValues must be positive integers, and are passed through Math.abs."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blur", "default": "2", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "", "public": true, "help": "Sets the strength of both the blur."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "The BlurXFilter applies a horizontal Gaussian blur to an object.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.BlurXFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": [{"name": "_bounds", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 177, "inlineHelp": "", "public": false, "help": "The original, cached bounds of the object"}, {"name": "_cacheAsBitmap", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 204, "inlineHelp": "", "public": false, "help": "Cached internal flag."}, {"name": "_cacheIsDirty", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 213, "inlineHelp": "", "public": false, "help": "Cached internal flag."}, {"name": "_cr", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 159, "inlineHelp": "", "public": false, "help": "cached sin rotation and cos rotation"}, {"name": "_currentBounds", "default": null, "type": ["Phaser.Rectangle"], "private": true, "readOnly": false, "protected": false, "line": 195, "inlineHelp": "", "public": false, "help": "The original, cached mask of the object"}, {"name": "_interactive", "default": null, "type": ["boolean"], "private": true, "readOnly": true, "protected": false, "line": 122, "inlineHelp": "", "public": false, "help": "[read-only] Whether or not the object is interactive, do not toggle directly! use the `interactive` property"}, {"name": "_sr", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 150, "inlineHelp": "", "public": false, "help": "cached sin rotation and cos rotation"}, {"name": "worldTransform", "default": null, "type": ["PIXI.Matrix"], "private": true, "readOnly": true, "protected": false, "line": 141, "inlineHelp": "", "public": false, "help": "[read-only] Current transform of the object based on world (parent) factors"}]}, "class": {"help": "The base class for all objects that are rendered on the screen.\\nThis is an abstract class and should not be used on its own rather it should be extended.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.DisplayObject"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Matrix"], "name": "matrix", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "the rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 526, "public": true, "help": "Retrieves the bounds of the displayObject as a rectangle object"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "the rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 538, "public": true, "help": "Retrieves the local bounds of the displayObject as a rectangle object"}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the object will have as its current stage reference"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 549, "public": true, "help": "Sets the object's stage reference, the stage this object is connected to"}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "_destroyCachedSprite", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 687, "public": false, "help": "Destroys the cached sprite."}, {"name": "_generateCachedSprite", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 645, "public": false, "help": "Internal method."}, {"name": "_renderCachedSprite", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": "The render session"}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 625, "public": false, "help": "Internal method."}, {"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 718, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 704, "public": false, "help": "Renders the object using the WebGL renderer"}]}}, {"properties": {"protected": [], "public": [{"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "", "public": true, "help": "The renderable state of this FilterBlock."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "", "public": true, "help": "The visible state of this FilterBlock."}], "private": []}, "class": {"help": "A target and pass info object for filters.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.FilterBlock"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "baseTexture", "default": "new PIXI.BaseTexture(this.canvas)", "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "The PIXI.BaseTexture.", "public": true, "help": ""}, {"name": "buffer", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "An ArrayBuffer the same size as the context ImageData.", "public": true, "help": ""}, {"name": "canvas", "default": "Phaser.Canvas.create(width, height, '', true)", "type": ["HTMLCanvasElement"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "The canvas to which this BitmapData draws.", "public": true, "help": ""}, {"name": "context", "default": "this.canvas.getContext('2d')", "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "The 2d context of the canvas.", "public": true, "help": ""}, {"name": "ctx", "default": null, "type": ["CanvasRenderingContext2D"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "A reference to BitmapData.context.", "public": true, "help": ""}, {"name": "data", "default": null, "type": ["Uint8ClampedArray"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "A Uint8ClampedArray view into BitmapData.buffer.", "public": true, "help": ""}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "If dirty this BitmapData will be re-rendered.", "public": true, "help": ""}, {"name": "disableTextureUpload", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 126, "inlineHelp": "If disableTextureUpload is true this BitmapData will never send its image data to the GPU when its dirty flag is true.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 42, "inlineHelp": "The height of the BitmapData in pixels.", "public": true, "help": ""}, {"name": "imageData", "default": null, "type": ["ImageData"], "private": false, "readOnly": false, "protected": false, "line": 64, "inlineHelp": "The context image data.", "public": true, "help": ""}, {"name": "key", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 32, "inlineHelp": "The key of the BitmapData in the Cache, if stored there.", "public": true, "help": ""}, {"name": "pixels", "default": null, "type": ["Uint32Array"], "private": false, "readOnly": false, "protected": false, "line": 74, "inlineHelp": "An Uint32Array view into BitmapData.buffer.", "public": true, "help": ""}, {"name": "smoothed", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1769, "inlineHelp": "Gets or sets this BitmapData.contexts smoothing enabled value.", "public": true, "help": ""}, {"name": "texture", "default": "new PIXI.Texture(this.baseTexture)", "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "The PIXI.Texture.", "public": true, "help": ""}, {"name": "textureFrame", "default": "new Phaser.Frame(0, 0, 0, width, height, 'bitmapData', game.rnd.uuid())", "type": ["Phaser.Frame"], "private": false, "readOnly": false, "protected": false, "line": 113, "inlineHelp": "The Frame this BitmapData uses for rendering.", "public": true, "help": ""}, {"name": "type", "default": "Phaser.BITMAPDATA", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "The const type of this object.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "The width of the BitmapData in pixels.", "public": true, "help": ""}], "private": [{"name": "_alpha", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 170, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_anchor", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 176, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_circle", "default": null, "type": ["Phaser.Circle"], "private": true, "readOnly": false, "protected": false, "line": 200, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_image", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 140, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_pos", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 146, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_rotate", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 164, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_scale", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 158, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_size", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 152, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_tempB", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 194, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_tempG", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 188, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_tempR", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 182, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "A BitmapData object contains a Canvas element to which you can draw anything you like via normal Canvas context operations.\\nA single BitmapData can be used as the texture for one or many Images/Sprites.\\nSo if you need to dynamically create a Sprite texture then they are a good choice.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "Internal Phaser reference key for the render texture."}, {"default": "256", "optional": true, "type": ["number"], "name": "width", "help": "The width of the BitmapData in pixels."}, {"default": "256", "optional": true, "type": ["number"], "name": "height", "help": "The height of the BitmapData in pixels."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.BitmapData"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "array Phaser.Sprite", "Phaser.Image", "array Phaser.Image"], "name": "object", "help": "Either a single Sprite/Image or an Array of Sprites/Images."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 213, "public": true, "help": "Updates the given objects so that they use this BitmapData as their texture. This will replace any texture they will currently have set."}, {"name": "addToWorld", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate to place the Image at."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate to place the Image at."}, {"default": "0", "optional": true, "type": ["number"], "name": "anchorX", "help": "Set the x anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right."}, {"default": "0", "optional": true, "type": ["number"], "name": "anchorY", "help": "Set the y anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right."}, {"default": "1", "optional": true, "type": ["number"], "name": "scaleX", "help": "The horizontal scale factor of the Image. A value of 1 means no scaling. 2 would be twice the size, and so on."}, {"default": "1", "optional": true, "type": ["number"], "name": "scaleY", "help": "The vertical scale factor of the Image. A value of 1 means no scaling. 2 would be twice the size, and so on."}], "inheritedFrom": "", "private": false, "returns": {"help": "The newly added Image object.", "types": ["Phaser.Image"]}, "protected": false, "static": false, "inherited": false, "line": 943, "public": true, "help": "Creates a new Phaser.Image object, assigns this BitmapData to be its texture, adds it to the world then returns it."}, {"name": "alphaMask", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapData", "Image", "HTMLCanvasElement", "string"], "name": "source", "help": "The source to copy from. If you give a string it will try and find the Image in the Game.Cache first. This is quite expensive so try to provide the image itself."}, {"default": null, "optional": true, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapData", "Image", "HTMLCanvasElement", "string"], "name": "mask", "help": "The object to be used as the mask. If you give a string it will try and find the Image in the Game.Cache first. This is quite expensive so try to provide the image itself. If you don't provide a mask it will use this BitmapData as the mask."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "sourceRect", "help": "A Rectangle where x/y define the coordinates to draw the Source image to and width/height define the size."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "maskRect", "help": "A Rectangle where x/y define the coordinates to draw the Mask image to and width/height define the size."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1229, "public": true, "help": "Draws the image onto this BitmapData using an image as an alpha mask."}, {"name": "blendAdd", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1561, "public": true, "help": "Sets the blend mode to 'lighter'"}, {"name": "blendColor", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1743, "public": true, "help": "Sets the blend mode to 'color'"}, {"name": "blendColorBurn", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1652, "public": true, "help": "Sets the blend mode to 'color-burn'"}, {"name": "blendColorDodge", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1639, "public": true, "help": "Sets the blend mode to 'color-dodge'"}, {"name": "blendDarken", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1613, "public": true, "help": "Sets the blend mode to 'darken'"}, {"name": "blendDestinationAtop", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1535, "public": true, "help": "Sets the blend mode to 'destination-atop'"}, {"name": "blendDestinationIn", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1509, "public": true, "help": "Sets the blend mode to 'destination-in'"}, {"name": "blendDestinationOut", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1522, "public": true, "help": "Sets the blend mode to 'destination-out'"}, {"name": "blendDestinationOver", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1496, "public": true, "help": "Sets the blend mode to 'destination-over'"}, {"name": "blendDifference", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1691, "public": true, "help": "Sets the blend mode to 'difference'"}, {"name": "blendExclusion", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1704, "public": true, "help": "Sets the blend mode to 'exclusion'"}, {"name": "blendHardLight", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1665, "public": true, "help": "Sets the blend mode to 'hard-light'"}, {"name": "blendHue", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1717, "public": true, "help": "Sets the blend mode to 'hue'"}, {"name": "blendLighten", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1626, "public": true, "help": "Sets the blend mode to 'lighten'"}, {"name": "blendLuminosity", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1756, "public": true, "help": "Sets the blend mode to 'luminosity'"}, {"name": "blendMultiply", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1574, "public": true, "help": "Sets the blend mode to 'multiply'"}, {"name": "blendOverlay", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1600, "public": true, "help": "Sets the blend mode to 'overlay'"}, {"name": "blendReset", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1431, "public": true, "help": "Resets the blend mode (effectively sets it to 'source-over')"}, {"name": "blendSaturation", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1730, "public": true, "help": "Sets the blend mode to 'saturation'"}, {"name": "blendScreen", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1587, "public": true, "help": "Sets the blend mode to 'screen'"}, {"name": "blendSoftLight", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1678, "public": true, "help": "Sets the blend mode to 'soft-light'"}, {"name": "blendSourceAtop", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1483, "public": true, "help": "Sets the blend mode to 'source-atop'"}, {"name": "blendSourceIn", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1457, "public": true, "help": "Sets the blend mode to 'source-in'"}, {"name": "blendSourceOut", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1470, "public": true, "help": "Sets the blend mode to 'source-out'"}, {"name": "blendSourceOver", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1444, "public": true, "help": "Sets the blend mode to 'source-over'"}, {"name": "blendXor", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1548, "public": true, "help": "Sets the blend mode to 'xor'"}, {"name": "circle", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to draw the Circle at. This is the center of the circle."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to draw the Circle at. This is the center of the circle."}, {"default": null, "optional": false, "type": ["number"], "name": "radius", "help": "The radius of the Circle in pixels. The radius is half the diameter."}, {"default": null, "optional": true, "type": ["string"], "name": "fillStyle", "help": "If set the context fillStyle will be set to this value before the circle is drawn."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1340, "public": true, "help": "Draws a filled Circle to the BitmapData at the given x, y coordinates and radius in size."}, {"name": "clear", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 281, "public": true, "help": "Clears the BitmapData context using a clearRect."}, {"name": "cls", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 274, "public": true, "help": "Clears the BitmapData context using a clearRect."}, {"name": "copy", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapData", "Image", "HTMLCanvasElement", "string"], "name": "source", "help": "The source to copy from. If you give a string it will try and find the Image in the Game.Cache first. This is quite expensive so try to provide the image itself."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate representing the top-left of the region to copy from the source image."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate representing the top-left of the region to copy from the source image."}, {"default": null, "optional": true, "type": ["number"], "name": "width", "help": "The width of the region to copy from the source image. If not specified it will use the full source image width."}, {"default": null, "optional": true, "type": ["number"], "name": "height", "help": "The height of the region to copy from the source image. If not specified it will use the full source image height."}, {"default": null, "optional": true, "type": ["number"], "name": "tx", "help": "The x coordinate to translate to before drawing. If not specified it will default to the `x` parameter."}, {"default": null, "optional": true, "type": ["number"], "name": "ty", "help": "The y coordinate to translate to before drawing. If not specified it will default to the `y` parameter."}, {"default": null, "optional": true, "type": ["number"], "name": "newWidth", "help": "The new width of the block being copied. If not specified it will default to the `width` parameter."}, {"default": null, "optional": true, "type": ["number"], "name": "newHeight", "help": "The new height of the block being copied. If not specified it will default to the `height` parameter."}, {"default": "0", "optional": true, "type": ["number"], "name": "rotate", "help": "The angle in radians to rotate the block to before drawing. Rotation takes place around the center by default, but can be changed with the `anchor` parameters."}, {"default": "0", "optional": true, "type": ["number"], "name": "anchorX", "help": "The anchor point around which the block is rotated and scaled. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right."}, {"default": "0", "optional": true, "type": ["number"], "name": "anchorY", "help": "The anchor point around which the block is rotated and scaled. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right."}, {"default": "1", "optional": true, "type": ["number"], "name": "scaleX", "help": "The horizontal scale factor of the block. A value of 1 means no scaling. 2 would be twice the size, and so on."}, {"default": "1", "optional": true, "type": ["number"], "name": "scaleY", "help": "The vertical scale factor of the block. A value of 1 means no scaling. 2 would be twice the size, and so on."}, {"default": "1", "optional": true, "type": ["number"], "name": "alpha", "help": "The alpha that will be set on the context before drawing. A value between 0 (fully transparent) and 1, opaque."}, {"default": "null", "optional": true, "type": ["number"], "name": "blendMode", "help": "The composite blend mode that will be used when drawing. The default is no blend mode at all."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "roundPx", "help": "Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 986, "public": true, "help": "Copies a rectangular area from the source object to this BitmapData. If you give `null` as the source it will copy from itself.\\nYou can optionally resize, translate, rotate, scale, alpha or blend as it's drawn.\\nAll rotation, scaling and drawing takes place around the regions center point by default, but can be changed with the anchor parameters.\\nNote that the source image can also be this BitmapData, which can create some interesting effects.\\n\\nThis method has a lot of parameters for maximum control.\\nYou can use the more friendly methods like `copyRect` and `draw` to avoid having to remember them all."}, {"name": "copyRect", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapData", "Image", "string"], "name": "source", "help": "The Image to copy from. If you give a string it will try and find the Image in the Game.Cache."}, {"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "area", "help": "The Rectangle region to copy from the source image."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The destination x coordinate to copy the image to."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The destination y coordinate to copy the image to."}, {"default": "1", "optional": true, "type": ["number"], "name": "alpha", "help": "The alpha that will be set on the context before drawing. A value between 0 (fully transparent) and 1, opaque."}, {"default": "null", "optional": true, "type": ["number"], "name": "blendMode", "help": "The composite blend mode that will be used when drawing. The default is no blend mode at all."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "roundPx", "help": "Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1163, "public": true, "help": "Copies the area defined by the Rectangle parameter from the source image to this BitmapData at the given location."}, {"name": "draw", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text"], "name": "source", "help": "The Sprite, Image or Text object to draw onto this BitmapData."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate to translate to before drawing. If not specified it will default to `source.x`."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate to translate to before drawing. If not specified it will default to `source.y`."}, {"default": null, "optional": true, "type": ["number"], "name": "width", "help": "The new width of the Sprite being copied. If not specified it will default to `source.width`."}, {"default": null, "optional": true, "type": ["number"], "name": "height", "help": "The new height of the Sprite being copied. If not specified it will default to `source.height`."}, {"default": "null", "optional": true, "type": ["number"], "name": "blendMode", "help": "The composite blend mode that will be used when drawing the Sprite. The default is no blend mode at all."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "roundPx", "help": "Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1184, "public": true, "help": "Draws the given Phaser.Sprite, Phaser.Image or Phaser.Text to this BitmapData at the coordinates specified.\\nYou can use the optional width and height values to 'stretch' the sprite as it is drawn. This uses drawImage stretching, not scaling.\\nWhen drawing it will take into account the Sprites rotation, scale and alpha values."}, {"name": "extract", "parameters": [{"default": null, "optional": false, "type": ["Phaser.BitmapData"], "name": "destination", "help": "The BitmapData that the extracted pixels will be drawn to."}, {"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color component, in the range 0 - 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color component, in the range 0 - 255."}, {"default": "255", "optional": true, "type": ["number"], "name": "a", "help": "The alpha color component, in the range 0 - 255 that the new pixel will be drawn at."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "resize", "help": "Should the destination BitmapData be resized to match this one before the pixels are copied?"}, {"default": null, "optional": true, "type": ["number"], "name": "r2", "help": "An alternative red color component to be written to the destination, in the range 0 - 255."}, {"default": null, "optional": true, "type": ["number"], "name": "g2", "help": "An alternative green color component to be written to the destination, in the range 0 - 255."}, {"default": null, "optional": true, "type": ["number"], "name": "b2", "help": "An alternative blue color component to be written to the destination, in the range 0 - 255."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1275, "public": true, "help": "Scans this BitmapData for all pixels matching the given r,g,b values and then draws them into the given destination BitmapData.\\nThe original BitmapData remains unchanged.\\nThe destination BitmapData must be large enough to receive all of the pixels that are scanned unless the 'resize' parameter is true.\\nAlthough the destination BitmapData is returned from this method, it's actually modified directly in place, meaning this call is perfectly valid:\\n`picture.extract(mask, r, g, b)`\\nYou can specify optional r2, g2, b2 color values. If given the pixel written to the destination bitmap will be of the r2, g2, b2 color.\\nIf not given it will be written as the same color it was extracted. You can provide one or more alternative colors, allowing you to tint\\nthe color during extraction."}, {"name": "fill", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r", "help": "The red color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "g", "help": "The green color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "b", "help": "The blue color value, between 0 and 0xFF (255)."}, {"default": "1", "optional": true, "type": ["number"], "name": "a", "help": "The alpha color value, between 0 and 1."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 301, "public": true, "help": "Fills the BitmapData with the given color."}, {"name": "getBounds", "parameters": [{"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "rect", "help": "If provided this Rectangle object will be populated with the bounds, otherwise a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "A Rectangle whose dimensions encompass the full extent of non-transparent pixels in this BitmapData.", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": false, "line": 911, "public": true, "help": "Scans the BitmapData and calculates the bounds. This is a rectangle that defines the extent of all non-transparent pixels.\\nThe rectangle returned will extend from the top-left of the image to the bottom-right, exluding transparent pixels."}, {"name": "getFirstPixel", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "direction", "help": "The direction in which to scan for the first pixel. 0 = top to bottom, 1 = bottom to top, 2 = left to right and 3 = right to left."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns an object containing the colour of the pixel in the `r`, `g` and `b` properties and the location in the `x` and `y` properties.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 835, "public": true, "help": "Scans the BitmapData, pixel by pixel, until it encounters a pixel that isn't transparent (i.e. has an alpha value > 0).\\nIt then stops scanning and returns an object containing the colour of the pixel in r, g and b properties and the location in the x and y properties.\\n\\nThe direction parameter controls from which direction it should start the scan:\\n\\n0 = top to bottom\\n1 = bottom to top\\n2 = left to right\\n3 = right to left"}, {"name": "getPixel", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 4 properties will be created: r, g, b and a. If not provided a new object will be created."}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green, blue and alpha values set in the r, g, b and a properties.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 748, "public": true, "help": "Get the color of a specific pixel in the context into a color object.\\nIf you have drawn anything to the BitmapData since it was created you must call BitmapData.update to refresh the array buffer,\\notherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist."}, {"name": "getPixel32", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}], "inheritedFrom": "", "private": false, "returns": {"help": "A native color value integer (format: 0xAARRGGBB)", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 779, "public": true, "help": "Get the color of a specific pixel including its alpha value.\\nIf you have drawn anything to the BitmapData since it was created you must call BitmapData.update to refresh the array buffer,\\notherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.\\nNote that on little-endian systems the format is 0xAABBGGRR and on big-endian the format is 0xRRGGBBAA."}, {"name": "getPixelRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": true, "type": ["object"], "name": "out", "help": "An object into which 3 properties will be created: r, g and b. If not provided a new object will be created."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "hsl", "help": "Also convert the rgb values into hsl?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "hsv", "help": "Also convert the rgb values into hsv?"}], "inheritedFrom": "", "private": false, "returns": {"help": "An object with the red, green and blue values set in the r, g and b properties.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 801, "public": true, "help": "Get the color of a specific pixel including its alpha value as a color object containing r,g,b,a and rgba properties.\\nIf you have drawn anything to the BitmapData since it was created you must call BitmapData.update to refresh the array buffer,\\notherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist."}, {"name": "getPixels", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Rectangle"], "name": "rect", "help": "The Rectangle region to get."}], "inheritedFrom": "", "private": false, "returns": {"help": "Returns a ImageData object containing a Uint8ClampedArray data property.", "types": ["ImageData"]}, "protected": false, "static": false, "inherited": false, "line": 814, "public": true, "help": "Gets all the pixels from the region specified by the given Rectangle object."}, {"name": "getTransform", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "translateX", "help": "The x translate value."}, {"default": null, "optional": false, "type": ["number"], "name": "translateY", "help": "The y translate value."}, {"default": null, "optional": false, "type": ["number"], "name": "scaleX", "help": "The scale x value."}, {"default": null, "optional": false, "type": ["number"], "name": "scaleY", "help": "The scale y value."}, {"default": null, "optional": false, "type": ["number"], "name": "skewX", "help": "The skew x value."}, {"default": null, "optional": false, "type": ["number"], "name": "skewY", "help": "The skew y value."}], "inheritedFrom": "", "private": false, "returns": {"help": "A JavaScript object containing all of the properties BitmapData needs for transforms.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 1797, "public": true, "help": "Gets a JavaScript object that has 6 properties set that are used by BitmapData in a transform."}, {"name": "load", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite", "Phaser.Image", "Phaser.Text", "Phaser.BitmapData", "Image", "HTMLCanvasElement", "string"], "name": "source", "help": "The object that will be used to populate this BitmapData. If you give a string it will try and find the Image in the Game.Cache first."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 244, "public": true, "help": "Takes the given Game Object, resizes this BitmapData to match it and then draws it into this BitmapDatas canvas, ready for further processing.\\nThe source game object is not modified by this operation.\\nIf the source object uses a texture as part of a Texture Atlas or Sprite Sheet, only the current frame will be used for sizing.\\nIf a string is given it will assume it's a cache key and look in Phaser.Cache for an image key matching the string."}, {"name": "processPixel", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be sent each pixel color to be processed."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback will be called."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left of the region to process from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left of the region to process from."}, {"default": null, "optional": true, "type": ["number"], "name": "width", "help": "The width of the region to process."}, {"default": null, "optional": true, "type": ["number"], "name": "height", "help": "The height of the region to process."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 467, "public": true, "help": "Scans through the area specified in this BitmapData and sends the color for every pixel to the given callback along with its x and y coordinates.\\nWhatever value the callback returns is set as the new color for that pixel, unless it returns the same color, in which case it's skipped.\\nNote that the format of the color received will be different depending on if the system is big or little endian.\\nIt is expected that your callback will deal with endianess. If you'd rather Phaser did it then use processPixelRGB instead.\\nThe callback will also be sent the pixels x and y coordinates respectively."}, {"name": "processPixelRGB", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The callback that will be sent each pixel color object to be processed."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context under which the callback will be called."}, {"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left of the region to process from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left of the region to process from."}, {"default": null, "optional": true, "type": ["number"], "name": "width", "help": "The width of the region to process."}, {"default": null, "optional": true, "type": ["number"], "name": "height", "help": "The height of the region to process."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 412, "public": true, "help": "Scans through the area specified in this BitmapData and sends a color object for every pixel to the given callback.\\nThe callback will be sent a color object with 6 properties: `{ r: number, g: number, b: number, a: number, color: number, rgba: string }`.\\nWhere r, g, b and a are integers between 0 and 255 representing the color component values for red, green, blue and alpha.\\nThe `color` property is an Int32 of the full color. Note the endianess of this will change per system.\\nThe `rgba` property is a CSS style rgba() string which can be used with context.fillStyle calls, among others.\\nThe callback will also be sent the pixels x and y coordinates respectively.\\nThe callback must return either `false`, in which case no change will be made to the pixel, or a new color object.\\nIf a new color object is returned the pixel will be set to the r, g, b and a color values given within it."}, {"name": "rect", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": "The width of the Rectangle."}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "The height of the Rectangle."}, {"default": null, "optional": true, "type": ["string"], "name": "fillStyle", "help": "If set the context fillStyle will be set to this value before the rect is drawn."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1317, "public": true, "help": "Draws a filled Rectangle to the BitmapData at the given x, y coordinates and width / height in size."}, {"name": "render", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1413, "public": true, "help": "If the game is running in WebGL this will push the texture up to the GPU if it's dirty.\\nThis is called automatically if the BitmapData is being used by a Sprite, otherwise you need to remember to call it in your render function.\\nIf you wish to suppress this functionality set BitmapData.disableTextureUpload to `true`."}, {"name": "replaceRGB", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "r1", "help": "The red color value to be replaced. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g1", "help": "The green color value to be replaced. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b1", "help": "The blue color value to be replaced. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "a1", "help": "The alpha color value to be replaced. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "r2", "help": "The red color value that is the replacement color. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "g2", "help": "The green color value that is the replacement color. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "b2", "help": "The blue color value that is the replacement color. Between 0 and 255."}, {"default": null, "optional": false, "type": ["number"], "name": "a2", "help": "The alpha color value that is the replacement color. Between 0 and 255."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "region", "help": "The area to perform the search over. If not given it will replace over the whole BitmapData."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 521, "public": true, "help": "Replaces all pixels matching one color with another. The color values are given as two sets of RGBA values.\\nAn optional region parameter controls if the replacement happens in just a specific area of the BitmapData or the entire thing."}, {"name": "resize", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 319, "public": true, "help": "Resizes the BitmapData. This changes the size of the underlying canvas and refreshes the buffer."}, {"name": "setHSL", "parameters": [{"default": "null", "optional": true, "type": ["number"], "name": "h", "help": "The hue, in the range 0 - 1."}, {"default": "null", "optional": true, "type": ["number"], "name": "s", "help": "The saturation, in the range 0 - 1."}, {"default": "null", "optional": true, "type": ["number"], "name": "l", "help": "The lightness, in the range 0 - 1."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "region", "help": "The area to perform the operation on. If not given it will run over the whole BitmapData."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 565, "public": true, "help": "Sets the hue, saturation and lightness values on every pixel in the given region, or the whole BitmapData if no region was specified."}, {"name": "setPixel", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "red", "help": "The red color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "green", "help": "The green color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "blue", "help": "The blue color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "The alpha color value, between 0 and 0xFF (255)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "immediate", "help": "If `true` the context.putImageData will be called and the dirty flag set."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 731, "public": true, "help": "Sets the color of the given pixel to the specified red, green and blue values."}, {"name": "setPixel32", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData."}, {"default": null, "optional": false, "type": ["number"], "name": "red", "help": "The red color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "green", "help": "The green color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "blue", "help": "The blue color value, between 0 and 0xFF (255)."}, {"default": null, "optional": false, "type": ["number"], "name": "alpha", "help": "The alpha color value, between 0 and 0xFF (255)."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "immediate", "help": "If `true` the context.putImageData will be called and the dirty flag set."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 692, "public": true, "help": "Sets the color of the given pixel to the specified red, green, blue and alpha values."}, {"name": "shadow", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "color", "help": "The color of the shadow, given in a CSS format, i.e. `#000000` or `rgba(0,0,0,1)`. If `null` or `undefined` the shadow will be reset."}, {"default": "5", "optional": true, "type": ["number"], "name": "blur", "help": "The amount the shadow will be blurred by. Low values = a crisp shadow, high values = a softer shadow."}, {"default": "10", "optional": true, "type": ["number"], "name": "x", "help": "The horizontal offset of the shadow in pixels."}, {"default": "10", "optional": true, "type": ["number"], "name": "y", "help": "The vertical offset of the shadow in pixels."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1203, "public": true, "help": "Sets the shadow properties of this BitmapDatas context which will affect all draw operations made to it.\\nYou can cancel an existing shadow by calling this method and passing no parameters.\\nNote: At the time of writing (October 2014) Chrome still doesn't support shadowBlur used with drawImage."}, {"name": "shiftHSL", "parameters": [{"default": "null", "optional": true, "type": ["number"], "name": "h", "help": "The amount to shift the hue by."}, {"default": "null", "optional": true, "type": ["number"], "name": "s", "help": "The amount to shift the saturation by."}, {"default": "null", "optional": true, "type": ["number"], "name": "l", "help": "The amount to shift the lightness by."}, {"default": null, "optional": true, "type": ["Phaser.Rectangle"], "name": "region", "help": "The area to perform the operation on. If not given it will run over the whole BitmapData."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 628, "public": true, "help": "Shifts any or all of the hue, saturation and lightness values on every pixel in the given region, or the whole BitmapData if no region was specified.\\nShifting will add the given value onto the current h, s and l values, not replace them.\\nThe hue is wrapped to keep it within the range 0 to 1. Saturation and lightness are clamped to not exceed 1."}, {"name": "textureLine", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Line"], "name": "line", "help": "A Phaser.Line object that will be used to plot the start and end of the line."}, {"default": null, "optional": false, "type": ["string", "Image"], "name": "image", "help": "The key of an image in the Phaser.Cache to use as the texture for this line, or an actual Image."}, {"default": "'repeat-x'", "optional": true, "type": ["string"], "name": "repeat", "help": "The pattern repeat mode to use when drawing the line. Either `repeat`, `repeat-x` or `no-repeat`."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 1366, "public": true, "help": "Takes the given Line object and image and renders it to this BitmapData as a repeating texture line."}, {"name": "update", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "x", "help": "The x coordinate of the top-left of the image data area to grab from."}, {"default": "0", "optional": true, "type": ["number"], "name": "y", "help": "The y coordinate of the top-left of the image data area to grab from."}, {"default": null, "optional": true, "type": ["number"], "name": "width", "help": "The width of the image data area."}, {"default": null, "optional": true, "type": ["number"], "name": "height", "help": "The height of the image data area."}], "inheritedFrom": "", "private": false, "returns": {"help": "This BitmapData object for method chaining.", "types": ["Phaser.BitmapData"]}, "protected": false, "static": false, "inherited": false, "line": 361, "public": true, "help": "This re-creates the BitmapData.imageData from the current context.\\nIt then re-builds the ArrayBuffer, the data Uint8ClampedArray reference and the pixels Int32Array.\\nIf not given the dimensions defaults to the full size of the context."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactionManager", "default": null, "type": ["PIXI.InteractionManager"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "The interaction manage for this stage, manages all interactive activity on the stage"}, {"name": "interactive", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "Whether or not the stage is interactive"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": [{"name": "dirty", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "", "public": false, "help": "Whether the stage is dirty and needs to have interactions updated"}, {"name": "worldTransform", "default": null, "type": ["PIXI.Matrix"], "private": true, "readOnly": true, "protected": false, "line": 33, "inlineHelp": "", "public": false, "help": "[read-only] Current transform of the object based on world (parent) factors"}]}, "class": {"help": "A Stage represents the root of the display tree. Everything connected to the stage is rendered\\n\\nlike: 0xFFFFFF for white\\n\\nCreating a stage is a mandatory process when you use Pixi, which is as simple as this :\\nvar stage = new PIXI.Stage(0xFFFFFF);\\nwhere the parameter given is the background colour of the stage, in hex\\nyou will use this stage instance to add your sprites to it and therefore to the renderer\\nHere is how to add a sprite to the stage :\\nstage.addChild(sprite);", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "backgroundColor", "help": "the background color of the stage, you have to pass this in is in hex format"}], "static": false, "constructor": true, "extends": "PIXI.DisplayObjectContainer", "name": "PIXI.Stage"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getMousePosition", "parameters": [], "inheritedFrom": "PIXI.Stage", "private": false, "returns": {"help": "A point containing the coordinates of the global InteractionData position.", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 132, "public": true, "help": "This will return the point containing global coordinates of the mouse."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setBackgroundColor", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "backgroundColor", "help": "the color of the background, easiest way to pass this in is in hex format"}], "inheritedFrom": "PIXI.Stage", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 117, "public": true, "help": "Sets the background color for the stage\\n\\nlike: 0xFFFFFF for white"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setInteractionDelegate", "parameters": [{"default": null, "optional": false, "type": ["DOMElement"], "name": "domElement", "help": "This new domElement which will receive mouse/touch events"}], "inheritedFrom": "PIXI.Stage", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 80, "public": true, "help": "Sets another DOM element which can receive mouse/touch interactions instead of the default Canvas element.\\nThis is useful for when you have other DOM elements on top of the Canvas element."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "The context under which the callbacks are run.", "public": true, "help": ""}, {"name": "disabled", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "The disabled state of the Keyboard.", "public": true, "help": "You can disable all Keyboard Input by setting disabled to true. While true all new input related events will be ignored."}, {"name": "event", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 34, "inlineHelp": "The most recent DOM event from keydown or keyup. This is updated every time a new key is pressed or released.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "lastChar", "default": null, "type": ["string"], "private": false, "readOnly": true, "protected": false, "line": 526, "inlineHelp": "The string value of the most recently pressed key.", "public": true, "help": "Returns the string value of the most recently pressed key."}, {"name": "lastKey", "default": null, "type": ["Phaser.Key"], "private": false, "readOnly": true, "protected": false, "line": 549, "inlineHelp": "The most recently pressed Key.", "public": true, "help": "Returns the most recently pressed Key. This is a Phaser.Key object and it changes every time a key is pressed."}, {"name": "onDownCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "This callback is invoked every time a key is pressed down, including key repeats when a key is held down.", "public": true, "help": ""}, {"name": "onPressCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 54, "inlineHelp": "This callback is invoked every time a DOM onkeypress event is raised, which is only for printable keys.", "public": true, "help": ""}, {"name": "onUpCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "This callback is invoked every time a key is released.", "public": true, "help": ""}, {"name": "pressEvent", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "The most recent DOM event from keypress.", "public": true, "help": ""}], "private": [{"name": "_capture", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The array the key capture values are stored in.", "public": false, "help": ""}, {"name": "_i", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 98, "inlineHelp": "Internal cache var", "public": false, "help": ""}, {"name": "_k", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 104, "inlineHelp": "Internal cache var", "public": false, "help": ""}, {"name": "_keys", "default": null, "type": ["array Phaser.Key"], "private": true, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "The array the Phaser.Key objects are stored in.", "public": false, "help": ""}, {"name": "_onKeyDown", "default": "null", "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "", "public": false, "help": ""}, {"name": "_onKeyPress", "default": "null", "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": false, "help": ""}, {"name": "_onKeyUp", "default": "null", "type": ["function"], "private": true, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "The Keyboard class handles looking after keyboard input for your game.\\nIt will recognise and respond to key presses and dispatch the required events.\\nPlease be aware that lots of keyboards are unable to process certain combinations of keys due to hardware\\nlimitations known as ghosting. Full details here: http://www.html5gamedevs.com/topic/4876-impossible-to-use-more-than-2-keyboard-input-buttons-at-the-same-time/", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Keyboard"}, "consts": [], "methods": {"protected": [{"name": "processKeyDown", "parameters": [{"default": null, "optional": false, "type": ["KeyboardEvent"], "name": "event", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 341, "public": false, "help": "Process the keydown event."}, {"name": "processKeyPress", "parameters": [{"default": null, "optional": false, "type": ["KeyboardEvent"], "name": "event", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 379, "public": false, "help": "Process the keypress event."}, {"name": "processKeyUp", "parameters": [{"default": null, "optional": false, "type": ["KeyboardEvent"], "name": "event", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 402, "public": false, "help": "Process the keyup event."}], "static": [], "public": [{"name": "addCallbacks", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context under which the callbacks are run."}, {"default": "null", "optional": true, "type": ["function"], "name": "onDown", "help": "This callback is invoked every time a key is pressed down."}, {"default": "null", "optional": true, "type": ["function"], "name": "onUp", "help": "This callback is invoked every time a key is released."}, {"default": "null", "optional": true, "type": ["function"], "name": "onPress", "help": "This callback is invoked every time the onkeypress event is raised."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 119, "public": true, "help": "Add callbacks to the Keyboard handler so that each time a key is pressed down or released the callbacks are activated."}, {"name": "addKey", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": "The keycode of the key, i.e. Phaser.Keyboard.UP or Phaser.Keyboard.SPACEBAR"}], "inheritedFrom": "", "private": false, "returns": {"help": "The Key object which you can store locally and reference directly.", "types": ["Phaser.Key"]}, "protected": false, "static": false, "inherited": false, "line": 148, "public": true, "help": "If you need more fine-grained control over a Key you can create a new Phaser.Key object via this method.\\nThe Key object can then be polled, have events attached to it, etc."}, {"name": "addKeyCapture", "parameters": [{"default": null, "optional": false, "type": ["number", "array", "object"], "name": "keycode", "help": "Either a single numeric keycode or an array/hash of keycodes: [65, 67, 68]."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 277, "public": true, "help": "By default when a key is pressed Phaser will not stop the event from propagating up to the browser.\\nThere are some keys this can be annoying for, like the arrow keys or space bar, which make the browser window scroll.\\nYou can use addKeyCapture to consume the keyboard event for specific keys so it doesn't bubble up to the the browser.\\nPass in either a single keycode or an array/hash of keycodes."}, {"name": "clearCaptures", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 309, "public": true, "help": "Clear all set key captures."}, {"name": "createCursorKeys", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "An object containing properties: up, down, left and right. Which can be polled like any other Phaser.Key object.", "types": ["object"]}, "protected": false, "static": false, "inherited": false, "line": 184, "public": true, "help": "Creates and returns an object containing 4 hotkeys for Up, Down, Left and Right."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 257, "public": true, "help": "Stops the Keyboard event listeners from running (keydown and keyup). They are removed from the window.\\nAlso clears all key captures and currently created Key objects."}, {"name": "isDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": "The keycode of the key to remove, i.e. Phaser.Keyboard.UP or Phaser.Keyboard.SPACEBAR"}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key is currently down.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 507, "public": true, "help": "Returns true of the key is currently pressed down. Note that it can only detect key presses on the web browser."}, {"name": "justPressed", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": "The keycode of the key to remove, i.e. Phaser.Keyboard.UP or Phaser.Keyboard.SPACEBAR"}, {"default": "50", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the key is considered as being just pressed."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key is just pressed otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 462, "public": true, "help": "Returns the \"just pressed\" state of the key. Just pressed is considered true if the key was pressed down within the duration given (default 250ms)"}, {"name": "justReleased", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": "The keycode of the key to remove, i.e. Phaser.Keyboard.UP or Phaser.Keyboard.SPACEBAR"}, {"default": "50", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the key is considered as being just released."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the key is just released otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 485, "public": true, "help": "Returns the \"just released\" state of the Key. Just released is considered as being true if the key was released within the duration given (default 250ms)"}, {"name": "removeKey", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": "The keycode of the key to remove, i.e. Phaser.Keyboard.UP or Phaser.Keyboard.SPACEBAR"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 167, "public": true, "help": "Removes a Key object from the Keyboard manager."}, {"name": "removeKeyCapture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "keycode", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 298, "public": true, "help": "Removes an existing key capture."}, {"name": "reset", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "hard", "help": "A soft reset won't reset any events or callbacks that are bound to the Keys. A hard reset will."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 436, "public": true, "help": "Resets all Keys."}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 201, "public": true, "help": "Starts the Keyboard event listeners running (keydown and keyup). They are attached to the window.\\nThis is called automatically by Phaser.Input and should not normally be invoked directly."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 239, "public": true, "help": "Stops the Keyboard event listeners from running (keydown, keyup and keypress). They are removed from the window."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 320, "public": true, "help": "Updates all currently defined keys."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "ID", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": ""}, {"name": "emitters", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "Internal emitters store.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}], "private": []}, "class": {"help": "Phaser.Particles is the Particle Manager for the game. It is called during the game update loop and in turn updates any Emitters attached to it.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Particles"}, "consts": [], "methods": {"protected": [{"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 66, "public": false, "help": "Called by the core game loop. Updates all Emitters who have their exists value set to true."}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Emitter"], "name": "emitter", "help": "The emitter to be added to the particle manager."}], "inheritedFrom": "", "private": false, "returns": {"help": "The emitter that was added.", "types": ["Phaser.Emitter"]}, "protected": false, "static": false, "inherited": false, "line": 42, "public": true, "help": "Adds a new Particle Emitter to the Particle Manager."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Emitter"], "name": "emitter", "help": "The emitter to remove."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 55, "public": true, "help": "Removes an existing Particle Emitter from the Particle Manager."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "frames", "default": null, "type": ["array"], "private": false, "readOnly": true, "protected": false, "line": 34, "inlineHelp": "", "public": true, "help": "if the image is loaded with loadFramedSpriteSheet\\nframes will contain the sprite sheet frames"}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "The texture being loaded"}], "private": []}, "class": {"help": "The image loader class is responsible for loading images file formats ('jpeg', 'jpg', 'png' and 'gif')\\nOnce the image has been loaded it is stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrame() and PIXI.Sprite.fromFrame()\\nWhen loaded this class will dispatch a 'loaded' event", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "url", "help": "The url of the image"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": "Whether requests should be treated as crossorigin"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.ImageLoader"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "load", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 47, "public": true, "help": "Loads image or takes it from cache"}, {"name": "loadFramedSpriteSheet", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "frameWidth", "help": "width of each frame"}, {"default": null, "optional": false, "type": ["number"], "name": "frameHeight", "help": "height of each frame"}, {"default": null, "optional": false, "type": ["string"], "name": "textureName", "help": "if given, the frames will be cached in <textureName>-<ord> format"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 78, "public": true, "help": "Loads image and split it to uniform sized frames"}], "private": [{"name": "onLoaded", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 65, "public": false, "help": "Invoked when image file is loaded or it is already cached and ready to use"}]}}, {"properties": {"protected": [], "public": [{"name": "alive", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.", "public": true, "help": ""}, {"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1814, "inlineHelp": "The angle of rotation given in degrees, where 0 degrees = to the right.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "body", "default": null, "type": ["Phaser.Physics.P2.Body"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "The P2 Body to display debug data for.", "public": true, "help": ""}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "cameraOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 116, "inlineHelp": "If this object is fixedToCamera then this stores the x/y offset that its drawn at, from the top-left of the camera view.", "public": true, "help": ""}, {"name": "canvas", "default": null, "type": ["Phaser.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "The canvas to render the debug info to.", "public": true, "help": ""}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "classType", "default": "Phaser.Sprite", "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": "The type of objects that will be created when you use Group.create or Group.createMultiple. Defaults to Phaser.Sprite.\\nWhen a new object is created it is passed the following parameters to its constructor: game, x, y, key, frame."}, {"name": "cursor", "default": null, "type": ["any"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "The current display object that the Group cursor is pointing to.", "public": true, "help": "The cursor is a simple way to iterate through the objects in a Group using the Group.next and Group.previous functions.\\nThe cursor is set to the first child added to the Group and doesn't change unless you call next, previous or set it directly with Group.cursor."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "enableBody", "default": "enableBody", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "If true all Sprites created by, or added to this Group, will have a physics body enabled on them. Change the body type with `Group.physicsBodyType`.", "public": true, "help": ""}, {"name": "enableBodyDebug", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "If true when a physics body is created (via Group.enableBody) it will create a physics debug object as well. Only works for P2 bodies.", "public": true, "help": ""}, {"name": "exists", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "If exists is true the Group is updated, otherwise it is skipped.", "public": true, "help": ""}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "fixedToCamera", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1834, "inlineHelp": "Set to true to fix this Group to the Camera at its current world coordinates.", "public": true, "help": "A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\\nNote that the cameraOffset values are in addition to any parent in the display list.\\nSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x"}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "A reference to the currently running Game.", "public": true, "help": ""}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "ignoreDestroy", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 83, "inlineHelp": "A Group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.", "public": true, "help": ""}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "length", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1798, "inlineHelp": "The total number of children in this Group, regardless of their exists/alive status.", "public": true, "help": ""}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "A name for this Group. Not used internally but useful for debugging.", "public": true, "help": ""}, {"name": "onDestroy", "default": null, "type": ["Phaser.Signal"], "private": false, "readOnly": false, "protected": false, "line": 137, "inlineHelp": "This signal is dispatched when the parent is destoyed.", "public": true, "help": ""}, {"name": "parent", "default": null, "type": ["Phaser.Group", "Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 96, "inlineHelp": "The parent of this Group.", "public": true, "help": ""}, {"name": "physicsBodyType", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "If Group.enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.", "public": true, "help": ""}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "The pivot point of the Group container.", "public": true, "help": ""}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "ppu", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 40, "inlineHelp": "Pixels per Length Unit.", "public": true, "help": ""}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1879, "inlineHelp": "The angle of rotation given in radians.", "public": true, "help": "The angle of rotation of the Group container. This will adjust the Group container itself by modifying its rotation.\\nThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "The scale of the Group container.", "public": true, "help": ""}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 1783, "inlineHelp": "The total number of children in this Group who have a state of exists = true.", "public": true, "help": ""}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 1884, "inlineHelp": "The visible state of the Group. Non-visible Groups and all of their children are not rendered.", "public": true, "help": ""}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1865, "inlineHelp": "The x coordinate of the Group container.", "public": true, "help": "The x coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 1872, "inlineHelp": "The y coordinate of the Group container.", "public": true, "help": "The y coordinate of the Group container. You can adjust the Group container itself by modifying its coordinates.\\nThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position."}, {"name": "z", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "The z-depth value of this object within its Group (remember the World is a Group as well). No two objects in a Group can have the same z value.", "public": true, "help": ""}], "private": [{"name": "defaultSettings", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "Default debug settings.", "public": false, "help": ""}]}, "class": {"help": "Draws a P2 Body to a Graphics instance for visual debugging.\\nNeedless to say, for every body you enable debug drawing on, you are adding processor and graphical overhead.\\nSo use sparingly and rarely (if ever) in production code.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Game reference to the currently running game."}, {"default": null, "optional": false, "type": ["Phaser.Physics.P2.Body"], "name": "body", "help": "The P2 Body to display debug data for."}, {"default": null, "optional": false, "type": ["object"], "name": "settings", "help": "Settings object."}], "static": false, "constructor": true, "extends": "Phaser.Group", "name": "Phaser.Physics.P2.BodyDebug"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 209, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is automatically added to the top of the Group, so renders on-top of everything else within the Group. If you need to control\\nthat then see the addAt method."}, {"name": "addAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to increment, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 956, "public": true, "help": "Adds the amount to the given property on all children in this Group.\\nGroup.addAll('x', 10) will add 10 to the child.x value."}, {"name": "addAt", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "An instance of Phaser.Sprite, Phaser.Button or any other display object.."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index within the Group to insert the child to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 273, "public": true, "help": "Adds an existing object to this Group. The object can be an instance of Phaser.Sprite, Phaser.Button or any other display object.\\nThe child is added to the Group at the location specified by the index value, this allows you to control child ordering."}, {"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "addMultiple", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "children", "help": "An array containing instances of Phaser.Sprite, Phaser.Button or any other display object."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch the onAddedToGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The array of children that were added to the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 249, "public": true, "help": "Adds an array existing objects to this Group. The objects can be instances of Phaser.Sprite, Phaser.Button or any other display object.\\nThe children are automatically added to the top of the Group, so render on-top of everything else within the Group.\\nTODO: Add ability to pass the children as parameters rather than having to be an array."}, {"name": "ascendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1385, "public": true, "help": "An internal helper function for the sort process."}, {"name": "bringToTop", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to bring to the top of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 509, "public": true, "help": "Brings the given child to the top of this Group so it renders above all other children."}, {"name": "callAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "method", "help": "A string containing the name of the function that will be called. The function must exist on the child."}, {"default": "null", "optional": true, "type": ["string"], "name": "context", "help": "A string containing the context under which the method will be executed. Set to null to default to the child."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the method."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1095, "public": true, "help": "Calls a function on all of the children regardless if they are dead or alive (see callAllExists if you need control over that)\\nAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child."}, {"name": "callAllExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that exists on the children that will be called."}, {"default": null, "optional": false, "type": ["boolean"], "name": "existsValue", "help": "Only children with exists=existsValue will be called."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the callback."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1019, "public": true, "help": "Calls a function on all of the children that have exists=true in this Group.\\nAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback."}, {"name": "checkAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be checked. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 925, "public": true, "help": "This function allows you to quickly check that the same property across all children of this Group is equal to the given value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be checked on the Group but not its children."}, {"name": "checkProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be checked."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was was equal to value, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 790, "public": true, "help": "Checks a property for the given value on the child."}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "componentToHex", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 410, "public": true, "help": "Component to hex conversion."}, {"name": "countDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as dead.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1582, "public": true, "help": "Call this function to find out how many members of the group are dead."}, {"name": "countLiving", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The number of children flagged as alive.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 1570, "public": true, "help": "Call this function to find out how many members of the group are alive."}, {"name": "create", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to display the newly created Sprite at. The value is in relation to the Group.x point."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to display the newly created Sprite at. The value is in relation to the Group.y point."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was created. Will be a Phaser.Sprite unless Group.classType has been changed.", "types": ["Phaser.Sprite", "object"]}, "protected": false, "static": false, "inherited": true, "line": 335, "public": true, "help": "Automatically creates a new Phaser.Sprite object and adds it to the top of this Group.\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "createMultiple", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "quantity", "help": "The number of Sprites to create."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The Game.cache key of the image that this Sprite will use."}, {"default": null, "optional": true, "type": ["number", "string"], "name": "frame", "help": "If the Sprite image contains multiple frames you can specify which one to use here."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "exists", "help": "The default exists state of the Sprite."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 380, "public": true, "help": "Automatically creates multiple Phaser.Sprite objects and adds them to the top of this Group.\\nUseful if you need to quickly generate a pool of identical sprites, such as bullets. By default the sprites will be set to not exist\\nand will be positioned at 0, 0 (relative to the Group.x/y)\\nYou can change Group.classType to any object and this call will create an object of that type instead, but it should extend either Sprite or Image."}, {"name": "customSort", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "sortHandler", "help": "Your sort handler function. It will be sent two parameters: the two children involved in the comparison. It must return -1, 1 or 0."}, {"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The scope in which the sortHandler is called."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1364, "public": true, "help": "This allows you to use your own sort handler function.\\nIt will be sent two parameters: the two children involved in the comparison (a and b). It should return -1 if a > b, 1 if a < b or 0 if a === b."}, {"name": "descendingSortHandler", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "a", "help": "The first object being sorted."}, {"default": null, "optional": false, "type": ["object"], "name": "b", "help": "The second object being sorted."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1416, "public": true, "help": "An internal helper function for the sort process."}, {"name": "destroy", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "destroyChildren", "help": "Should every child of this Group have its destroy method called?"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "soft", "help": "A 'soft destroy' (set to true) doesn't remove this Group from its parent or null the game reference. Set to false and it does."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1751, "public": true, "help": "Destroys this Group. Removes all children, then removes the container from the display list and nulls references."}, {"name": "divideAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to divide, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1004, "public": true, "help": "Divides the given property by the amount on all children in this Group.\\nGroup.divideAll('x', 2) will half the child.x value."}, {"name": "draw", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 162, "public": true, "help": "Draws the P2 shapes to the Graphics object."}, {"name": "drawCircle", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 196, "public": true, "help": "Draws a P2 Line shape."}, {"name": "drawConvex", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 212, "public": true, "help": "Draws a P2 Convex shape."}, {"name": "drawPath", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 282, "public": true, "help": "Draws a P2 Path."}, {"name": "drawPlane", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 352, "public": true, "help": "Draws a P2 Plane shape."}, {"name": "filter", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "predicate", "help": "The function that each child will be evaluated against. Each child of the Group will be passed to it as its first parameter, the index as the second, and the entire child array as the third"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns an array list containing all the children that the predicate returned true for", "types": ["Phaser.ArrayList"]}, "protected": false, "static": false, "inherited": true, "line": 1223, "public": true, "help": "Allows you to obtain a Phaser.ArrayList of children that return true for the given predicate\\nFor example:\\nvar healthyList = Group.filter(function(child, index, children) {\\nreturn child.health > 10 ? true : false;\\n}, true);\\nhealthyList.callAll('attack');\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEach", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkExists", "help": "If set only children with exists=true will be passed to the callback, otherwise all children will be passed."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1250, "public": true, "help": "Allows you to call your own function on each member of this Group. You must pass the callback and context in which it will run.\\nAfter the checkExists parameter you can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEach(awardBonusGold, this, true, 100, 500)\\nNote: Currently this will skip any children which are Groups themselves."}, {"name": "forEachAlive", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1295, "public": true, "help": "Allows you to call your own function on each alive member of this Group (where child.alive=true). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachAlive(causeDamage, this, 500)"}, {"name": "forEachDead", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1313, "public": true, "help": "Allows you to call your own function on each dead member of this Group (where alive=false). You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachDead(bringToLife, this)"}, {"name": "forEachExists", "parameters": [{"default": null, "optional": false, "type": ["function"], "name": "callback", "help": "The function that will be called. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": false, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1277, "public": true, "help": "Allows you to call your own function on each member of this Group where child.exists=true. You must pass the callback and context in which it will run.\\nYou can add as many parameters as you like, which will all be passed to the callback along with the child.\\nFor example: Group.forEachExists(causeDamage, this, 500)"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to return the child from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was found at the given index. If the index was out of bounds then this will return -1.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 310, "public": true, "help": "Returns the child found at the given index within this Group."}, {"name": "getBottom", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the bottom of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1555, "public": true, "help": "Returns the child at the bottom of this Group. The bottom is the one being displayed (rendered) below every other child."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getFirstAlive", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first alive child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1515, "public": true, "help": "Call this function to retrieve the first object with alive === true in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstDead", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first dead child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1528, "public": true, "help": "Call this function to retrieve the first object with alive === false in the group.\\nThis is handy for checking if everything has been wiped out, or choosing a squad leader, etc."}, {"name": "getFirstExists", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "state", "help": "True or false."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The first child, or null if none found.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1497, "public": true, "help": "Call this function to retrieve the first object with exists == (the given state) in the Group."}, {"name": "getIndex", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to get the index for."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The index of the child or -1 if it's not a member of this Group.", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 629, "public": true, "help": "Get the index position of the given child in this Group. This should always match the childs z property."}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "getRandom", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "Optional offset off the front of the array. Default value is 0, or the beginning of the array."}, {"default": null, "optional": false, "type": ["number"], "name": "length", "help": "Optional restriction on the number of values you want to randomly select from."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "A random child of this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1596, "public": true, "help": "Returns a member at random from the group."}, {"name": "getTop", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child at the top of the Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1540, "public": true, "help": "Returns the child at the top of this Group. The top is the one being displayed (rendered) above every other child."}, {"name": "hasProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to check for the existance of the property on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the child has the property, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 679, "public": true, "help": "Checks if the child has the given property. Will scan up to 4 levels deep only."}, {"name": "iterate", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The child property to check, i.e. 'exists', 'alive', 'health'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "If child.key === this value it will be considered a match. Note that a strict comparison is used."}, {"default": null, "optional": false, "type": ["number"], "name": "returnType", "help": "How to return the data from this method. Either Phaser.Group.RETURN_NONE, Phaser.Group.RETURN_TOTAL or Phaser.Group.RETURN_CHILD."}, {"default": "null", "optional": true, "type": ["function"], "name": "callback", "help": "Optional function that will be called on each matching child. Each child of the Group will be passed to it as its first parameter."}, {"default": null, "optional": true, "type": ["object"], "name": "callbackContext", "help": "The context in which the function should be called (usually 'this')."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns either a numeric total (if RETURN_TOTAL was specified) or the child object.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 1446, "public": true, "help": "Iterates over the children of the Group. When a child has a property matching key that equals the given value, it is considered as a match.\\nMatched children can be sent to the optional callback, or simply returned or counted.\\nYou can add as many callback parameters as you like, which will all be passed to the callback along with the child, after the callbackContext parameter."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "moveDown", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move down in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 571, "public": true, "help": "Moves the given child down one place in this Group unless it's already at the top."}, {"name": "moveUp", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to move up in the Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 547, "public": true, "help": "Moves the given child up one place in this Group unless it's already at the top."}, {"name": "multiplyAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to multiply, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 988, "public": true, "help": "Multiplies the given property by the amount on all children in this Group.\\nGroup.multiplyAll('x', 2) will x2 the child.x value."}, {"name": "next", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 439, "public": true, "help": "Advances the Group cursor to the next object in the Group. If it's at the end of the Group it wraps around to the first object."}, {"name": "previous", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 466, "public": true, "help": "Moves the Group cursor to the previous object in the Group. If it's at the start of the Group it wraps around to the last object."}, {"name": "randomPastelHex", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 379, "public": true, "help": "Picks a random pastel color."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to remove."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the child will not dispatch the onRemovedFromGroup event."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "true if the child was removed from this Group, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 1620, "public": true, "help": "Removes the given child from this Group. This will dispatch an onRemovedFromGroup event from the child (if it has one),\\nreset the Group cursor and optionally destroy the child."}, {"name": "removeAll", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on each child that is removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1661, "public": true, "help": "Removes all children from this Group, setting the group properties of the children to `null`.\\nThe Group container remains on the display list."}, {"name": "removeBetween", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": "The index to start removing children from."}, {"default": null, "optional": true, "type": ["number"], "name": "endIndex", "help": "The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "destroy", "help": "You can optionally call destroy on the child that was removed."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "silent", "help": "If the silent parameter is `true` the children will not dispatch their onRemovedFromGroup events."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1700, "public": true, "help": "Removes all children from this Group whos index falls beteen the given startIndex and endIndex values."}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "replace", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "oldChild", "help": "The child in this Group that will be replaced."}, {"default": null, "optional": false, "type": ["any"], "name": "newChild", "help": "The child to be inserted into this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "Returns the oldChild that was replaced within this Group.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 643, "public": true, "help": "Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group."}, {"name": "resetCursor", "parameters": [{"default": "0", "optional": true, "type": ["number"], "name": "index", "help": "Set the cursor to point to a specific index."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child the cursor now points to.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 415, "public": true, "help": "Sets the Group cursor to the first object in the Group. If the optional index parameter is given it sets the cursor to the object at that index instead."}, {"name": "reverse", "parameters": [], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 615, "public": true, "help": "Reverses all children in this Group. Note that this does not propagate, only direct children are re-ordered."}, {"name": "rgbToHex", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 401, "public": true, "help": "Converts from RGB to Hex."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "sendToBack", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to send to the bottom of this Group."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "The child that was moved.", "types": ["any"]}, "protected": false, "static": false, "inherited": true, "line": 528, "public": true, "help": "Sends the given child to the bottom of this Group so it renders below all other children."}, {"name": "set", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "child", "help": "The child to set the property on."}, {"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then the child will only be updated if alive=true."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then the child will only be updated if visible=true."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 823, "public": true, "help": "This function allows you to quickly set a property on a single child of this Group to a new value.\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 854, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group to a new value.\\nThis call doesn't descend down children, so if you have a Group inside of this Group, the property will be set on the Group but not its children.\\nIf you need that ability please see `Group.setAllChildren`.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setAllChildren", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The property, as a string, to be set. For example: 'body.velocity.x'"}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkAlive", "help": "If set then only children with alive=true will be updated. This includes any Groups that are children."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "checkVisible", "help": "If set then only children with visible=true will be updated. This includes any Groups that are children."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 889, "public": true, "help": "This function allows you to quickly set the same property across all children of this Group, and any child Groups, to a new value.\\n\\nIf this Group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\\nUnlike with Group.setAll the property is NOT set on child Groups itself.\\n\\nThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication."}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setProperty", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child", "help": "The child to set the property value on."}, {"default": null, "optional": false, "type": ["array"], "name": "key", "help": "An array of strings that make up the property that will be set."}, {"default": null, "optional": false, "type": ["any"], "name": "value", "help": "The value that will be set."}, {"default": "0", "optional": true, "type": ["number"], "name": "operation", "help": "Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "force", "help": "If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": {"help": "True if the property was set, false if not.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": true, "line": 720, "public": true, "help": "Sets a property to the given value on the child. The operation parameter controls how the value is set.\\nOperation 0 means set the existing value to the given value, or if force is `false` create a new property with the given value.\\n1 will add the given value to the value already present.\\n2 will subtract the given value from the value already present.\\n3 will multiply the value already present by the given value.\\n4 will divide the value already present by the given value."}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "sort", "parameters": [{"default": "'z'", "optional": true, "type": ["string"], "name": "index", "help": "The `string` name of the property you want to sort on. Defaults to the objects z-depth value."}, {"default": "Phaser.Group.SORT_ASCENDING", "optional": true, "type": ["number"], "name": "order", "help": "The `Group` constant that defines the sort order. Possible values are Phaser.Group.SORT_ASCENDING and Phaser.Group.SORT_DESCENDING."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 1330, "public": true, "help": "Call this function to sort the group according to a particular value and order.\\nFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`."}, {"name": "subAll", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "property", "help": "The property to decrement, for example 'body.velocity.x' or 'angle'."}, {"default": null, "optional": false, "type": ["number"], "name": "amount", "help": "The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkAlive", "help": "If true the property will only be changed if the child is alive."}, {"default": null, "optional": false, "type": ["boolean"], "name": "checkVisible", "help": "If true the property will only be changed if the child is visible."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 972, "public": true, "help": "Subtracts the amount from the given property on all children in this Group.\\nGroup.subAll('x', 10) will minus 10 from the child.x value."}, {"name": "swap", "parameters": [{"default": null, "optional": false, "type": ["any"], "name": "child1", "help": "The first child to swap."}, {"default": null, "optional": false, "type": ["any"], "name": "child2", "help": "The second child to swap."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 495, "public": true, "help": "Swaps the position of two children in this Group. Both children must be in this Group.\\nYou cannot swap a child with itself, or swap un-parented children."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 71, "public": true, "help": "Core update."}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}, {"name": "updateSpriteTransform", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 82, "public": true, "help": "Core update."}, {"name": "xy", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the child in the Group to set the position of."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The new x position of the child."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The new y position of the child."}], "inheritedFrom": "Phaser.Group", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 596, "public": true, "help": "Positions the child found at the given index within this Group to the given x and y coordinates."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": [{"name": "allFixtures", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 59, "inlineHelp": "This is a list of everything in this collection", "public": false, "help": ""}, {"name": "groupedFixtures", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "Collect all given fixtures per group index. Notice: Every fixture with a key also belongs to a group", "public": false, "help": ""}, {"name": "namedFixtures", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 47, "inlineHelp": "Collect all fixtures with a key", "public": false, "help": ""}]}, "class": {"help": "Allow to access a list of created fixture (coming from Body#addPhaserPolygon)\\nwhich itself parse the input from PhysicsEditor with the custom phaser exporter.\\nYou can access fixtures of a Body by a group index or even by providing a fixture Key.\\n\\nYou can set the fixture key and also the group index for a fixture in PhysicsEditor.\\nThis gives you the power to create a complex body built of many fixtures and modify them\\nduring runtime (to remove parts, set masks, categories & sensor properties)", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "list", "help": "A list of fixtures (from Phaser.Physics.P2.Body#addPhaserPolygon)"}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.FixtureList"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "flatten", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "array", "help": "The array to flatten. Notice: This will happen recursive not shallow."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 218, "public": true, "help": "A helper to flatten arrays. This is very useful as the fixtures are nested from time to time due to the way P2 creates and splits polygons."}, {"name": "getFixtureByKey", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key of the fixture."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 164, "public": true, "help": "Accessor to get either a single fixture by its key."}, {"name": "getFixtures", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "keys", "help": "A list of fixture keys"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 129, "public": true, "help": "Accessor to get either a list of specified fixtures by key or the whole fixture list"}, {"name": "getGroup", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "groupID", "help": "The group index."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 176, "public": true, "help": "Accessor to get a group of fixtures by its group index."}, {"name": "init", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 41, "public": true, "help": ""}, {"name": "parse", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 187, "public": true, "help": "Parser for the output of Phaser.Physics.P2.Body#addPhaserPolygon"}, {"name": "setCategory", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "bit", "help": "The bit to set as the collision group."}, {"default": null, "optional": false, "type": ["string"], "name": "fixtureKey", "help": "Only apply to the fixture with the given key."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 68, "public": true, "help": ""}, {"name": "setMask", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "bit", "help": "The bit to set as the collision mask"}, {"default": null, "optional": false, "type": ["string"], "name": "fixtureKey", "help": "Only apply to the fixture with the given key"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 83, "public": true, "help": ""}, {"name": "setMaterial", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "material", "help": "The contact material for a fixture"}, {"default": null, "optional": false, "type": ["string"], "name": "fixtureKey", "help": "Only apply to the fixture with the given key"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 113, "public": true, "help": ""}, {"name": "setSensor", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "value", "help": "sensor true or false"}, {"default": null, "optional": false, "type": ["string"], "name": "fixtureKey", "help": "Only apply to the fixture with the given key"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 98, "public": true, "help": ""}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "A set of functions used to handle masking.", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.CanvasMaskManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "popMask", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": "The renderSession whose context will be used for this mask manager."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 55, "public": true, "help": "Restores the current drawing context to the state it was before the mask was applied."}, {"name": "pushMask", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "maskData", "help": "the maskData that will be pushed"}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": "The renderSession whose context will be used for this mask manager."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 24, "public": true, "help": "This method adds it to the current stack of masks."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "current", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 67, "inlineHelp": "The current active State object (defaults to null).", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "onCreateCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 82, "inlineHelp": "This is called when the state preload has finished and creation begins.", "public": true, "help": ""}, {"name": "onInitCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 72, "inlineHelp": "This is called when the state is set as the active state.", "public": true, "help": ""}, {"name": "onLoadRenderCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 112, "inlineHelp": "This is called when the State is rendered during the preload phase.", "public": true, "help": ""}, {"name": "onLoadUpdateCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 107, "inlineHelp": "This is called when the State is updated during the preload phase.", "public": true, "help": ""}, {"name": "onPauseUpdateCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 127, "inlineHelp": "This is called every frame while the game is paused.", "public": true, "help": ""}, {"name": "onPausedCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "This is called when the game is paused.", "public": true, "help": ""}, {"name": "onPreRenderCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 102, "inlineHelp": "This is called before the state is rendered and before the stage is cleared.", "public": true, "help": ""}, {"name": "onPreloadCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "This is called when the state starts to load assets.", "public": true, "help": ""}, {"name": "onRenderCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 92, "inlineHelp": "This is called post-render. It doesn't happen during preload (see onLoadRenderCallback).", "public": true, "help": ""}, {"name": "onResizeCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "This is called if ScaleManager.scalemode is RESIZE and a resize event occurs. It's passed the new width and height.", "public": true, "help": ""}, {"name": "onResumedCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 122, "inlineHelp": "This is called when the game is resumed from a paused state.", "public": true, "help": ""}, {"name": "onShutDownCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "This is called when the state is shut down (i.e. swapped to another state).", "public": true, "help": ""}, {"name": "onUpdateCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "This is called when the state is updated, every game loop. It doesn't happen during preload (@see onLoadUpdateCallback).", "public": true, "help": ""}, {"name": "states", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 27, "inlineHelp": "The object containing Phaser.States.", "public": true, "help": ""}], "private": [{"name": "_args", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "Temporary container when you pass vars from one State to another.", "public": false, "help": ""}, {"name": "_clearCache", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 50, "inlineHelp": "Clear the cache when we switch state?", "public": false, "help": ""}, {"name": "_clearWorld", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "Clear the world when we switch state?", "public": false, "help": ""}, {"name": "_created", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "Flag that sets if the State has been created or not.", "public": false, "help": ""}, {"name": "_pendingState", "default": null, "type": ["Phaser.State"], "private": true, "readOnly": false, "protected": false, "line": 33, "inlineHelp": "The state to be switched to in the next frame.", "public": false, "help": ""}]}, "class": {"help": "The State Manager is responsible for loading, setting up and switching game states.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "A reference to the currently running game."}, {"default": "null", "optional": true, "type": ["Phaser.State", "object"], "name": "pendingState", "help": "A State object to seed the manager with."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.StateManager"}, "consts": [], "methods": {"protected": [{"name": "link", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "State key."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 458, "public": false, "help": "Links game properties to the State given by the key."}, {"name": "loadComplete", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 578, "public": false, "help": ""}, {"name": "pause", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 599, "public": false, "help": ""}, {"name": "pauseUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 645, "public": false, "help": ""}, {"name": "preRender", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 665, "public": false, "help": ""}, {"name": "render", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 691, "public": false, "help": ""}, {"name": "resize", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 678, "public": false, "help": ""}, {"name": "resume", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 612, "public": false, "help": ""}, {"name": "unlink", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "State key."}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 488, "public": false, "help": "Nulls all State level Phaser properties, including a reference to Game."}, {"name": "update", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 625, "public": false, "help": ""}], "static": [], "public": [{"name": "add", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "A unique key you use to reference this state, i.e. \"MainMenu\", \"Level1\"."}, {"default": null, "optional": false, "type": ["Phaser.State", "object", "function"], "name": "state", "help": "  - The state you want to switch to."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "autoStart", "help": "  - If true the State will be started immediately after adding it."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 171, "public": true, "help": "Adds a new State into the StateManager. You must give each State a unique key by which you'll identify it.\\nThe State can be either a Phaser.State object (or an object that extends it), a plain JavaScript object or a function.\\nIf a function is given a new state object will be created by calling it."}, {"name": "checkState", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key of the state you want to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "true if the State has the required functions, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 422, "public": true, "help": "Checks if a given phaser state is valid. A State is considered valid if it has at least one of the core functions: preload, create, update or render."}, {"name": "clearCurrentState", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 371, "public": true, "help": "This method clears the current State, calling its shutdown callback. The process also removes any active tweens,\\nresets the camera, resets input, clears physics, removes timers and if set clears the world and cache too."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 723, "public": true, "help": "Removes all StateManager callback references to the State object, nulls the game reference and clears the States object.\\nYou don't recover from this without rebuilding the Phaser instance again."}, {"name": "getCurrentState", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": false, "inherited": false, "line": 570, "public": true, "help": "Gets the current State."}, {"name": "preUpdate", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 311, "public": true, "help": "preUpdate is called right at the start of the game loop. It is responsible for changing to a new state that was requested previously."}, {"name": "remove", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "A unique key you use to reference this state, i.e. \"MainMenu\", \"Level1\"."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 214, "public": true, "help": "Delete the given state."}, {"name": "restart", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "clearWorld", "help": "Clear everything in the world? This clears the World display list fully (but not the Stage, so if you've added your own objects to the Stage they will need managing directly)"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "clearCache", "help": "Clear the Game.Cache? This purges out all loaded assets. The default is false and you must have clearWorld=true if you want to clearCache as well."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the State.init function if it has one."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 281, "public": true, "help": "Restarts the current State. State.shutDown will be called (if it exists) before the State is restarted."}, {"name": "start", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "The key of the state you want to start."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "clearWorld", "help": "Clear everything in the world? This clears the World display list fully (but not the Stage, so if you've added your own objects to the Stage they will need managing directly)"}, {"default": "false", "optional": true, "type": ["boolean"], "name": "clearCache", "help": "Clear the Game.Cache? This purges out all loaded assets. The default is false and you must have clearWorld=true if you want to clearCache as well."}, {"default": null, "optional": false, "type": ["any"], "name": "parameter", "help": "Additional parameters that will be passed to the State.init function (if it has one)."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 248, "public": true, "help": "Start the given State. If a State is already running then State.shutDown will be called (if it exists) before switching to the new State."}], "private": [{"name": "boot", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 143, "public": false, "help": "The Boot handler is called by Phaser.Game when it first starts up."}, {"name": "dummy", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 303, "public": false, "help": "Used by onInit and onShutdown when those functions don't exist on the state"}, {"name": "setCurrentState", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "key", "help": "State key."}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 521, "public": false, "help": "Sets the current State. Should not be called directly (use StateManager.start)"}]}}, {"properties": {"protected": [], "public": [{"name": "data", "default": null, "type": ["p2.RotationalSpring"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "The actual p2 spring object.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "Creates a rotational spring, connecting two bodies. A spring can have a resting length, a stiffness and damping.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": null, "optional": true, "type": ["number"], "name": "restAngle", "help": "The relative angle of bodies at which the spring is at rest. If not given, it's set to the current relative angle between the bodies."}, {"default": "100", "optional": true, "type": ["number"], "name": "stiffness", "help": "Stiffness of the spring. A number >= 0."}, {"default": "1", "optional": true, "type": ["number"], "name": "damping", "help": "Damping of the spring. A number >= 0."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.RotationalSpring"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "world", "default": null, "type": ["Phaser.Physics.P2"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "Local reference to P2 World.", "public": true, "help": ""}], "private": []}, "class": {"help": "Connects two bodies at given offset points, letting them rotate relative to each other around this point.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Physics.P2"], "name": "world", "help": "A reference to the P2 World."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyA", "help": "First connected body."}, {"default": null, "optional": false, "type": ["p2.Body"], "name": "bodyB", "help": "Second connected body."}, {"default": "0", "optional": true, "type": ["number"], "name": "angle", "help": "The relative angle"}, {"default": "1", "optional": true, "type": ["number"], "name": "ratio", "help": "The gear ratio."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.GearConstraint"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "anchor", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "", "public": true, "help": "The anchor sets the origin point of the texture.\\nThe default is 0,0 this means the texture's origin is the top left\\nSetting than anchor to 0.5,0.5 means the textures origin is centered\\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner"}, {"name": "blendMode", "default": "PIXI.blendModes.NORMAL;", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The blend mode to be applied to the sprite"}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "", "public": true, "help": "The height of the TilingSprite, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "", "public": true, "help": "Whether this sprite is renderable or not"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "shader", "default": "null", "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 84, "inlineHelp": "", "public": true, "help": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "texture", "default": null, "type": ["PIXI.Texture"], "private": false, "readOnly": false, "protected": false, "line": 39, "inlineHelp": "", "public": true, "help": "The texture that the sprite is using"}, {"name": "tilePosition", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": true, "help": "The offset position of the image that is being tiled"}, {"name": "tileScale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": "The scaling of the image that is being tiled"}, {"name": "tileScaleOffset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 49, "inlineHelp": "", "public": true, "help": "A point that represents the scale of the texture object"}, {"name": "tint", "default": "0xFFFFFF", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "", "public": true, "help": "The tint applied to the sprite. This is a hex value"}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 101, "inlineHelp": "", "public": true, "help": "The width of the sprite, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": []}, "class": {"help": "A tiling sprite is a fast way of rendering a tiling image", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "the texture of the tiling sprite"}, {"default": null, "optional": false, "type": ["number"], "name": "width", "help": " the width of the tiling sprite"}, {"default": null, "optional": false, "type": ["number"], "name": "height", "help": "the height of the tiling sprite"}], "static": false, "constructor": true, "extends": "PIXI.Sprite", "name": "PIXI.TilingSprite"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "fromFrame", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "frameId", "help": "The frame Id of the texture in the cache"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the frameId", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 429, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\\nThe frame ids are created when a Texture packer file has been loaded"}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageId", "help": "The image url of the texture"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A new Sprite using a texture from the texture cache matching the image id", "types": ["PIXI.Sprite"]}, "protected": false, "static": true, "inherited": true, "line": 446, "public": true, "help": "\\nHelper function that creates a sprite that will contain a texture based on an image url\\nIf the image is not in the texture cache it will be loaded"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "generateTilingTexture", "parameters": [{"default": null, "optional": false, "type": ["boolean"], "name": "forcePowerOfTwo", "help": "Whether we want to force the texture to be a power of two"}], "inheritedFrom": "PIXI.TilingSprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 379, "public": true, "help": ""}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.TilingSprite", "private": false, "returns": {"help": "the framing rectangle", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 286, "public": true, "help": "Returns the framing rectangle of the sprite as a PIXI.Rectangle object"}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "setTexture", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": "The PIXI texture that is displayed by the sprite"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 142, "public": true, "help": "Sets the texture of the sprite"}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 201, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 144, "public": false, "help": "Renders the object using the WebGL renderer"}, {"name": "onTextureUpdate", "parameters": [{"default": null, "optional": false, "type": [], "name": null, "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 367, "public": false, "help": "When the texture is updated, this event will fire to update the scale and frame"}]}}, {"properties": {"protected": [], "public": [{"name": "columns", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 76, "inlineHelp": "The number of columns in the tile sheet.", "public": true, "help": ""}, {"name": "firstgid", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "The Tiled firstgid value. In non-Tiled data this should be considered the starting index value of the first tile in this set.", "public": true, "help": ""}, {"name": "image", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 66, "inlineHelp": "The image used for rendering. This is a reference to the image stored in Phaser.Cache.", "public": true, "help": ""}, {"name": "name", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 31, "inlineHelp": "The name of the Tileset.", "public": true, "help": ""}, {"name": "properties", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 61, "inlineHelp": "Tileset specific properties (typically defined in the Tiled editor).", "public": true, "help": ""}, {"name": "rows", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 71, "inlineHelp": "The number of rows in the tile sheet.", "public": true, "help": ""}, {"name": "tileHeight", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "The height of a tile in pixels.", "public": true, "help": ""}, {"name": "tileMargin", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "The margin around the tiles in the tileset.", "public": true, "help": ""}, {"name": "tileSpacing", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 56, "inlineHelp": "The spacing in pixels between each tile in the tileset.", "public": true, "help": ""}, {"name": "tileWidth", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "The width of a tile in pixels.", "public": true, "help": ""}, {"name": "total", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "The total number of tiles in the tilesheet.", "public": true, "help": ""}], "private": [{"name": "draw", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "The tile drawImage look-up table", "public": false, "help": ""}]}, "class": {"help": "A Tile set is a combination of an image containing the tiles and collision data per tile.\\nYou should not normally instantiate this class directly.", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "name", "help": "The name of the tileset in the map data."}, {"default": null, "optional": false, "type": ["number"], "name": "firstgid", "help": "The Tiled firstgid value. In non-Tiled data this should be considered the starting index value of the first tile in this set."}, {"default": "32", "optional": true, "type": ["number"], "name": "width", "help": "Width of each tile in pixels."}, {"default": "32", "optional": true, "type": ["number"], "name": "height", "help": "Height of each tile in pixels."}, {"default": "0", "optional": true, "type": ["number"], "name": "margin", "help": "The amount of margin around the tilesheet."}, {"default": "0", "optional": true, "type": ["number"], "name": "spacing", "help": "The amount of spacing between each tile in the sheet."}, {"default": null, "optional": true, "type": ["object"], "name": "properties", "help": "Tileset properties."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Tileset"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "draw", "parameters": [{"default": null, "optional": false, "type": ["CanvasRenderingContext2D"], "name": "context", "help": "The context to draw the tile onto."}, {"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to draw to."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to draw to."}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index of the tile within the set to draw."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 102, "public": true, "help": "Draws a tile from this Tileset at the given coordinates on the context."}, {"name": "setImage", "parameters": [{"default": null, "optional": false, "type": ["Image"], "name": "image", "help": "The image this tileset will use to draw with."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 129, "public": true, "help": "Adds a reference from this Tileset to an Image stored in the Phaser.Cache."}, {"name": "setSpacing", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "tileMargin", "help": "The margin around the tiles in the sheet."}, {"default": null, "optional": true, "type": ["number"], "name": "tileSpacing", "help": "The spacing between the tiles in the sheet."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 166, "public": true, "help": "Sets tile spacing and margins."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "angle", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "This angle of the twist."}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "offset", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 62, "inlineHelp": "", "public": true, "help": "This point describes the the offset of the twist."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}, {"name": "radius", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 78, "inlineHelp": "", "public": true, "help": "This radius of the twist."}], "private": []}, "class": {"help": "This filter applies a twist effect making display objects appear twisted in the given direction.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.TwistFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "This helper function will automatically detect which renderer you should be using.\\nWebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\\nthe browser then this function will return a canvas renderer\\n", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "width=800", "help": "the width of the renderers view"}, {"default": null, "optional": false, "type": ["number"], "name": "height=600", "help": "the height of the renderers view"}, {"default": null, "optional": false, "type": ["object"], "name": "[options]", "help": "The optional renderer parameters"}, {"default": null, "optional": false, "type": ["HTMLCanvasElement"], "name": "[options.view]", "help": "the canvas to use as a view, optional"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.transparent=false]", "help": "If the render view is transparent, default false"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.antialias=false]", "help": "sets antialias (only applicable in chrome at the moment)"}, {"default": null, "optional": false, "type": ["boolean"], "name": "[options.preserveDrawingBuffer=false]", "help": "enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context"}, {"default": null, "optional": false, "type": ["number"], "name": "[options.resolution=1]", "help": "the resolution of the renderer retina would be 2"}], "static": true, "constructor": false, "extends": "", "name": "PIXI.autoDetectRenderer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": [{"name": "fragmentSrc", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 55, "inlineHelp": "", "public": false, "help": ""}, {"name": "passes", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 22, "inlineHelp": "", "public": false, "help": "An array of passes - some filters contain a few steps this array simply stores the steps in a liniear fashion.\\nFor example the blur filter has two passes blurX and blurY."}, {"name": "shaders", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 29, "inlineHelp": "", "public": false, "help": ""}, {"name": "uniforms", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "This is the base class for creating a PIXI filter. Currently only webGL supports filters.\\nIf you want to make a custom filter this should be your base class.", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "fragmentSrc", "help": "The fragment source in an array of strings."}, {"default": null, "optional": false, "type": ["object"], "name": "uniforms", "help": "An object containing the uniforms for this filter."}], "static": false, "constructor": true, "extends": "", "name": "PIXI.AbstractFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "blendModes", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": ""}, {"name": "currentBaseTexture", "default": null, "type": ["PIXI.BaseTexture"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": ""}, {"name": "currentBatchSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "", "public": true, "help": ""}, {"name": "defaultShader", "default": null, "type": ["PIXI.AbstractFilter"], "private": false, "readOnly": false, "protected": false, "line": 121, "inlineHelp": "", "public": true, "help": ""}, {"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "", "public": true, "help": ""}, {"name": "drawing", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "", "public": true, "help": ""}, {"name": "indices", "default": null, "type": ["Uint16Array"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "", "public": true, "help": "Holds the indices"}, {"name": "lastIndexCount", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "", "public": true, "help": ""}, {"name": "shaders", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "", "public": true, "help": ""}, {"name": "size", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "", "public": true, "help": "The number of images in the SpriteBatch before it flushes"}, {"name": "sprites", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "", "public": true, "help": ""}, {"name": "textures", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "", "public": true, "help": ""}, {"name": "vertSize", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 23, "inlineHelp": "", "public": true, "help": ""}, {"name": "vertices", "default": null, "type": ["Float32Array"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "", "public": true, "help": "Holds the vertices"}], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLSpriteBatch"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "begin", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": "The RenderSession object"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 168, "public": true, "help": ""}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 594, "public": true, "help": "Destroys the SpriteBatch."}, {"name": "end", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 179, "public": true, "help": ""}, {"name": "flush", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 423, "public": true, "help": "Renders the content and empties the current batch."}, {"name": "render", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Sprite"], "name": "sprite", "help": "the sprite to render when using this spritebatch"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 188, "public": true, "help": ""}, {"name": "renderBatch", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Texture"], "name": "texture", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "size", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "startIndex", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 548, "public": true, "help": ""}, {"name": "renderTilingSprite", "parameters": [{"default": null, "optional": false, "type": ["PIXI.TilingSprite"], "name": "sprite", "help": "the tilingSprite to render"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 303, "public": true, "help": "Renders a TilingSprite using the spriteBatch."}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 136, "public": true, "help": ""}, {"name": "start", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 584, "public": true, "help": ""}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 575, "public": true, "help": ""}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "dirty", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": ""}, {"name": "gray", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 46, "inlineHelp": "", "public": true, "help": "The strength of the gray. 1 will make the object black and white, 0 will make the object its normal color."}, {"name": "padding", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 41, "inlineHelp": "", "public": true, "help": ""}], "private": []}, "class": {"help": "This greyscales the palette of your Display Objects.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.AbstractFilter", "name": "PIXI.GrayFilter"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "syncUniforms", "parameters": [], "inheritedFrom": "PIXI.AbstractFilter", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 65, "public": true, "help": "Syncs the uniforms between the class object and the shaders."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "callbackContext", "default": null, "type": ["object"], "private": false, "readOnly": false, "protected": false, "line": 38, "inlineHelp": "The context under which the callbacks are run.", "public": true, "help": ""}, {"name": "connected", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 33, "inlineHelp": "Whether or not this particular gamepad is connected or not.", "public": true, "help": ""}, {"name": "deadZone", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 73, "inlineHelp": "Dead zone for axis feedback - within this value you won't trigger updates.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 21, "inlineHelp": "Local reference to game.", "public": true, "help": ""}, {"name": "index", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 27, "inlineHelp": "The gamepad index as per browsers data", "public": true, "help": ""}, {"name": "onAxisCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "This callback is invoked every time an axis is changed.", "public": true, "help": ""}, {"name": "onConnectCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 43, "inlineHelp": "This callback is invoked every time this gamepad is connected", "public": true, "help": ""}, {"name": "onDisconnectCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 48, "inlineHelp": "This callback is invoked every time this gamepad is disconnected", "public": true, "help": ""}, {"name": "onDownCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "This callback is invoked every time a button is pressed down.", "public": true, "help": ""}, {"name": "onFloatCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 68, "inlineHelp": "This callback is invoked every time a button is changed to a value where value > 0 and value < 1.", "public": true, "help": ""}, {"name": "onUpCallback", "default": null, "type": ["function"], "private": false, "readOnly": false, "protected": false, "line": 58, "inlineHelp": "This callback is invoked every time a gamepad button is released.", "public": true, "help": ""}], "private": [{"name": "_axes", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 109, "inlineHelp": "Current axes state.", "public": false, "help": ""}, {"name": "_axesLen", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 115, "inlineHelp": "Length of the _axes array.", "public": false, "help": ""}, {"name": "_buttons", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 97, "inlineHelp": "Array of Phaser.GamepadButton objects. This array is populated when the gamepad is connected.", "public": false, "help": ""}, {"name": "_buttonsLen", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 103, "inlineHelp": "Length of the _buttons array.", "public": false, "help": ""}, {"name": "_prevTimestamp", "default": null, "type": ["number"], "private": true, "readOnly": false, "protected": false, "line": 91, "inlineHelp": "Used to check for differences between earlier polls and current state of gamepads.", "public": false, "help": ""}, {"name": "_rawPad", "default": null, "type": ["object"], "private": true, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "The 'raw' gamepad data.", "public": false, "help": ""}, {"name": "padParent", "default": null, "type": ["Phaser.Gamepad"], "private": true, "readOnly": false, "protected": false, "line": 79, "inlineHelp": "Main Phaser Gamepad object", "public": false, "help": ""}]}, "class": {"help": "A single Phaser Gamepad", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Game"], "name": "game", "help": "Current game instance."}, {"default": null, "optional": false, "type": ["object"], "name": "padParent", "help": "The parent Phaser.Gamepad object (all gamepads reside under this)"}], "static": false, "constructor": true, "extends": "", "name": "Phaser.SinglePad"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addCallbacks", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "context", "help": "The context under which the callbacks are run."}, {"default": null, "optional": false, "type": ["object"], "name": "callbacks", "help": "Object that takes six different callbak methods:"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 129, "public": true, "help": "Add callbacks to the this Gamepad to handle connect / disconnect / button down / button up / axis change / float value buttons.\\n\\nonConnectCallback, onDisconnectCallback, onDownCallback, onUpCallback, onAxisCallback, onFloatCallback"}, {"name": "axis", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "axisCode", "help": "The index of the axis to check"}], "inheritedFrom": "", "private": false, "returns": {"help": "Axis value if available otherwise false", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 438, "public": true, "help": "Returns value of requested axis."}, {"name": "buttonValue", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "Button value if available otherwise null. Be careful as this can incorrectly evaluate to 0.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 527, "public": true, "help": "Returns the value of a gamepad button. Intended mainly for cases when you have floating button values, for example\\nanalog trigger buttons on the XBOX 360 controller."}, {"name": "connect", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "rawPad", "help": "The raw gamepad object"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 221, "public": true, "help": "Gamepad connect function, should be called by Phaser.Gamepad."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 302, "public": true, "help": "Destroys this object and associated callback references."}, {"name": "disconnect", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 264, "public": true, "help": "Gamepad disconnect function, should be called by Phaser.Gamepad."}, {"name": "getButton", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button, i.e. Phaser.Gamepad.BUTTON_0, Phaser.Gamepad.XBOX360_A, etc."}], "inheritedFrom": "", "private": false, "returns": {"help": "The GamepadButton object which you can store locally and reference directly.", "types": ["Phaser.GamepadButton"]}, "protected": false, "static": false, "inherited": false, "line": 151, "public": true, "help": "Gets a GamepadButton object from this controller to be stored and referenced locally.\\nThe GamepadButton object can then be polled, have events attached to it, etc."}, {"name": "isDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the button is pressed down.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 456, "public": true, "help": "Returns true if the button is pressed down."}, {"name": "isUp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the button is not currently pressed down.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 474, "public": true, "help": "Returns true if the button is not currently pressed."}, {"name": "justPressed", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check for."}, {"default": "250", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the button is considered as being just pressed."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the button is just pressed otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 510, "public": true, "help": "Returns the \"just pressed\" state of a button from this gamepad. Just pressed is considered true if the button was pressed down within the duration given (default 250ms)."}, {"name": "justReleased", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "The buttonCode of the button to check for."}, {"default": "250", "optional": true, "type": ["number"], "name": "duration", "help": "The duration below which the button is considered as being just released."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the button is just released otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 493, "public": true, "help": "Returns the \"just released\" state of a button from this gamepad. Just released is considered as being true if the button was released within the duration given (default 250ms)."}, {"name": "pollStatus", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 169, "public": true, "help": "Main update function called by Phaser.Gamepad."}, {"name": "processAxisChange", "parameters": [{"default": null, "optional": false, "type": ["object"], "name": "axisState", "help": "State of the relevant axis"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 332, "public": true, "help": "Handles changes in axis."}, {"name": "processButtonDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "Which buttonCode of this button"}, {"default": null, "optional": false, "type": ["object"], "name": "value", "help": "Button value"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 360, "public": true, "help": "Handles button down press."}, {"name": "processButtonFloat", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "Which buttonCode of this button"}, {"default": null, "optional": false, "type": ["object"], "name": "value", "help": "Button value (will range somewhere between 0 and 1, but not specifically 0 or 1."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 412, "public": true, "help": "Handles buttons with floating values (like analog buttons that acts almost like an axis but still registers like a button)"}, {"name": "processButtonUp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "buttonCode", "help": "Which buttonCode of this button"}, {"default": null, "optional": false, "type": ["object"], "name": "value", "help": "Button value"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 386, "public": true, "help": "Handles button release."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 543, "public": true, "help": "Reset all buttons/axes of this gamepad."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "hasLoaded", "default": null, "type": ["boolean"], "private": false, "readOnly": true, "protected": false, "line": 62, "inlineHelp": "", "public": true, "help": "[read-only] Set to true once the base texture has loaded"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "[read-only] The height of the base texture set when the image has loaded"}, {"name": "imageUrl", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 136, "inlineHelp": "", "public": true, "help": ""}, {"name": "premultipliedAlpha", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "", "public": true, "help": "Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)"}, {"name": "resolution", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 26, "inlineHelp": "", "public": true, "help": "The Resolution of the texture."}, {"name": "scaleMode", "default": "PIXI.scaleModes.LINEAR", "type": ["PIXI.scaleModes"], "private": false, "readOnly": false, "protected": false, "line": 53, "inlineHelp": "", "public": true, "help": "The scale mode to apply when scaling this texture"}, {"name": "source", "default": null, "type": ["Image"], "private": false, "readOnly": false, "protected": false, "line": 70, "inlineHelp": "", "public": true, "help": "The image source that is used to create the texture."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 35, "inlineHelp": "", "public": true, "help": "[read-only] The width of the base texture set when the image has loaded"}], "private": [{"name": "_dirty", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 100, "inlineHelp": "", "public": false, "help": ""}, {"name": "_glTextures", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 90, "inlineHelp": "", "public": false, "help": ""}, {"name": "_powerOf2", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 143, "inlineHelp": "", "public": false, "help": ""}]}, "class": {"help": "A texture stores the information that represents an image. All textures have a base texture.", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "source", "help": "the source object (image or canvas)"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "static": false, "constructor": true, "extends": "", "name": "PIXI.BaseTexture"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 156, "public": true, "help": "Destroys this base texture"}, {"name": "dirty", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 204, "public": true, "help": "Sets all glTextures to be dirty."}, {"name": "fromCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Canvas"], "name": "canvas", "help": "The canvas element source of the texture"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": false, "line": 263, "public": true, "help": "Helper function that creates a base texture from the given canvas element."}, {"name": "fromImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "imageUrl", "help": "The image url of the texture"}, {"default": null, "optional": false, "type": ["boolean"], "name": "crossorigin", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}], "inheritedFrom": "", "private": false, "returns": {"help": [], "types": []}, "protected": false, "static": true, "inherited": false, "line": 223, "public": true, "help": "Helper function that creates a base texture from the given image url.\\nIf the image is not in the base texture cache it will be created and loaded."}, {"name": "updateSourceImage", "parameters": [{"default": null, "optional": false, "type": ["string"], "name": "newSrc", "help": "the path of the image"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 192, "public": true, "help": "Changes the source image of the texture"}], "private": []}}, {"properties": {"protected": [{"name": "checked", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": true, "line": 36, "inlineHelp": "A disposable flag used by the Pointer class when performing priority checks.", "public": false, "help": ""}], "public": [{"name": "allowHorizontalDrag", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "Controls if the Sprite is allowed to be dragged horizontally.", "public": true, "help": ""}, {"name": "allowVerticalDrag", "default": "true", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 75, "inlineHelp": "Controls if the Sprite is allowed to be dragged vertically.", "public": true, "help": ""}, {"name": "boundsRect", "default": "null", "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 159, "inlineHelp": "A region of the game world within which the sprite is restricted during drag.", "public": true, "help": ""}, {"name": "boundsSprite", "default": "null", "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 165, "inlineHelp": "A Sprite the bounds of which this sprite is restricted during drag.", "public": true, "help": ""}, {"name": "bringToTop", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 81, "inlineHelp": "If true when this Sprite is clicked or dragged it will automatically be bought to the top of the Group it is within.", "public": true, "help": ""}, {"name": "consumePointerEvent", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 173, "inlineHelp": "", "public": true, "help": "If this object is set to consume the pointer event then it will stop all propogation from this object on.\\nFor example if you had a stack of 6 sprites with the same priority IDs and one consumed the event, none of the others would receive it."}, {"name": "draggable", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 153, "inlineHelp": "Is this sprite allowed to be dragged by the mouse? true = yes, false = no", "public": true, "help": ""}, {"name": "enabled", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 30, "inlineHelp": "If enabled the Input Handler will process input requests and monitor pointer activity.", "public": true, "help": ""}, {"name": "game", "default": null, "type": ["Phaser.Game"], "private": false, "readOnly": false, "protected": false, "line": 24, "inlineHelp": "A reference to the currently running game.", "public": true, "help": ""}, {"name": "isDragged", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 63, "inlineHelp": "true if the Sprite is being currently dragged.", "public": true, "help": ""}, {"name": "pixelPerfectAlpha", "default": "255", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 147, "inlineHelp": "The alpha tolerance threshold. If the alpha value of the pixel matches or is above this value, it's considered a hit.", "public": true, "help": ""}, {"name": "pixelPerfectClick", "default": "false", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 141, "inlineHelp": "Use a pixel perfect check when testing for clicks or touches on the Sprite.", "public": true, "help": "Set to true to use pixel perfect hit detection when checking if the pointer is over this Sprite when it's clicked or touched.\\nThe x/y coordinates of the pointer are tested against the image in combination with the InputHandler.pixelPerfectAlpha value.\\nWarning: This is expensive so only enable if you really need it."}, {"name": "pixelPerfectOver", "default": "false", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 132, "inlineHelp": "Use a pixel perfect check when testing for pointer over.", "public": true, "help": "Set to true to use pixel perfect hit detection when checking if the pointer is over this Sprite.\\nThe x/y coordinates of the pointer are tested against the image in combination with the InputHandler.pixelPerfectAlpha value.\\nWarning: This is expensive, especially on mobile (where it's not even needed!) so only enable if required. Also see the less-expensive InputHandler.pixelPerfectClick."}, {"name": "priorityID", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 45, "inlineHelp": "", "public": true, "help": "The priorityID is used to determine which game objects should get priority when input events occur. For example if you have\\nseveral Sprites that overlap, by default the one at the top of the display list is given priority for input events. You can\\nstop this from happening by controlling the priorityID value. The higher the value, the more important they are considered to the Input events."}, {"name": "scaleLayer", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 178, "inlineHelp": "EXPERIMENTAL: Please do not use this property unless you know what it does. Likely to change in the future.", "public": true, "help": ""}, {"name": "snapOffset", "default": "null", "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 87, "inlineHelp": "A Point object that contains by how far the Sprite snap is offset.", "public": true, "help": ""}, {"name": "snapOffsetX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 117, "inlineHelp": "This defines the top-left X coordinate of the snap grid.", "public": true, "help": ""}, {"name": "snapOffsetY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 123, "inlineHelp": "This defines the top-left Y coordinate of the snap grid..", "public": true, "help": ""}, {"name": "snapOnDrag", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 93, "inlineHelp": "When the Sprite is dragged this controls if the center of the Sprite will snap to the pointer on drag or not.", "public": true, "help": ""}, {"name": "snapOnRelease", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 99, "inlineHelp": "When the Sprite is dragged this controls if the Sprite will be snapped on release.", "public": true, "help": ""}, {"name": "snapX", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 105, "inlineHelp": "When a Sprite has snapping enabled this holds the width of the snap grid.", "public": true, "help": ""}, {"name": "snapY", "default": "0", "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 111, "inlineHelp": "When a Sprite has snapping enabled this holds the height of the snap grid.", "public": true, "help": ""}, {"name": "sprite", "default": null, "type": ["Phaser.Sprite"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "The Sprite object to which this Input Handler belongs.", "public": true, "help": ""}, {"name": "useHandCursor", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 51, "inlineHelp": "On a desktop browser you can set the 'hand' cursor to appear when moving over the Sprite.", "public": true, "help": ""}], "private": [{"name": "_dragPhase", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 184, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_pointerData", "default": null, "type": ["array"], "private": true, "readOnly": false, "protected": false, "line": 202, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_setHandCursor", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 57, "inlineHelp": "Did this Sprite trigger the hand cursor?", "public": false, "help": ""}, {"name": "_tempPoint", "default": null, "type": ["Phaser.Point"], "private": true, "readOnly": false, "protected": false, "line": 196, "inlineHelp": "Internal cache var.", "public": false, "help": ""}, {"name": "_wasEnabled", "default": null, "type": ["boolean"], "private": true, "readOnly": false, "protected": false, "line": 190, "inlineHelp": "Internal cache var.", "public": false, "help": ""}]}, "class": {"help": "The Input Handler is bound to a specific Sprite and is responsible for managing all Input events on that Sprite.", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Sprite"], "name": "sprite", "help": "The Sprite object to which this Input Handler belongs."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.InputHandler"}, "consts": [], "methods": {"protected": [{"name": "update", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": true, "static": false, "inherited": false, "line": 794, "public": false, "help": "Update."}, {"name": "validForInput", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "highestID", "help": "The highest ID currently processed by the Pointer."}, {"default": null, "optional": false, "type": ["number"], "name": "highestRenderID", "help": "The highest Render Order ID currently processed by the Pointer."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "includePixelPerfect", "help": "If this object has `pixelPerfectClick` or `pixelPerfectOver` set should it be considered as valid?"}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the object this InputHandler is bound to should be considered as valid for input detection.", "types": ["boolean"]}, "protected": true, "static": false, "inherited": false, "line": 419, "public": false, "help": "Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\\nThis is called by Phaser.Pointer and shouldn't typically be called directly."}], "static": [], "public": [{"name": "checkBoundsRect", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1421, "public": true, "help": "Bounds Rect check for the sprite drag"}, {"name": "checkBoundsSprite", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1470, "public": true, "help": "Parent Sprite Bounds check for the sprite drag."}, {"name": "checkPixel", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": "The x coordinate to check."}, {"default": null, "optional": false, "type": ["number"], "name": "y", "help": "The y coordinate to check."}, {"default": null, "optional": true, "type": ["Phaser.Pointer"], "name": "pointer", "help": "The pointer to get the x/y coordinate from if not passed as the first two parameters."}], "inheritedFrom": "", "private": false, "returns": {"help": "true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 728, "public": true, "help": "Runs a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true."}, {"name": "checkPointerDown", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}, {"default": "false", "optional": true, "type": ["boolean"], "name": "fastTest", "help": "Force a simple hit area check even if `pixelPerfectOver` is true for this object?"}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the pointer is down, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 658, "public": true, "help": "Checks if the given pointer is both down and over the Sprite this InputHandler belongs to.\\nUse the `fastTest` flag is to quickly check just the bounding hit area even if `InputHandler.pixelPerfectOver` is `true`."}, {"name": "checkPointerOver", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}, {"default": "false", "optional": true, "type": ["boolean"], "name": "fastTest", "help": "Force a simple hit area check even if `pixelPerfectOver` is true for this object?"}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 693, "public": true, "help": "Checks if the given pointer is over the Sprite this InputHandler belongs to.\\nUse the `fastTest` flag is to quickly check just the bounding hit area even if `InputHandler.pixelPerfectOver` is `true`."}, {"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 386, "public": true, "help": "Clean up memory."}, {"name": "disableDrag", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1230, "public": true, "help": "Stops this sprite from being able to be dragged. If it is currently the target of an active drag it will be stopped immediately. Also disables any set callbacks."}, {"name": "disableSnap", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1410, "public": true, "help": "Stops the sprite from snapping to a grid during drag or release."}, {"name": "downDuration", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "The number of milliseconds the pointer has been pressed down on the Sprite, or -1 if not over.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1173, "public": true, "help": "If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds."}, {"name": "enableDrag", "parameters": [{"default": "false", "optional": true, "type": ["boolean"], "name": "lockCenter", "help": "If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "bringToTop", "help": "If true the Sprite will be bought to the top of the rendering list in its current Group."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "pixelPerfect", "help": "If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box."}, {"default": "255", "optional": true, "type": ["boolean"], "name": "alphaThreshold", "help": "If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed."}, {"default": "null", "optional": true, "type": ["Phaser.Rectangle"], "name": "boundsRect", "help": "If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere."}, {"default": "null", "optional": true, "type": ["Phaser.Sprite"], "name": "boundsSprite", "help": "If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1196, "public": true, "help": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback"}, {"name": "enableSnap", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "snapX", "help": "The width of the grid cell to snap to."}, {"default": null, "optional": false, "type": ["number"], "name": "snapY", "help": "The height of the grid cell to snap to."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "onDrag", "help": "If true the sprite will snap to the grid while being dragged."}, {"default": "false", "optional": true, "type": ["boolean"], "name": "onRelease", "help": "If true the sprite will snap to the grid when released."}, {"default": "0", "optional": true, "type": ["number"], "name": "snapOffsetX", "help": "Used to offset the top-left starting point of the snap grid."}, {"default": "0", "optional": true, "type": ["number"], "name": "snapOffsetX", "help": "Used to offset the top-left starting point of the snap grid."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1390, "public": true, "help": "Make this Sprite snap to the given grid either during drag or when it's released.\\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels."}, {"name": "globalToLocalX", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "x", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1299, "public": true, "help": "Warning: EXPERIMENTAL"}, {"name": "globalToLocalY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "y", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1316, "public": true, "help": "Warning: EXPERIMENTAL"}, {"name": "isPixelPerfect", "parameters": [], "inheritedFrom": "", "private": false, "returns": {"help": "True if the this InputHandler has either `pixelPerfectClick` or `pixelPerfectOver` set to `true`.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 449, "public": true, "help": "Is this object using pixel perfect checking?"}, {"name": "justOut", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The time below which the pointer is considered as just out."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1107, "public": true, "help": "Returns true if the pointer has left the Sprite within the specified delay time (defaults to 500ms, half a second)"}, {"name": "justOver", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The time below which the pointer is considered as just over."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1091, "public": true, "help": "Returns true if the pointer has entered the Sprite within the specified delay time (defaults to 500ms, half a second)"}, {"name": "justPressed", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The time below which the pointer is considered as just over."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1123, "public": true, "help": "Returns true if the pointer has touched or clicked on the Sprite within the specified delay time (defaults to 500ms, half a second)"}, {"name": "justReleased", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}, {"default": null, "optional": false, "type": ["number"], "name": "delay", "help": "The time below which the pointer is considered as just out."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1139, "public": true, "help": "Returns true if the pointer was touching this Sprite, but has been released within the specified delay time (defaults to 500ms, half a second)"}, {"name": "overDuration", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "The number of milliseconds the pointer has been over the Sprite, or -1 if not over.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 1154, "public": true, "help": "If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds."}, {"name": "pointerDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "pointer", "help": "The index of the pointer to check. You can get this from Phaser.Pointer.id."}], "inheritedFrom": "", "private": false, "returns": {"help": "- True if the given pointer is down, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 494, "public": true, "help": "If the Pointer is down this returns true. Please note that it only checks if the Pointer is down, not if it's down over any specific Sprite."}, {"name": "pointerDragged", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the pointer is dragging an object, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 641, "public": true, "help": "Is this sprite being dragged by the mouse or not?"}, {"name": "pointerOut", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "index", "help": "The ID number of a Pointer to check. If you don't provide a number it will check all Pointers."}], "inheritedFrom": "", "private": false, "returns": {"help": "True if the given pointer (if a index was given, or any pointer if not) is out of this object.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 583, "public": true, "help": "Is the Pointer outside of this Sprite?"}, {"name": "pointerOver", "parameters": [{"default": null, "optional": true, "type": ["number"], "name": "index", "help": "The ID number of a Pointer to check. If you don't provide a number it will check all Pointers."}], "inheritedFrom": "", "private": false, "returns": {"help": "- True if the given pointer (if a index was given, or any pointer if not) is over this object.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 553, "public": true, "help": "Is the Pointer over this Sprite?"}, {"name": "pointerTimeDown", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "pointer", "help": "The index of the pointer to check. You can get this from Phaser.Pointer.id."}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 524, "public": true, "help": "A timestamp representing when the Pointer first touched the touchscreen."}, {"name": "pointerTimeOut", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 627, "public": true, "help": "A timestamp representing when the Pointer left the touchscreen."}, {"name": "pointerTimeOver", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 613, "public": true, "help": "A timestamp representing when the Pointer first touched the touchscreen."}, {"name": "pointerTimeUp", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 538, "public": true, "help": "A timestamp representing when the Pointer left the touchscreen."}, {"name": "pointerUp", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "pointer", "help": "The index of the pointer to check. You can get this from Phaser.Pointer.id."}], "inheritedFrom": "", "private": false, "returns": {"help": "- True if the given pointer is up, otherwise false.", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 509, "public": true, "help": "If the Pointer is up this returns true. Please note that it only checks if the Pointer is up, not if it's up over any specific Sprite."}, {"name": "pointerX", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "pointer", "help": "The index of the pointer to check. You can get this from Phaser.Pointer.id."}], "inheritedFrom": "", "private": false, "returns": {"help": "The x coordinate of the Input pointer.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 463, "public": true, "help": "The x coordinate of the Input pointer, relative to the top-left of the parent Sprite.\\nThis value is only set when the pointer is over this Sprite."}, {"name": "pointerY", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "pointer", "help": "The index of the pointer to check. You can get this from Phaser.Pointer.id."}], "inheritedFrom": "", "private": false, "returns": {"help": "The y coordinate of the Input pointer.", "types": ["number"]}, "protected": false, "static": false, "inherited": false, "line": 479, "public": true, "help": "The y coordinate of the Input pointer, relative to the top-left of the parent Sprite\\nThis value is only set when the pointer is over this Sprite."}, {"name": "reset", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 337, "public": true, "help": "Resets the Input Handler and disables it."}, {"name": "setDragLock", "parameters": [{"default": "true", "optional": true, "type": ["boolean"], "name": "allowHorizontal", "help": "To enable the sprite to be dragged horizontally set to true, otherwise false."}, {"default": "true", "optional": true, "type": ["boolean"], "name": "allowVertical", "help": "To enable the sprite to be dragged vertically set to true, otherwise false."}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1369, "public": true, "help": "Restricts this sprite to drag movement only on the given axis. Note: If both are set to false the sprite will never move!"}, {"name": "start", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "priority", "help": "Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other."}, {"default": null, "optional": false, "type": ["boolean"], "name": "useHandCursor", "help": "If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)"}], "inheritedFrom": "", "private": false, "returns": {"help": "The Sprite object to which the Input Handler is bound.", "types": ["Phaser.Sprite"]}, "protected": false, "static": false, "inherited": false, "line": 231, "public": true, "help": "Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority."}, {"name": "startDrag", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1251, "public": true, "help": "Called by Pointer when drag starts on this Sprite. Should not usually be called directly."}, {"name": "stop", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 366, "public": true, "help": "Stops the Input Handler from running."}, {"name": "stopDrag", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 1333, "public": true, "help": "Called by Pointer when drag is stopped on this Sprite. Should not usually be called directly."}, {"name": "updateDrag", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": false, "returns": {"help": "", "types": ["boolean"]}, "protected": false, "static": false, "inherited": false, "line": 1012, "public": true, "help": "Updates the Pointer drag on this Sprite."}], "private": [{"name": "_pointerOutHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 872, "public": false, "help": "Internal method handling the pointer out event."}, {"name": "_pointerOverHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 835, "public": false, "help": "Internal method handling the pointer over event."}, {"name": "_releasedHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 953, "public": false, "help": "Internal method handling the pointer released event."}, {"name": "_touchedHandler", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Pointer"], "name": "pointer", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 903, "public": false, "help": "Internal method handling the touched event."}, {"name": "addedToGroup", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 294, "public": false, "help": "Handles when the parent Sprite is added to a new Group."}, {"name": "removedFromGroup", "parameters": [], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 314, "public": false, "help": "Handles when the parent Sprite is removed from a Group."}]}}, {"properties": {"protected": [], "public": [{"name": "alpha", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 52, "inlineHelp": "", "public": true, "help": "The opacity of the object."}, {"name": "buttonMode", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 77, "inlineHelp": "", "public": true, "help": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover"}, {"name": "cacheAsBitmap", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 424, "inlineHelp": "", "public": true, "help": "Set if this display object is cached as a bitmap.\\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects.\\nTo remove simply set this property to 'null'"}, {"name": "children", "default": null, "type": ["array PIXI.DisplayObject"], "private": false, "readOnly": true, "protected": false, "line": 24, "inlineHelp": "", "public": true, "help": "[read-only] The array of children of this container."}, {"name": "defaultCursor", "default": null, "type": ["string"], "private": false, "readOnly": false, "protected": false, "line": 131, "inlineHelp": "", "public": true, "help": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true\\n"}, {"name": "filterArea", "default": null, "type": ["Phaser.Rectangle"], "private": false, "readOnly": false, "protected": false, "line": 168, "inlineHelp": "", "public": true, "help": "The area the filter is applied to like the hitArea this is used as more of an optimisation\\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle"}, {"name": "filters", "default": null, "type": ["array"], "private": false, "readOnly": false, "protected": false, "line": 388, "inlineHelp": "", "public": true, "help": "Sets the filters for the displayObject.\\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\\nTo remove filters simply set this property to 'null'"}, {"name": "height", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 65, "inlineHelp": "", "public": true, "help": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "hitArea", "default": null, "type": ["Phaser.Rectangle", "Phaser.Circle", "Phaser.Ellipse", "Phaser.Polygon"], "private": false, "readOnly": false, "protected": false, "line": 69, "inlineHelp": "", "public": true, "help": "This is the defined area that will pick up mouse / touch events. It is null by default.\\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)"}, {"name": "interactive", "default": "false", "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 327, "inlineHelp": "", "public": true, "help": "Indicates if the sprite will have touch and mouse interactivity. It is false by default"}, {"name": "mask", "default": null, "type": ["PIXI.Graphics"], "private": false, "readOnly": false, "protected": false, "line": 369, "inlineHelp": "", "public": true, "help": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\\nTo remove a mask, set this property to null."}, {"name": "parent", "default": null, "type": ["PIXI.DisplayObjectContainer"], "private": false, "readOnly": true, "protected": false, "line": 94, "inlineHelp": "", "public": true, "help": "[read-only] The display object container that contains this display object."}, {"name": "pivot", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 36, "inlineHelp": "", "public": true, "help": "The pivot point of the displayObject that it rotates around"}, {"name": "position", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 20, "inlineHelp": "", "public": true, "help": "The coordinate of the object relative to the local coordinates of the parent."}, {"name": "renderable", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 85, "inlineHelp": "", "public": true, "help": "Can this object be rendered"}, {"name": "rotation", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 44, "inlineHelp": "", "public": true, "help": "The rotation of the object in radians."}, {"name": "scale", "default": null, "type": ["Phaser.Point"], "private": false, "readOnly": false, "protected": false, "line": 28, "inlineHelp": "", "public": true, "help": "The scale factor of the object."}, {"name": "stage", "default": null, "type": ["PIXI.Stage"], "private": false, "readOnly": true, "protected": false, "line": 103, "inlineHelp": "", "public": true, "help": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage."}, {"name": "visible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 60, "inlineHelp": "", "public": true, "help": "The visibility of the object."}, {"name": "width", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 37, "inlineHelp": "", "public": true, "help": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set"}, {"name": "worldAlpha", "default": null, "type": ["number"], "private": false, "readOnly": true, "protected": false, "line": 112, "inlineHelp": "", "public": true, "help": "[read-only] The multiplied alpha of the displayObject"}, {"name": "worldVisible", "default": null, "type": ["boolean"], "private": false, "readOnly": false, "protected": false, "line": 346, "inlineHelp": "", "public": true, "help": "[read-only] Indicates if the sprite is globally visible."}, {"name": "x", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 734, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the x axis relative to the local coordinates of the parent."}, {"name": "y", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 749, "inlineHelp": "", "public": true, "help": "The position of the displayObject on the y axis relative to the local coordinates of the parent."}], "private": []}, "class": {"help": "A DisplayObjectContainer represents a collection of display objects.\\nIt is the base class of all display objects that act as a container for other objects.", "parameters": [], "static": false, "constructor": true, "extends": "PIXI.DisplayObject", "name": "PIXI.DisplayObjectContainer"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "addChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to add to the container"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 93, "public": true, "help": "Adds a child to the container."}, {"name": "addChildAt", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child to add"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to place the child in"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was added.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 106, "public": true, "help": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown"}, {"name": "click", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 238, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's left button"}, {"name": "generateTexture", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "resolution", "help": "The resolution of the texture being generated"}, {"default": null, "optional": false, "type": ["number"], "name": "scaleMode", "help": "Should be one of the PIXI.scaleMode consts"}, {"default": null, "optional": false, "type": ["PIXI.CanvasRenderer", "PIXI.WebGLRenderer"], "name": "renderer", "help": "The renderer used to generate the texture."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "a texture of the graphics object", "types": ["PIXI.Texture"]}, "protected": false, "static": false, "inherited": true, "line": 565, "public": true, "help": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times."}, {"name": "getBounds", "parameters": [], "inheritedFrom": "PIXI.DisplayObjectContainer", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 299, "public": true, "help": "Retrieves the bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration."}, {"name": "getChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child at the given index, if any.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 196, "public": true, "help": "Returns the child at the specified index"}, {"name": "getChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject instance to identify"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The index position of the child display object to identify", "types": ["number"]}, "protected": false, "static": false, "inherited": true, "line": 161, "public": true, "help": "Returns the index position of a child DisplayObject instance"}, {"name": "getLocalBounds", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The rectangular bounding area", "types": ["Phaser.Rectangle"]}, "protected": false, "static": false, "inherited": true, "line": 359, "public": true, "help": "Retrieves the non-global local bounds of the displayObjectContainer as a rectangle. The calculation takes all visible children into consideration."}, {"name": "mousedown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 244, "public": true, "help": "A callback that is used when the user clicks the mouse's left button down over the sprite"}, {"name": "mouseout", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 231, "public": true, "help": "A callback that is used when the users mouse leaves the displayObject"}, {"name": "mouseover", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 225, "public": true, "help": "A callback that is used when the users mouse rolls over the displayObject"}, {"name": "mouseup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 251, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "mouseupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 258, "public": true, "help": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject"}, {"name": "removeChild", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The DisplayObject to remove"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 213, "public": true, "help": "Removes a child from the container."}, {"name": "removeChildAt", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The index to get the child from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "The child that was removed.", "types": ["PIXI.DisplayObject"]}, "protected": false, "static": false, "inherited": true, "line": 228, "public": true, "help": "Removes a child from the specified index position."}, {"name": "removeChildren", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "beginIndex", "help": "The beginning position. Default value is 0."}, {"default": null, "optional": false, "type": ["number"], "name": "endIndex", "help": "The ending position. Default value is size of the container."}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 246, "public": true, "help": "Removes all children from this container that are within the begin and end indexes."}, {"name": "removeStageReference", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 400, "public": true, "help": "Removes the current stage reference from the container and all of its children."}, {"name": "rightclick", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 265, "public": true, "help": "A callback that is used when the users clicks on the displayObject with their mouse's right button"}, {"name": "rightdown", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 271, "public": true, "help": "A callback that is used when the user clicks the mouse's right button down over the sprite"}, {"name": "rightup", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 278, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject\\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject"}, {"name": "rightupoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 285, "public": true, "help": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject"}, {"name": "setChildIndex", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": "The child DisplayObject instance for which you want to change the index number"}, {"default": null, "optional": false, "type": ["number"], "name": "index", "help": "The resulting index number for the child display object"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 178, "public": true, "help": "Changes the position of an existing child in the display object container"}, {"name": "setStageReference", "parameters": [{"default": null, "optional": false, "type": ["PIXI.Stage"], "name": "stage", "help": "the stage that the container will have as its current stage reference"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 383, "public": true, "help": "Sets the containers Stage reference. This is the Stage that this object, and all of its children, is connected to."}, {"name": "swapChildren", "parameters": [{"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child", "help": ""}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "child2", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 136, "public": true, "help": "Swaps the position of 2 Display Objects within this container."}, {"name": "tap", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 296, "public": true, "help": "A callback that is used when the users taps on the sprite with their finger\\nbasically a touch version of click"}, {"name": "toGlobal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 592, "public": true, "help": "Calculates the global position of the display object"}, {"name": "toLocal", "parameters": [{"default": null, "optional": false, "type": ["Phaser.Point"], "name": "position", "help": "The world origin to calculate from"}, {"default": null, "optional": false, "type": ["PIXI.DisplayObject"], "name": "[from]", "help": "The DisplayObject to calculate the global position from"}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": {"help": "A point object representing the position of this object", "types": ["Phaser.Point"]}, "protected": false, "static": false, "inherited": true, "line": 606, "public": true, "help": "Calculates the local position of the display object relative to another point"}, {"name": "touchend", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 308, "public": true, "help": "A callback that is used when the user releases a touch over the displayObject"}, {"name": "touchendoutside", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 315, "public": true, "help": "A callback that is used when the user releases the touch that was over the displayObject\\nfor this callback to be fired, The touch must have started over the sprite"}, {"name": "touchstart", "parameters": [{"default": null, "optional": false, "type": ["PIXI.InteractionData"], "name": "interactionData", "help": ""}], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 302, "public": true, "help": "A callback that is used when the user touches over the displayObject"}, {"name": "updateCache", "parameters": [], "inheritedFrom": "PIXI.Sprite", "private": false, "returns": null, "protected": false, "static": false, "inherited": true, "line": 580, "public": true, "help": "Generates and updates the cached sprite for this object."}], "private": [{"name": "_renderCanvas", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 480, "public": false, "help": "Renders the object using the Canvas renderer"}, {"name": "_renderWebGL", "parameters": [{"default": null, "optional": false, "type": ["PIXI.RenderSession"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": true, "returns": null, "protected": false, "static": false, "inherited": false, "line": 421, "public": false, "help": "Renders the object using the WebGL renderer"}]}}, {"properties": {"protected": [], "public": [], "private": []}, "class": {"help": "", "parameters": [], "static": false, "constructor": true, "extends": "", "name": "PIXI.WebGLMaskManager"}, "consts": [], "methods": {"protected": [], "static": [], "public": [{"name": "destroy", "parameters": [], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 66, "public": true, "help": "Destroys the mask stack."}, {"name": "popMask", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "maskData", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": "an object containing all the useful parameters"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 55, "public": true, "help": "Removes the last filter from the filter stack and doesn't return it."}, {"name": "pushMask", "parameters": [{"default": null, "optional": false, "type": ["array"], "name": "maskData", "help": ""}, {"default": null, "optional": false, "type": ["object"], "name": "renderSession", "help": ""}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 34, "public": true, "help": "Applies the Mask and adds it to the current filter stack."}, {"name": "setContext", "parameters": [{"default": null, "optional": false, "type": ["PIXI.WebGLContext"], "name": "gl", "help": "the current WebGL drawing context"}], "inheritedFrom": "", "private": false, "returns": null, "protected": false, "static": false, "inherited": false, "line": 22, "public": true, "help": "Sets the drawing context to the one given in parameter."}], "private": []}}, {"properties": {"protected": [], "public": [{"name": "mask", "default": null, "type": ["number"], "private": false, "readOnly": false, "protected": false, "line": 19, "inlineHelp": "The CollisionGroup bitmask.", "public": true, "help": ""}], "private": []}, "class": {"help": "Collision Group", "parameters": [{"default": null, "optional": false, "type": ["number"], "name": "bitmask", "help": "The CollisionGroup bitmask."}], "static": false, "constructor": true, "extends": "", "name": "Phaser.Physics.P2.CollisionGroup"}, "consts": [], "methods": {"protected": [], "static": [], "public": [], "private": []}}];
