{"version":3,"file":"slate-react-placeholder.js","sources":["../../../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../src/index.js"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nvar index = (function (condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n});\n\nexport default index;\n","import invariant from 'tiny-invariant'\nimport React from 'react'\n\n/**\n * A plugin that renders a React placeholder for a given Slate node.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction SlateReactPlaceholder(options = {}) {\n  const { placeholder, when } = options\n\n  invariant(\n    placeholder,\n    'You must pass `SlateReactPlaceholder` an `options.placeholder` string.'\n  )\n\n  invariant(\n    when,\n    'You must pass `SlateReactPlaceholder` an `options.when` query.'\n  )\n\n  /**\n   * Decorate a match node with a placeholder mark when it fits the query.\n   *\n   * @param {Node} node\n   * @param {Editor} editor\n   * @param {Function} next\n   * @return {Array}\n   */\n\n  function decorateNode(node, editor, next) {\n    if (!editor.query(when, node)) {\n      return next()\n    }\n\n    const others = next()\n    const first = node.getFirstText()\n    const last = node.getLastText()\n    const decoration = {\n      anchor: { key: first.key, offset: 0 },\n      focus: { key: last.key, offset: last.text.length },\n      mark: { type: 'placeholder' },\n    }\n\n    return [...others, decoration]\n  }\n\n  /**\n   * Render an inline placeholder for the placeholder mark.\n   *\n   * @param {Object} props\n   * @param {Editor} editor\n   * @param {Function} next\n   * @return {Element}\n   */\n\n  function renderMark(props, editor, next) {\n    const { children, mark } = props\n\n    if (mark.type === 'placeholder') {\n      const style = {\n        pointerEvents: 'none',\n        display: 'inline-block',\n        width: '0',\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        opacity: '0.333',\n      }\n\n      return (\n        <span>\n          <span contentEditable={false} style={style}>\n            {placeholder}\n          </span>\n          {children}\n        </span>\n      )\n    }\n\n    return next()\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @return {Object}\n   */\n\n  return { decorateNode, renderMark }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default SlateReactPlaceholder\n"],"names":["SlateReactPlaceholder","options","placeholder","when","decorateNode","node","editor","next","query","others","first","getFirstText","last","getLastText","decoration","key","offset","text","length","type","renderMark","props","children","mark","style"],"mappings":";;;;;;;;AAAA,IAAI,YAAY,GAAG,aAAoB,KAAK,YAAY,CAAC;AACzD,IAAI,MAAM,GAAG,kBAAkB,CAAC;AAChC,IAAI,KAAK,IAAI,UAAU,SAAS,EAAE,OAAO,EAAE;EACzC,IAAI,SAAS,EAAE;IACb,OAAO;GACR;;EAED,IAAI,YAAY,EAAE;IAChB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;GACzB,MAAM;IACL,MAAM,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,IAAI,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;GAClD;CACF,CAAC;;;;;;;;;;;;ACTF;;;;;;;AAOA,SAASA,qBAAT,GAA6C;MAAdC,OAAc,uEAAJ,EAAI;MACnCC,WADmC,GACbD,OADa,CACnCC,WADmC;MACtBC,IADsB,GACbF,OADa,CACtBE,IADsB;;;QAIzCD,WADF,EAEE,wEAFF;;QAMEC,IADF,EAEE,gEAFF;;;;;;;;;;;WAcSC,YAAT,CAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,IAApC,EAA0C;QACpC,CAACD,OAAOE,KAAP,CAAaL,IAAb,EAAmBE,IAAnB,CAAL,EAA+B;aACtBE,MAAP;;;QAGIE,SAASF,MAAf;QACMG,QAAQL,KAAKM,YAAL,EAAd;QACMC,OAAOP,KAAKQ,WAAL,EAAb;QACMC,aAAa;cACT,EAAEC,KAAKL,MAAMK,GAAb,EAAkBC,QAAQ,CAA1B,EADS;aAEV,EAAED,KAAKH,KAAKG,GAAZ,EAAiBC,QAAQJ,KAAKK,IAAL,CAAUC,MAAnC,EAFU;YAGX,EAAEC,MAAM,aAAR;KAHR;;uCAMWV,MAAX,IAAmBK,UAAnB;;;;;;;;;;;;WAYOM,UAAT,CAAoBC,KAApB,EAA2Bf,MAA3B,EAAmCC,IAAnC,EAAyC;QAC/Be,QAD+B,GACZD,KADY,CAC/BC,QAD+B;QACrBC,IADqB,GACZF,KADY,CACrBE,IADqB;;;QAGnCA,KAAKJ,IAAL,KAAc,aAAlB,EAAiC;UACzBK,QAAQ;uBACG,MADH;iBAEH,cAFG;eAGL,GAHK;kBAIF,MAJE;oBAKA,QALA;iBAMH;OANX;;aAUE;;;;;YACQ,iBAAiB,KAAvB,EAA8B,OAAOA,KAArC;;SADF;;OADF;;;WAUKjB,MAAP;;;;;;;;;SASK,EAAEH,0BAAF,EAAgBgB,sBAAhB,EAAP;;;;;"}