"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = uploadSource;

var _lodash = require("lodash");

var _uploadClient = _interopRequireDefault(require("../clients/uploadClient"));

var _uuid = _interopRequireDefault(require("uuid"));

var _client = _interopRequireDefault(require("part:@sanity/base/client"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable camelcase */
function uploadSource(source) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var fileIsUrl = (0, _lodash.isString)(source); // Find content type

  var contentType = fileIsUrl ? 'application/json' : source.type;
  var url = '';

  if (fileIsUrl) {
    url = source;
  }

  var filename = options.filename,
      privacies = options.privacies;
  var muxBody = {
    input: url,
    playback_policy: privacies || ['public']
  };
  var query = {
    muxBody: JSON.stringify(muxBody),
    filename: filename
  };
  var body = '';

  if (!fileIsUrl) {
    body = source;
  }

  return _uploadClient.default.request({
    url: "/addons/mux/assets/".concat(_client.default.clientConfig.dataset),
    withCredentials: true,
    method: 'POST',
    headers: {
      'MUX-Proxy-UUID': _uuid.default.v4(),
      'Content-Type': contentType
    },
    timeout: 3600000,
    query: query,
    body: body
  });
}